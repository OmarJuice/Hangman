{"version":3,"sources":["actions/types.js","history.js","actions/index.js","components/Join/JoinForm.jsx","animations/index.js","components/ErrorMessage.jsx","components/Join/RoomsMeta.jsx","components/SVG/Title.jsx","components/Join/DictionaryForm.jsx","components/SVG/Loader.jsx","components/Join/Page.jsx","components/Room/Chat/MessageForm.jsx","components/Room/Hangman/Score.jsx","components/Room/Chat/Chat.jsx","components/Room/Chat/UserList.jsx","components/SVG/Timer.jsx","components/SVG/XSVG.jsx","components/SVG/ManSVG.jsx","components/Room/Hangman/Waiting.jsx","components/Room/Hangman/WordBlank.jsx","components/Room/Hangman/Letters.jsx","components/Room/Hangman/Hangman.jsx","components/Room/Hangman/GameInit.jsx","components/Room/Hangman/Screen.jsx","components/Room/GameRoom.jsx","components/App.jsx","reducers/defaultState.js","reducers/index.js","reducers/connectionReducer.js","reducers/chatReducer.js","reducers/roomReducer.js","reducers/errorReducer.js","reducers/loadingReducer.js","reducers/metaReducer.js","reducers/hangmanReducers.js","index.jsx"],"names":["ERROR","createHistory","socket","io","letterListener","dispatch","getState","on","game","type","emit","room","roomName","newMasterListener","JoinForm","renderInput","_ref","input","autoFocus","label","meta","inputClass","error","touched","labelClass","react_default","a","createElement","className","htmlFor","Object","assign","autoComplete","onSubmit","_ref2","name","toUpperCase","_this","props","initiateJoin","id","this","handleSubmit","redux_form_es","component","src","process","alt","srcset","Component","formWrapped","reduxForm","form","validate","_ref3","regex","errors","length","test","toLowerCase","enableReinitialize","connect","err","exists","message","homepageAnimation","noise","elem","i","repeatNoise","anime","targets","backgroundPositionX","concat","backgroundPositionY","loop","duration","complete","glitch","repeatGlitch","timeline","add","translateX","slideIn","translateY","value","elasticity","slideOut","pop","scale","autoplay","easing","hangmanAnimation","turnOn","scaleY","opacity","delay","changeScreen","flicker","opacityValues","Array","fill","map","e","ellipsis","elems","el","slideInAndFade","visibility","blink","shrinkToNothing","chatAnimation","fromDirection","svgAnimation","fall","path","arguments","undefined","track","wave","direction","obj","y2","x2","drawStroke","selector","x1","y1","ErrorMessage","cancelError","animate","finished","then","onClick","aria-label","state","RoomsMeta","renderRoomList","dictTextColors","Urban","Oxford","Free","key","dictionary","numUsers","class","Title","color1","colors","primary","color2","secondary","color3","tertiary","viewBox","componentId","x","y","style","fontFamily","fontSize","textAnchor","text","DictionaryForm","Fragment","submitDict","ids","forEach","ID","reversed","play","document","getElementById","classList","completed","remove","setAttribute","scrollIntoView","oxford","urban","free","user","Ellipsis","childNodes","height","width","cx","cy","r","color","JoinPage","selectedRoom","history","push","querySelector","textContent","joinSuccess","errorListener","askForDictListener","getUserMetaData","_this2","setState","SVG_Title","loading","Loader","components_ErrorMessage","Join_RoomsMeta","onRoomClick","bind","Join_DictionaryForm","Join_JoinForm","initialValues","_ref4","slicedToArray","_ref4$","score","from","data","MessageForm","createMessage","action","Score","scoreVal","timeout","getUserScore","scoreIncrease","setTimeout","restart","users","filter","myTurn","hangman","Chat","toggleChat","toggle","newMessageListener","prevProps","messages","querySelectorAll","chat","messagesList","contains","createdAt","fromMe","fromLabel","Hangman_Score","toggleMenu","aria-expanded","aria-hidden","renderMessages","Chat_MessageForm","messageList","objectSpread","moment","utc","local","format","UserList","renderUsers","highestScore","reduce","b","sort","master","updateUserListener","href","rel","target","renderHeader","_ref5","userList","payload","Timer","time","timer","getTimer","incorrect","incorrectIncrease","pause","setInterval","clearInterval","svg","skipMe","masterTimer","skipMaster","XSVG","componentDidUpdate","stroke","renderXs","strokeWidth","ManSVG","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","rightWave","leftWave","rightWaveReverse","leftWaveReverse","leftDoor","rightDoor","Promise","all","isChoosing","gameOver","reverse","SVG_XSVG","d","SVG_Timer","currentTurn","turn","skip","Waiting","clientWidth","SVG_ManSVG","word","join","WordBlank","renderText","increment","arr","isCorrect","selectedLetters","includes","Letters","selectLetter","letter","letterSelected","renderLetterButtons","remainingLetters","margin","padding","Hangman","mobileDisplayed","changeDisplay","nextTurnListener","bodyHeight","clientHeight","Hangman_WordBlank","hint","Hangman_Letters","myName","GameInit","getHeading","formValues","newWord","wordInfoListener","Error","hasFreeDict","info","GameInitForm","_ref6","Screen","renderScreen","Hangman_Waiting","Hangman_GameInit","Room_Hangman_Hangman","handleScreenClick","ChatRoom","wordSetListener","Hangman_Screen","connection","Chat_UserList","Room_Chat_Chat","App","bootServer","createConnection","Router","Route","exact","GameRoom","connected","request","XMLHttpRequest","open","onload","status","onerror","send","serverError","defaultState","numGames","combineReducers","formReducer","plugin","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","components_App"],"mappings":"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","file":"static/js/main.e44570d1.chunk.js","sourcesContent":["export const CONNECT = 'CONNECT'\nexport const NEW_MESSAGE = 'NEW_MESSAGE'\nexport const NEW_USER = 'NEW_USER'\nexport const JOIN_ROOM = 'JOIN_ROOM'\nexport const ASK_FOR_DICT = 'ASK_FOR_DICT'\nexport const ERROR = 'ERROR'\nexport const LOADING = 'LOADING'\nexport const UPDATE_LIST = 'UPDATE_LIST'\nexport const DISCONNECT = 'DISCONNECT'\nexport const META_DATA = 'META_DATA'\nexport const CANCEL_LOAD = 'CANCEL_LOAD'\n\nexport const NEW_MASTER = 'NEW_MASTER'\nexport const LETTER_SELECTED = 'LETTER_SELECTED'\nexport const NEW_WORD = 'NEW_WORD'\nexport const WORD_INFO = 'WORD_INFO'\nexport const MY_TURN = 'MY_TURN'\nexport const NEW_GAME = 'NEW_GAME'\nexport const SKIP = 'SKIP'","import createHistory from 'history/createBrowserHistory';\nexport default createHistory()","import io from 'socket.io-client';\nimport moment from 'moment';\nimport {\n    CONNECT,\n    DISCONNECT,\n    NEW_MESSAGE,\n    ERROR,\n    LOADING,\n    CANCEL_LOAD,\n    UPDATE_LIST,\n    ASK_FOR_DICT,\n    NEW_USER,\n    META_DATA,\n    LETTER_SELECTED,\n    NEW_MASTER,\n    NEW_WORD,\n    WORD_INFO,\n    MY_TURN,\n\n} from './types';\nimport history from '../history';\n;\n// Types not declared in 'types.js' are dummies for uniformity with redux\n// const socket = io('http://localhost:3001/')\nconst socket = io('https://hangman-oj.herokuapp.com/')\n\nexport const bootServer = () => dispatch => {\n    dispatch({\n        type: LOADING\n    })\n\n    var request = new XMLHttpRequest();\n    // request.open('GET', 'http://localhost:3001/', true);\n    request.open('GET', 'https://hangman-oj.herokuapp.com/', true);\n\n    request.onload = function () {\n        if (request.status >= 200 && request.status < 400) {\n\n        } else {\n            dispatch({\n                type: ERROR,\n                error: {\n                    exists: true,\n                    message: 'Server error'\n                }\n            })\n            dispatch({\n                type: CANCEL_LOAD\n            })\n        }\n    };\n    request.onerror = function () {\n        dispatch({\n            type: ERROR,\n            error: {\n                exists: true,\n                message: 'Server error'\n            }\n        })\n        dispatch({\n            type: CANCEL_LOAD\n        })\n    };\n\n    request.send();\n}\nexport const serverError = () => dispatch => {\n    dispatch({\n        type: ERROR,\n        error: {\n            exists: true,\n            message: 'Server error'\n        }\n    })\n}\nexport const createConnection = () => dispatch => {\n    socket.on('connect', () => {\n        dispatch({\n            type: CONNECT,\n            connected: socket.connected\n        })\n        dispatch({\n            type: CANCEL_LOAD\n        })\n    })\n}\nexport const createMessage = (text) => (dispatch, getState) => {\n    socket.emit('createMessage', {\n        from: getState().room.user.name,\n        room: getState().room.roomName,\n        text\n    })\n    dispatch({\n        type: 'CREATE_MESSAGE'\n    })\n}\nexport const newMessageListener = () => dispatch => {\n    socket.on('newMessage', (messageList) => {\n        dispatch({\n            type: NEW_MESSAGE,\n            messageList: messageList.map((message) => {\n                return { ...message, createdAt: moment.utc(message.createdAt).local().format('h:mm a') }\n            })\n        })\n    })\n}\nexport const initiateJoin = ({ name, room }) => dispatch => {\n    socket.emit('join', { name, room }, (err) => {\n        dispatch({\n            type: ERROR,\n            error: {\n                exists: true,\n                message: err.message\n            }\n        })\n        dispatch({\n            type: CANCEL_LOAD\n        })\n    })\n    dispatch({\n        type: LOADING\n    })\n}\nexport const askForDictListener = () => dispatch => {\n    socket.on('askForDict', ({ name, room }) => {\n        dispatch({\n            type: ASK_FOR_DICT,\n            room, name, dictionary: 'None'\n        })\n        dispatch({\n            type: CANCEL_LOAD\n        })\n    })\n}\nexport const submitDict = (dictionary) => (dispatch, getState) => {\n    socket.emit('join', {\n        name: getState().room.user.name,\n        room: getState().room.roomName,\n        dictionary\n    })\n    dispatch({\n        type: LOADING\n    })\n}\nexport const joinSuccess = () => (dispatch, getState) => {\n    socket.on('joinSuccess', ([{ name, room, id, score }, dictionary]) => {\n\n        dispatch({\n            type: CANCEL_LOAD\n        })\n        dispatch({\n            type: NEW_USER,\n            user: {\n                name, id, score\n            },\n            room,\n            dictionary\n        })\n        history.push(`/Hangman/${room}`)\n        socket.emit('createMessage', {\n            from: 'Admin',\n            text: `Welcome to ${room}, ${name}!`,\n            room: getState().room.roomName\n        })\n        dispatch({\n            type: 'CREATE_MESSAGE'\n        })\n        dispatch({\n            type: ERROR,\n            error: {\n                exists: false,\n                message: ''\n            }\n        })\n    })\n\n}\nexport const updateUserListener = () => dispatch => {\n    socket.on('updateUserList', ({ userList }) => {\n        dispatch({\n            type: UPDATE_LIST,\n            payload: userList\n        })\n    })\n}\nexport const errorListener = () => dispatch => {\n    socket.on('errorMessage', (message) => {\n        dispatch({\n            type: ERROR,\n            error: {\n                exists: true,\n                message\n            }\n        })\n        dispatch({\n            type: CANCEL_LOAD\n        })\n    })\n}\nexport const cancelError = () => dispatch => {\n    dispatch({\n        type: ERROR,\n        error: {\n            exists: false,\n            message: ''\n        }\n    })\n}\n\nexport const disconnectListener = () => dispatch => {\n    socket.on('disconnect', () => {\n        dispatch({\n            type: DISCONNECT\n        })\n    })\n}\nexport const getUserMetaData = () => dispatch => {\n    socket.on('updateMetaData', (data) => {\n        dispatch({\n            type: META_DATA,\n            data\n        })\n    })\n}\nexport const letterSelected = (letter) => (dispatch, getState) => {\n\n    if (getState().hangman.myTurn) {\n        socket.emit('selectingLetter', { letter, room: getState().room.roomName })\n        dispatch({\n            type: 'SELECTING_LETTER'\n        })\n    }\n\n}\nexport const letterListener = () => (dispatch, getState) => {\n    socket.on('letterSelected', (game) => {\n        dispatch({\n            type: LETTER_SELECTED,\n            game\n        })\n        socket.emit('isItMyTurn', getState().room.roomName)\n    })\n}\nexport const newMasterListener = () => dispatch => {\n    socket.on('newMaster', (game) => {\n        dispatch({\n            type: NEW_MASTER,\n            game\n        })\n    })\n}\nexport const newWord = ({ word, hint }) => (dispatch, getState) => {\n    socket.emit('newWord', { word, hint, room: getState().room.roomName })\n    dispatch({\n        type: 'WORD_CHOSEN'\n    })\n    dispatch({\n        type: LOADING\n    })\n}\nexport const wordSetListener = () => (dispatch, getState) => {\n    socket.on('wordSet', (game) => {\n        dispatch({\n            type: NEW_WORD,\n            game\n        })\n        dispatch({\n            type: CANCEL_LOAD\n        })\n        socket.emit('selectingLetter', { letter: null, room: getState().room.roomName })\n    })\n}\nexport const wordInfoListener = () => (dispatch) => {\n    socket.on('wordInfo', (info) => {\n        dispatch({\n            type: CANCEL_LOAD\n        })\n        dispatch({\n            type: WORD_INFO, info\n        })\n    })\n}\nexport const nextTurnListener = () => (dispatch, getState) => {\n    socket.on('nextTurn', (game) => {\n        const myName = getState().room.user.name\n\n        if (myName && game.turn.name && game.turn.name === myName) {\n            dispatch({\n                type: MY_TURN,\n                myTurn: true,\n                game\n            })\n        } else {\n            dispatch({\n                type: MY_TURN,\n                myTurn: false,\n                game\n            })\n        }\n    })\n}\nexport const skipMe = () => (dispatch, getState) => {\n    socket.emit('skipMyTurn', getState().room.roomName)\n    dispatch({\n        type: 'SKIP'\n    })\n}\nexport const skipMaster = () => (dispatch, getState) => {\n    socket.emit('skipMaster', getState().room.roomName)\n    dispatch({\n        type: 'SKIP_MASTER'\n    })\n}","import React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux'\nimport { initiateJoin } from '../../actions';\nclass JoinForm extends Component {\n\n    renderInput = ({ input, autoFocus, label, meta }) => {\n        const inputClass = meta.error && meta.touched ? 'input is-danger' : 'input is-dark'\n        const labelClass = meta.error && meta.touched ? 'label has-text-light has-background-danger has-text-centered' : 'label has-text-light has-background-dark has-text-centered'\n        return (\n            <div className=\"field\">\n                <label htmlFor=\"\"\n                    className={labelClass}>\n                    {meta.touched && meta.error ? meta.error : label}:\n                 </label>\n                <div className=\"control\">\n\n                    <input className={inputClass} type=\"text\" {...input} autoFocus={autoFocus} autoComplete=\"off\" />\n                </div>\n            </div>\n        )\n    }\n    onSubmit = ({ name, room }) => {\n        room = room.toUpperCase()\n        this.props.initiateJoin({ name, room })\n    }\n    render() {\n        return (\n            <form id=\"join-form\" onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"form has-text-centered play\">\n                <div className=\"field\">\n                    <div className=\"control\">\n                        <Field name=\"name\" component={this.renderInput} autoFocus={true} label=\"Enter a username\" />\n                    </div>\n                </div>\n                <div className=\"field\">\n                    <div className=\"control\">\n                        <Field name=\"room\" component={this.renderInput} autoFocus={false} label=\"Enter a room\" />\n                    </div>\n                </div>\n                <div className=\"control has-text-centered\">\n                    <button className=\"button is-dark is-large\"><span className=\"icon\"><img src={process.env.PUBLIC_URL + '/images/hangmanLogo.svg'} alt=\"\" srcset=\"\" /></span></button>\n                </div>\n            </form>\n        );\n    }\n}\n\nconst validate = ({ name, room }) => {\n    const regex = /\\W+/g\n    const errors = {}\n    if (!name || name.length < 1) {\n        errors.name = \"Name Required\"\n    }\n    if (name && regex.test(name)) {\n        errors.name = \"Invalid Name\"\n    }\n    if (name && name.length > 10) {\n        errors.name = \"Name too Long\"\n    }\n    if (name && name.toLowerCase() === 'admin') {\n        errors.name = \"You cannot have that name\"\n    }\n    if (!room) {\n        errors.room = \"Room Required\"\n    }\n    if (room && regex.test(room)) {\n        errors.room = \"Invalid room name\"\n    }\n    if (room && room.length > 12) {\n        errors.room = \"Room name too long\"\n    }\n\n    return errors\n}\n\n\nconst formWrapped = reduxForm({\n    form: \"JoinForm\",\n    validate,\n    enableReinitialize: true\n})(JoinForm);\n\nexport default connect(null, { initiateJoin })(formWrapped)\n","import anime from 'animejs';\n\n//home page title\n//screen on\n//screen flicker\n//hangman svg\nexport const homepageAnimation = {\n    noise: (elem) => {\n        let i = 0\n        function repeatNoise() {\n            return anime({\n                targets: elem,\n                backgroundPositionX: () => `${i === 0 || i === 3 ? 0 : 100}px`,\n                backgroundPositionY: () => `${i === 2 || i === 3 ? 100 : 0}px`,\n                loop: 1,\n                duration: 10,\n                complete: () => {\n                    i++;\n                    if (i > 3) {\n                        i = 0\n                    }\n                    repeatNoise()\n                }\n            })\n        }\n        repeatNoise()\n    },\n    glitch: (elem) => {\n        let i = 1\n        function repeatGlitch() {\n            return anime.timeline().add({\n                targets: `${elem}-secondary`,\n                translateX: .5 * i,\n\n                duration: 250,\n            }).add({\n                targets: `${elem}-tertiary`,\n                translateX: -.5 * i,\n\n                duration: 250,\n                complete: () => {\n                    i *= -1;\n                    repeatGlitch()\n                }\n            })\n        }\n        repeatGlitch()\n    },\n    slideIn: (elem) => {\n        return anime({\n            targets: elem,\n            translateY: [{ value: ['+=200', 0], duration: 1000, elasticity: 500 }],\n        })\n    },\n    slideOut: (elem) => {\n        return anime({\n            targets: elem,\n            translateY: [{ value: [0, 1000], duration: 1000, elasticity: 500 }],\n        })\n    },\n    pop: (elem) => {\n        return anime({\n            targets: elem,\n            scale: 1.1,\n            duration: 250,\n            autoplay: false,\n            easing: 'easeInOutBack'\n        })\n    }\n\n}\nexport const hangmanAnimation = {\n    turnOn: (elem) => {\n        return anime({\n            targets: elem,\n            scaleY: [{ value: ['*=.1', 1], duration: 1500, elasticity: 0 }],\n            opacity: [{ value: ['*=.1', 1], delay: 500, duration: 1500, elasticity: 1000 }]\n        })\n    },\n    changeScreen: (elem) => {\n        return anime({\n            targets: elem,\n            opacity: [{ value: ['*=.75', 1], duration: 2000, elasticity: 1000 }]\n        })\n    },\n    flicker: (elem) => {\n        const opacityValues = Array(20).fill('x').map((e, i) => i % 2 === 0 ? .975 : 1)\n        return anime({\n            targets: elem,\n            opacity: opacityValues,\n            duration: 100,\n            loop: true\n        })\n    },\n    ellipsis: (elems) => {\n        return anime({\n            targets: elems,\n            translateY: [\n                { value: -40, duration: 1000, easing: 'easeOutCubic' },\n                { value: 0, duration: 1000, easing: 'easeInCubic' }\n            ],\n            loop: true,\n\n            delay: (el, i) => {\n                return i * 666\n            }\n        })\n    },\n    slideInAndFade: (elem) => {\n        return anime({\n            targets: elem,\n            translateY: [{ value: ['+=80', 0], duration: 1000, easing: 'linear' }],\n            opacity: [{ value: ['*=0', 1, 1, 0], duration: 1000, easing: 'linear' }],\n            visibility: { value: 'hidden', delay: 1000, duration: 1 },\n            autoplay: false\n        })\n    },\n    blink: (elem) => {\n        return anime({\n            targets: elem,\n            opacity: [\n                { value: 1, duration: 500, easing: 'easeInQuad' },\n                { value: 0, duration: 500, easing: 'easeInQuad' }\n            ],\n            loop: true,\n            duration: 1000,\n            easing: 'linear',\n            autoplay: false\n        })\n    },\n    shrinkToNothing: (elem) => {\n        return anime({\n            targets: elem,\n            scale: 0,\n            duration: 500,\n            easing: 'easeInOutBack'\n        })\n    }\n\n}\nexport const chatAnimation = {\n    slideIn: (elem, fromDirection) => {\n        return anime({\n            targets: elem,\n            translateX: [{ value: [fromDirection === 'left' ? -100 : 100, 0], duration: 1000, elasticity: 500 }]\n        })\n    },\n    inflate: (elem) => {\n        return anime({\n            targets: elem,\n            scale: [\n                { value: 2, duration: 333, elasticity: 1000, easing: 'easeOutCubic' },\n                { value: 1, duration: 333, elasticity: 1000, easing: 'easeInCubic' }\n            ]\n        })\n    }\n}\n\nexport const svgAnimation = {\n    fall: (elem, path, delay = 0) => {\n        const track = anime.path(path);\n        try {\n            return anime({\n                targets: elem,\n                translateY: track('y'),\n                duration: 500,\n                easing: 'easeInQuad',\n                delay\n            })\n        } catch (e) {\n\n        }\n    },\n    wave: (elem, path, loop = true, autoplay = true, { direction, delay, duration, easing, elasticity } = {}) => {\n        const track = anime.path(path);\n        const obj = {\n            targets: elem,\n            y2: track('y'),\n            x2: track('x'),\n            duration: duration || 1000,\n            delay: delay !== undefined ? delay : 0,\n            loop,\n            direction: direction || 'normal',\n            autoplay,\n\n        }\n        if (elasticity) {\n            obj.elasticity = elasticity\n        }\n        if (easing) {\n            obj.easing = easing\n        }\n        return anime(obj)\n    },\n    drawStroke: (elem, delay) => {\n        return anime({\n            targets: elem.selector,\n            x2: { value: [elem.x1, elem.x2], duration: 500 },\n            y2: { value: [elem.y1, elem.y2], duration: 500 },\n            delay: delay ? 500 : 0,\n            easing: 'linear',\n            autoplay: true,\n            loop: false\n        })\n    }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { cancelError } from '../actions';\nimport { homepageAnimation as animate } from '../animations';\n\nclass ErrorMessage extends Component {\n    componentDidMount() {\n        animate.slideIn('#error-message')\n    }\n    cancelError = () => {\n        animate.slideOut('#error-message')\n            .finished.then(() => {\n                this.props.cancelError()\n            })\n    }\n    render() {\n        return (\n\n            <article id=\"error-message\" className={this.props.error.exists ? 'message is-danger' : 'message is-invisible'}>\n                <div className=\"message-header\">\n                    <p>{'Error!'}</p>\n                    <button onClick={this.cancelError} className=\"delete\" aria-label=\"delete\"></button>\n                </div>\n                <div className=\"message-body\">\n                    {this.props.error.message}\n                </div>\n            </article>\n\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        error: state.error\n    }\n}\nexport default connect(mapStateToProps, { cancelError })(ErrorMessage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass RoomsMeta extends Component {\n\n\n    renderRoomList = () => {\n        const dictTextColors = {\n            Urban: 'warning',\n            Oxford: 'info',\n            Free: 'light'\n        }\n        return this.props.meta.map((room) => {\n            return (\n                <li key={room.name}\n                    className=\"list-item play\">\n                    <p>\n                        <strong className={room.name.length > 10 ? 'is-size-7' : null}>{room.name}</strong>\n                        <em className={`has-text-${dictTextColors[room.dictionary]}`}>{room.dictionary}</em>\n                        <span className={`num ${room.numUsers > 4 ? 'has-text-danger anton' : 'anton'}`}>{room.numUsers} <span className=\"icon\"><i class=\"fas fa-users\"></i></span></span>\n                        <span onClick={this.props.onClick(room.name)} className=\"icon has-text-success\"><i className=\"fas fa-sign-in-alt\"></i></span>\n                    </p>\n\n                </li >\n            )\n        })\n    }\n    render() {\n        return (\n\n            <div id=\"rooms-meta\" className=\"card\">\n                <header className=\"card-header\">\n                    <p className=\"card-header-title anton\">\n                        Active Rooms: {this.props.meta.length}\n                    </p>\n\n                </header>\n                <div className=\"card-content\">\n\n                    <ul className=\"list has-background-dark\">\n                        {this.renderRoomList()}\n                    </ul>\n\n                </div>\n\n            </div>\n\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        meta: state.meta\n    }\n}\nexport default connect(mapStateToProps, null)(RoomsMeta);\n","import React, { Component } from 'react';\nimport { homepageAnimation as animate } from '../../animations';\n\nclass Title extends Component {\n\n    componentDidMount() {\n        animate.glitch('#title')\n    }\n    render() {\n        let color1 = this.props.colors.primary,\n            color2 = this.props.colors.secondary,\n            color3 = this.props.colors.tertiary\n        return (\n\n            <svg viewBox=\"0 0 140 35\">\n                <text id={`${this.props.componentId}-tertiary`}>\n                    <tspan x=\"70\" y=\"35\" style={{ fill: color3, fontFamily: '\"Anton\", sans-serif', fontSize: 35 }} textAnchor=\"middle\" >\n                        {this.props.text}\n                    </tspan>\n\n                </text>\n                <text id={`${this.props.componentId}-secondary`}>\n                    <tspan x=\"70\" y=\"35\" style={{ fill: color2, fontFamily: '\"Anton\", sans-serif', fontSize: 35 }} textAnchor=\"middle\" >\n                        {this.props.text}\n                    </tspan>\n\n                </text>\n                <text id={this.props.componentId}>\n                    <tspan x=\"70\" y=\"35\" style={{ fill: color1, fontFamily: '\"Anton\", sans-serif', fontSize: 35 }} textAnchor=\"middle\" >\n                        HANGMAN\n                    </tspan>\n\n                </text>\n\n            </svg>\n\n        );\n    }\n}\n\nexport default Title;\n","import React, { Component } from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { submitDict } from '../../actions';\nimport { homepageAnimation as animate } from '../../animations';\n\n\nclass DictionaryForm extends Component {\n    componentDidMount() {\n        document.getElementById('dict-form').scrollIntoView()\n        this.pop = {\n            oxford: animate.pop('#oxford-label'),\n            urban: animate.pop('#urban-label'),\n            free: animate.pop('#free-label'),\n        }\n        this.ids = ['oxford', 'urban', 'free']\n    }\n    renderInput = ({ input, label, meta, value }) => {\n        const labelClass = 'radio-label has-background-dark label'\n        return (\n            <>\n                <label className={labelClass} >\n                    {label ? <figure className=\"image is-3by1\">\n                        <img id={`${label}-logo`} src={`./images/${label}logo.png`} alt={`${label} Dictionary`} />\n                    </figure> : <div className=\"anton is-size-1\">Free For All</div>}\n\n                </label>\n\n                <div className=\"control\">\n                    <input className={input} type=\"radio\" {...input} value={value} />\n                </div>\n            </>\n        )\n    }\n    onSubmit = ({ dictionary }) => {\n        this.props.submitDict(dictionary)\n    }\n    onClick = (id) => {\n\n        return () => {\n            this.ids.forEach((ID) => {\n                if (ID === id) {\n                    this.pop[ID].reversed = false\n                    this.pop[ID].play()\n                    document.getElementById(`${ID}-label`).classList.add('selected')\n                } else {\n                    this.pop[ID].reversed = true\n                    if (this.pop[ID].completed) {\n                        this.pop[ID].play()\n                    }\n                    document.getElementById(`${ID}-label`).classList.remove('selected')\n                }\n\n            })\n            document.getElementById(id).setAttribute('checked', true)\n        }\n\n    }\n    render() {\n        return (\n            <form id=\"dict-form\" onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"form has-text-centered play\">\n                <div className=\"field\">\n                    <label id=\"oxford-label\" className=\"label dict-label has-background-dark\">\n                        <Field id=\"oxford\" onClick={this.onClick('oxford')} name=\"dictionary\" component=\"input\" type=\"radio\" value=\"Oxford\" />\n                        {' '}\n                        <figure className=\"image is-3by1\">\n                            <img id=\"Oxford-logo\" src={process.env.PUBLIC_URL + \"/images/Oxfordlogo.png\"} alt=\"Oxford Dictionary\" />\n                        </figure>\n                    </label >\n                    <label id=\"urban-label\" className=\"label dict-label has-background-dark\">\n                        <Field id=\"urban\" onClick={this.onClick('urban')} name=\"dictionary\" component=\"input\" type=\"radio\" value=\"Urban\" />\n                        {' '}\n                        <figure className=\"image is-3by1\">\n                            <img id=\"Urban-logo\" src={process.env.PUBLIC_URL + \"/images/Urbanlogo.png\"} alt=\"Urban Dictionary\" />\n                        </figure>\n                    </label>\n                    <label id=\"free-label\" className=\"label dict-label has-background-dark is-size-1 is-size-2-tablet is-size-3-mobile anton\">\n                        <Field id=\"free\" onClick={this.onClick('free')} name=\"dictionary\" component=\"input\" type=\"radio\" value=\"Free\" />\n                        {' '}\n                        <span>Free For All</span>\n                    </label>\n                </div>\n                <div className=\"control has-text-centered\">\n                    <button className=\"button is-dark is-large\"><span className=\"icon\"><img src={process.env.PUBLIC_URL + '/images/hangmanLogo.svg'} alt=\"\" srcset=\"\" /></span></button>\n                </div>\n            </form>\n        );\n    }\n}\nconst validate = ({ dictionary }) => {\n    const errors = {}\n    if (!dictionary) {\n        errors.dictionary = 'You must choose one'\n    }\n    return errors\n}\nconst formWrapped = reduxForm({\n    form: 'ChooseDict',\n    validate\n})(DictionaryForm);\n\nexport default connect(null, { submitDict })(formWrapped)\n","import React, { Component } from 'react';\nimport { hangmanAnimation as animate } from '../../animations';\n\nclass Ellipsis extends Component {\n    componentDidMount() {\n        animate.ellipsis(document.getElementById('ellipsis').childNodes)\n    }\n    render() {\n        return (\n            <svg height={`${this.props.scale * 100 || 100}%`} width={`${this.props.scale * 100 || 100}%`} id=\"ellipsis\" viewBox=\"0 0 90 65\">\n                <circle cx=\"17\" cy=\"55\" r=\"10\" fill={this.props.color || 'hsl(0, 0%, 21%)'}></circle>\n                <circle cx=\"45\" cy=\"55\" r=\"10\" fill={this.props.color || 'hsl(0, 0%, 21%)'}></circle>\n                <circle cx=\"73\" cy=\"55\" r=\"10\" fill={this.props.color || 'hsl(0, 0%, 21%)'}></circle>\n            </svg>\n        );\n    }\n}\n\nexport default Ellipsis;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport history from '../../history';\nimport JoinForm from './JoinForm';\nimport { joinSuccess, errorListener, getUserMetaData, askForDictListener } from '../../actions';\nimport ErrorMessage from '../ErrorMessage';\nimport RoomsMeta from './RoomsMeta';\nimport { homepageAnimation as animate } from '../../animations';\nimport Title from '../SVG/Title';\nimport DictionaryForm from './DictionaryForm';\nimport Loader from '../SVG/Loader';\n\nclass JoinPage extends Component {\n    state = {\n        selectedRoom: ''\n    }\n    componentDidMount() {\n        if (this.props.room) {\n            return history.push(`/Hangman/${this.props.room}`)\n        }\n        document.querySelector('title').textContent = 'Join | Hangman'\n        document.getElementById('css-load').setAttribute('href', process.env.PUBLIC_URL + \"/joinStyle.css\")\n        this.props.joinSuccess()\n        this.props.errorListener()\n        this.props.askForDictListener()\n        this.props.getUserMetaData()\n        animate.noise('.noise')\n    }\n    onRoomClick(room) {\n        return () => {\n            this.setState({\n                selectedRoom: room\n            })\n        }\n\n    }\n\n    render() {\n        return (\n            <div id=\"join-container\" className=\"columns is-centered\">\n                <div className=\"column is-one-third has-text-centered\">\n\n                    {/* <h1 id=\"title\" className=\"title is-1 anton has-text-white glitch\" datatext=\"HANGMAN\">HANGM<i className=\"fas fa-male\"></i>N</h1> */}\n                    <Title componentId=\"title\" text={`HANGMAN`} colors={{ primary: 'white', secondary: '#3D9100', tertiary: '#C26EFF' }} />\n                    {this.props.loading ? <> <span className=\"play\">Requesting Server</span><Loader scale={.15} color='white' /> </> : null}\n                    {this.props.error.exists ? <ErrorMessage /> : <RoomsMeta onClick={this.onRoomClick.bind(this)} />}\n\n                    <div className=\"box noise\">\n                        <div className=\"columns is-centered is-mobile\">\n                            <div className={!this.props.dictionary ? \"column is-four-fifths\" : \"column is-two-thirds\"}>\n                                {/* <DictionaryForm /> */}\n                                {!this.props.dictionary ? <JoinForm initialValues={{ room: this.state.selectedRoom }} /> : <DictionaryForm />}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        error: state.error,\n        loading: state.loading,\n        dictionary: state.room.dictionary,\n        room: state.room.roomName\n    }\n}\nexport default connect(mapStateToProps, { joinSuccess, errorListener, getUserMetaData, askForDictListener })(JoinPage);\n","import React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { createMessage } from '../../../actions';\n\nclass MessageForm extends Component {\n\n\n    onSubmit = ({ text }) => {\n        !text || this.props.createMessage(text)\n    }\n    renderInput = ({ input, id }) => {\n        return <input className=\"input\" id={id} type=\"text\" {...input} autoComplete=\"off\" autoFocus={true} />\n    }\n    render() {\n        return (\n            <form id=\"message-form\" className=\"form box\" action=\"\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                <div id=\"message-send\" className=\"columns is-mobile is-centered is-gapless\">\n                    <div className=\"column is-10\">\n                        <Field name=\"text\" component={this.renderInput} id=\"message-input\" />\n                    </div>\n                    <div className=\"column is-2\">\n                        <button className=\"button is-info\">Send</button>\n                    </div>\n\n                </div>\n            </form>\n\n        );\n    }\n}\n\nconst formWrapped = reduxForm({\n    form: 'MessageForm'\n})(MessageForm)\n\nexport default connect(null, { createMessage })(formWrapped);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { hangmanAnimation as animate } from '../../../animations';\nclass Score extends Component {\n\n    state = {\n        scoreVal: null,\n        timeout: null\n    }\n    componentDidMount() {\n        this.slideInAndFade = animate.slideInAndFade('#score')\n    }\n    getUserScore = () => {\n        if (this.props.user) {\n            return this.props.user.score\n        }\n    }\n    componentDidUpdate({ user }) {\n        if (user) {\n            let scoreIncrease = this.getUserScore() - user.score\n            let scoreVal = scoreIncrease > 0 ? `+${scoreIncrease}` : null\n            if (scoreVal) {\n                this.setState({\n                    scoreVal,\n                    timeout: setTimeout(() => {\n                        this.setState({\n                            scoreVal: null,\n                            timeout: null\n                        })\n                    }, 1000)\n                }, () => {\n                    this.slideInAndFade.restart()\n                })\n            }\n        }\n\n\n    }\n    render() {\n        return (\n            <p id=\"score\" className=\"has-text-success bold anton is-size-2\">{this.state.scoreVal ? <span>{this.state.scoreVal}</span> : null}</p>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.room.users.filter((user) => user.name === state.room.user.name)[0],\n        myTurn: state.hangman.myTurn\n    }\n}\n\nexport default connect(mapStateToProps, null)(Score);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { newMessageListener } from '../../../actions';\nimport MessageForm from './MessageForm';\nimport Score from '../Hangman/Score';\nimport { chatAnimation as animate } from '../../../animations';\nclass Chat extends Component {\n\n\n    componentDidMount() {\n        this.props.newMessageListener()\n    }\n    componentDidUpdate(prevProps) {\n        const messages = document.querySelectorAll('.chat-message')\n\n        if (messages.length > 0) {\n            const last = messages[messages.length - 1]\n            last.scrollIntoView()\n        }\n        if (this.props.chat.messages.length > prevProps.chat.messages.length) {\n            animate.inflate('.new')\n        }\n        for (let i = this.props.chat.messages.length - 1; i > prevProps.chat.messages.length - 1; i--) {\n            animate.slideIn(`#message-${i}`, this.props.chat.messages[i].from === this.props.user.name ? 'right' : 'left')\n        }\n    }\n    renderMessages() {\n        let messagesList = document.querySelector('.messages-container')\n        if (messagesList && !messagesList.classList.contains('is-active')) {\n            document.querySelector('.fa-comment').classList.add('new')\n        }\n        return this.props.chat.messages.map(({ from, text, createdAt }, i) => {\n            const { name } = this.props.user\n            let fromMe = from === name\n            let fromLabel = <strong>{fromMe ? 'me' : from}{from === 'Admin' ? <span className=\"icon\"><i className=\"fas fa-star\"></i></span> : ''}</strong>\n            let className = fromMe ? 'speech-bubble-right' : 'speech-bubble-left'\n\n            return (<li key={i} id={`message-${i}`} className={`list-item chat-message`}>\n                <div className={fromMe ? 'message-sender-right' : 'message-sender-left play'}>\n                    {fromLabel}\n                </div>\n                <div className={className}>\n                    <div className=\"message-text\">\n                        <div className=\"content has-text-light\">{text}</div>\n                    </div>\n                </div>\n                <span className={from === name ? 'is-size-7 timestamp-right' : 'is-size-7 timestamp-left'}>{createdAt}</span>\n\n            </li>\n            )\n        })\n    }\n    toggleChat = () => {\n        document.querySelector('.messages-container').classList.toggle('is-active');\n        document.querySelector('.fa-comment').classList.remove('new')\n        document.querySelector('.navbar-burger').classList.remove('is-active')\n        document.querySelector('#user-list').classList.remove('is-active')\n\n    }\n    render() {\n        return (\n            <div className=\"column is-9 is-full-mobile chat-container\">\n                <Score />\n                <button onClick={this.props.toggleMenu} className=\"navbar-burger is-pulled-left has-text-black\" aria-label=\"menu\" aria-expanded=\"false\">\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                </button>\n                <p onClick={this.toggleChat} id=\"chat-button\"><span className=\"icon has-text-dark\"><i className=\"fas fa-comment fa-lg new\"></i></span></p>\n                <ul className=\"messages-container list has-background-dark\">\n                    {/* <li className=\"list-item\"></li>\n                    <li className=\"list-item\"></li>\n                    <li className=\"list-item\"></li> */}\n\n                    {this.renderMessages()}\n                    {/* <li className=\"list-item\"></li>\n                    <li className=\"list-item\"></li> */}\n                    <li className=\"list-item\"></li>\n\n                </ul>\n\n\n                <MessageForm />\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        chat: state.chat,\n        user: state.room.user\n    }\n}\n\nexport default connect(mapStateToProps, { newMessageListener })(Chat);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateUserListener } from '../../../actions';\n\nclass UserList extends Component {\n    componentDidMount() {\n        this.props.updateUserListener()\n    }\n    renderUsers = () => {\n        let highestScore = this.props.users.reduce((a, b) => b.score > a.score ? b : b.score === a.score ? { name: '', score: b.score } : a, { name: '', score: -1 }).name\n        return this.props.users.sort((a, b) => b.score - a.score).map(({ name, id, score }) => {\n            return (\n                <li key={id}\n                    className=\"list-item user-list-item has-text-light bold is-size-5 play\">\n                    <span className={name.length > 7 ? 'is-size-7' : null}>{name}</span>\n                    <span className=\"is-pulled-right\">\n                        {name === highestScore ? <span className=\"icon\"><i className=\"fas fa-crown\"></i></span> : null}\n                        {name === this.props.master.name ? <span className=\"icon\"><i className=\"fas fa-brain\"></i></span> : null} {score} </span>\n                </li>\n            )\n        })\n    }\n    renderHeader() {\n        return (\n            <div className=\"header\">\n                <div className=\"columns is-mobile\">\n                    <div className=\"column is-one-third\">\n                        <a href=\"https://omarjuice.github.io/\" rel=\"noopener noreferrer\" target=\"_blank\" >\n                            <figure className=\"image is-4by3\">\n                                <img id={`OJ-logo`} src={`${process.env.PUBLIC_URL}/images/OJICONtrue.png`} alt={`OJ`} />\n                            </figure>\n                        </a>\n                    </div>\n                    {this.props.dictionary === 'Free' ? null :\n                        <div className=\"column is-two-thirds\">\n                            <a target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                href={this.props.dictionary === 'Oxford' ? 'https://developer.oxforddictionaries.com/' : 'https://www.urbandictionary.com/'}>\n                                <figure className=\"image is-3by1\">\n                                    <img id={`${this.props.dictionary}-logo`} src={`${process.env.PUBLIC_URL}/images/${this.props.dictionary}logo.png`} alt={`${this.props.dictionary} Dictionary`} />\n                                </figure>\n                            </a>\n                        </div>\n                    }\n\n                </div>\n            </div>\n        )\n    }\n    render() {\n        return (\n            <div id=\"user-list\" onClick={this.props.toggleMenu} className=\"column is-3 is-9-mobile\">\n                {this.renderHeader()}\n                <aside className=\"menu\">\n                    <p className=\"menu-label has-text-light has-text-centered title is-3 anton\">\n                        <strong>{this.props.room}</strong>\n\n                    </p>\n\n                    <ul className=\"menu-list\">\n                        {this.renderUsers()}\n                    </ul>\n\n                </aside>\n\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        users: state.room.users,\n        room: state.room.roomName,\n        master: state.hangman.master,\n        dictionary: state.room.dictionary\n    }\n}\n\nexport default connect(mapStateToProps, { updateUserListener })(UserList);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { skipMe, skipMaster } from '../../actions';\nimport { hangmanAnimation as animate } from '../../animations';\n\nclass Timer extends Component {\n    state = {\n        time: null,\n        timer: null\n    }\n    componentDidMount() {\n\n        this.setState({\n            time: this.props.time,\n            timer: this.getTimer()\n        }, () => {\n\n        })\n        this.blink = animate.blink('.blink')\n    }\n    getUserScore = () => {\n        if (this.props.user) {\n            return this.props.user.score\n        }\n    }\n    componentDidUpdate({ user, incorrect }) {\n        if (this.state.time && this.state.time < 6) {\n            this.blink.play()\n        }\n        if (user) {\n            let scoreIncrease = this.getUserScore() - user.score\n            let incorrectIncrease = this.props.incorrect - incorrect\n            let scoreVal = scoreIncrease > 0 || incorrectIncrease > 0\n            if (scoreVal) {\n                this.blink.pause()\n                this.setState({\n                    time: 60,\n                })\n            }\n        }\n    }\n    getTimer() {\n        return setInterval(() => {\n            if (this.state.time === 0) {\n                try {\n                    document.querySelector('.timer').style.opacity = 1\n                } catch (e) { }\n                clearInterval(this.state.timer)\n                this.setState({\n                    timer: null,\n                    time: null\n                })\n                this.setState({\n                    timer: this.getTimer(),\n                    time: this.props.time\n                })\n                if (this.props.svg) {\n                    return this.props.skipMe()\n                }\n                if (this.props.masterTimer) {\n                    return this.props.skipMaster()\n                }\n            } else {\n                return this.setState({\n                    time: this.state.time - 1\n                })\n            }\n        }, 1000)\n    }\n    componentWillUnmount() {\n        clearInterval(this.state.timer)\n        this.blink.pause()\n\n    }\n    render() {\n        let renderedTimer = this.props.svg ?\n            <tspan x={this.props.x} y={this.props.y}\n                className={`${this.state.time < 7 ? 'blink' : null} timer`}\n                style={{ fill: this.state.time < 10 ? 'red' : 'black', fontFamily: '\"Play\", sans-serif', fontSize: this.props.fontSize, opacity: 1 }}\n                textAnchor={this.props.textAnchor} >{this.state.time}</tspan>\n            : <span className={`is-size-3 play ${this.state.time < 7 ? 'blink' : 'timer'}`} style={{ color: this.state.time < 10 ? 'red' : 'black' }}>{this.state.time}</span>\n        return (\n            renderedTimer\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        user: state.room.users.filter((user) => user.name === state.room.user.name)[0],\n        incorrect: state.hangman.incorrect\n    }\n}\nexport default connect(mapStateToProps, { skipMe, skipMaster })(Timer);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { svgAnimation as animate } from '../../animations';\n\nclass XSVG extends Component {\n\n\n    componentDidUpdate = (prevProps) => {\n        if (this.props.incorrect > prevProps.incorrect) {\n            [document.querySelector(`#x-left-${this.props.incorrect - 1}`),\n            document.querySelector(`#x-right-${this.props.incorrect - 1}`)].forEach((stroke, i) => {\n                animate.drawStroke({\n                    selector: stroke,\n                    x1: i === 1 ? 20 : 5,\n                    x2: i === 1 ? 5 : 20,\n                    y1: (this.props.incorrect - 1) * 25 + 10,\n                    y2: (this.props.incorrect - 1) * 25 + 25,\n                }, i === 1)\n            })\n        }\n    }\n    renderXs = () => {\n        let color = this.props.color\n        return Array(this.props.incorrect).fill('x').map((x, i) => {\n            return (\n                <g key={`x-${i}`}>\n                    <line id={`x-left-${i}`} className=\"x-stroke-left\" x1=\"5\" y1={i * 25 + 10} x2=\"20\" y2={i * 25 + 25} stroke={color} strokeWidth=\"4\"></line>\n                    <line id={`x-right-${i}`} className=\"x-stroke-right\" x1=\"20\" y1={i * 25 + 10} x2=\"5\" y2={i * 25 + 25} stroke={color} strokeWidth=\"4\"></line>\n                </g>\n            )\n        })\n    }\n    render() {\n        return (\n            <g x={this.props.x} y={this.props.y}>\n                {this.renderXs()}\n            </g>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        incorrect: state.hangman.incorrect\n    }\n}\n\nexport default connect(mapStateToProps, null)(XSVG);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Timer from './Timer';\nimport XSVG from './XSVG';\nimport { svgAnimation as animate } from '../../animations';\n\n\nclass ManSVG extends Component {\n    constructor(props) {\n        super(props);\n        this.width = 150;\n        this.height = 200;\n\n    }\n    componentDidMount() {\n\n        this.rightWave = animate.wave('#right-arm', '#arc-right', 1, true, { easing: 'easeInCubic' });\n        this.leftWave = animate.wave('#left-arm', '#arc-left', 1, true, { easing: 'easeInCubic' });\n        this.rightWaveReverse = animate.wave('#right-arm', '#arc-right', 1, false, { direction: 'reverse', easing: 'easeOutCubic' });\n        this.leftWaveReverse = animate.wave('#left-arm', '#arc-left', 1, false, { direction: 'reverse', easing: 'easeOutCubic' });\n        this.leftDoor = animate.wave('#door-left', '#door-arc-left', 1, false, { easing: 'easeInOutBack' })\n        this.rightDoor = animate.wave('#door-right', '#door-arc-right', 1, false, { easing: 'easeInOutBack' })\n        Promise.all(\n            [this.rightWave.finished,\n            this.leftWave.finished]\n        ).then(() => {\n            this.rightWaveReverse.play()\n            this.leftWaveReverse.play()\n\n        })\n    }\n    componentDidUpdate(prevProps) {\n\n        if (this.props.isChoosing && !prevProps.isChoosing) {\n            this.leftWave.restart();\n            this.rightWave.restart();\n        }\n        if (this.props.incorrect >= 5 && this.props.gameOver) {\n            this.leftWaveReverse.reverse();\n            this.rightWaveReverse.reverse();\n            this.leftDoor.play()\n            this.rightDoor.play()\n            animate.fall('#body', '#fall-path', 1000)\n        } else if (this.props.incorrect < 5 && this.props.gameOver) {\n            this.leftWaveReverse.restart();\n            this.rightWaveReverse.restart();\n        }\n\n    }\n    render() {\n        //directions left and right refer to hangman's perspective, not ours\n        const { width, height } = this\n        return (\n            <svg id=\"hangman-svg\" viewBox=\"0 0 150 200\">\n                <g id=\"body\">\n                    <g id=\"head\">\n                        <circle cx=\"100\" cy=\"35\" r=\"20\" stroke=\"black\" strokeWidth=\"4\" fill=\"white\" />\n                        <circle cx=\"93\" cy=\"31\" r=\"1.5\" stroke=\"black\" strokeWidth=\"4\" fill=\"black\" />\n                        <circle cx=\"106.9999995\" cy=\"31\" r=\"1.5\" stroke=\"black\" strokeWidth=\"4\" fill=\"black\" />\n                    </g>\n                    <line x1=\"100\" y1=\"55.00000000000001\" x2=\"100\" y2=\"105\" stroke=\"black\" strokeWidth=\"4\" />\n                    <g id=\"legs\">\n                        <line x1=\"100\" y1=\"105\" x2=\"75\" y2=\"135\" stroke=\"black\" strokeWidth=\"4\" />\n                        <line x1=\"100\" y1=\"105\" x2=\"125\" y2=\"135\" stroke=\"black\" strokeWidth=\"4\" />\n                    </g>\n                    <g id=\"arms\">\n                        <line x1=\"100\" y1=\"70\" x2=\"79.99999994999999\" y2=\"105\" stroke=\"black\" strokeWidth=\"4\" id=\"right-arm\" />\n                        <line x1=\"100\" y1=\"70\" x2=\"120\" y2=\"105\" stroke=\"black\" strokeWidth=\"4\" id=\"left-arm\" />\n                    </g>\n                </g>\n                <g id=\"hang\">\n                    <line x1=\"25\" y1=\"0\" x2=\"100\" y2=\"0\" stroke=\"black\" strokeWidth=\"4\" />\n                    <line x1=\"100\" y1=\"0\" x2=\"100\" y2=\"15\" stroke=\"black\" strokeWidth=\"4\" />\n                    <line x1=\"25\" y1=\"0\" x2=\"25\" y2=\"150\" stroke=\"black\" strokeWidth=\"4\" />\n                    <line x1=\"0\" y1=\"150\" x2=\"70.4\" y2=\"150\" stroke=\"black\" strokeWidth=\"4\" />\n                    <line id=\"door-right\" x1=\"70.4\" y1=\"150\" x2=\"87\" y2=\"150\" stroke=\"black\" strokeWidth=\"4\" />\n                    <line id=\"door-left\" x1=\"131.8\" y1=\"150\" x2=\"87\" y2=\"150\" stroke=\"black\" strokeWidth=\"4\" />\n                    <line x1=\"131.8\" y1=\"150\" x2=\"150\" y2=\"150\" stroke=\"black\" strokeWidth=\"4\" />\n                </g>\n                <g id=\"incorrect\" >\n                    <XSVG x=\"0\" y=\"0\" color={this.props.master && this.props.master.name === this.props.user ? 'green' : 'red'} />\n                </g>\n                <path d=\"M99.7,0A17612.30316,17612.30316,0,0,1,100.3,198.2\" style={{ fill: 'none', stroke: 'black', strokeWidth: '0' }} id=\"fall-path\"></path>\n                <path d=\"M80.2,104.5A40.175389,40.175389,0,0,1,71,41.3\" style={{ fill: 'none', stroke: 'black', strokeWidth: '0' }} id=\"arc-right\"></path>\n                <path d=\"M119.5,105.4a40.330966,40.330966,0,0,0,9.800000000000011,-64.4\" style={{ fill: 'none', stroke: 'black', strokeWidth: '0' }} id=\"arc-left\"></path>\n                <path d=\"M100.30000000000001,149.7a28.546833473940513,28.546833473940513,0,0,1,-31.10000000000001,31.100000000000023\" style={{ fill: 'none', stroke: 'black', strokeWidth: 0 }} id=\"door-arc-right\"></path>\n                <path d=\"M101.20000000000003,150.00000000000003a29.695768,29.695768,0,0,0,30.79999999999997,31.399999999999977\" style={{ fill: 'none', stroke: 'black', strokeWidth: 0 }} id=\"door-arc-left\"></path>\n                < g>\n                    <text>\n                        {this.props.myTurn && !this.props.isChoosing && !this.props.gameOver && this.props.master.name ?\n                            <Timer x={width * 5 / 12} y={height * 5 / 12} fontSize={height * .2} textAnchor=\"middle\" svg={true} time={60} />\n                            : null}\n                    </text>\n                    <text>\n                        {/* <tspan x={width * .5} y={height * .9} style={{ fill: 'black', fontSize: height * .1 }} textAnchor=\"middle\">\n                            {this.props.currentTurn && this.props.master.name && !this.props.isChoosing ? this.props.myTurn ? `Your turn, ${this.props.user}!` : `Waiting for ${this.props.currentTurn}...` : null}\n                        </tspan> */}\n                    </text>\n                </g>\n\n            </svg>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        currentTurn: state.hangman.turn.name,\n        user: state.room.user.name,\n        master: state.hangman.master,\n        isChoosing: state.hangman.isChoosing,\n        myTurn: state.hangman.myTurn,\n        gameOver: state.hangman.gameOver,\n        skip: state.hangman.skip,\n        incorrect: state.hangman.incorrect,\n    }\n}\nexport default connect(mapStateToProps)(ManSVG);\n","import React, { Component } from 'react';\nimport ManSVG from '../../SVG/ManSVG';\nimport { connect } from 'react-redux';\nimport Loader from '../../SVG/Loader';\nimport { hangmanAnimation as animate } from '../../../animations';\n\n\nclass Waiting extends Component {\n    componentDidMount() {\n        animate.turnOn('.screen')\n        animate.changeScreen('.screen')\n\n\n    }\n    render() {\n        let clientWidth = document.querySelector('body').clientWidth\n        return (\n            <>\n                <div className=\"column is-one-fifth is-full-mobile has-text-centered\">\n                    <ManSVG />\n                </div>\n                <div id=\"waiting-text\" className=\"column is-half\">\n                    <p className=\"subtitle is-4 has-text-centered has-text-dark play\">{this.props.word.length > 2 ? <span>The word was <strong className=\"has-text-dark\">{this.props.word.join('')}</strong></span> : null}</p>\n                    <h1 className=\"anton title is-3 has-text-centered has-text-dark\">\n                        Waiting for {this.props.isChoosing && this.props.numUsers > 1 ? <><span className=\"has-text-primary\">{this.props.master.name}</span><span> to choose a word</span></> : `more players`}\n                    </h1>\n                    <Loader scale={clientWidth > 1300 ? 1 : clientWidth > 1024 ? .75 : clientWidth > 768 ? .5 : .4} />\n                </div>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isChoosing: state.hangman.isChoosing,\n        master: state.hangman.master,\n        word: state.hangman.word,\n        numUsers: state.room.users.length\n    }\n}\n\nexport default connect(mapStateToProps)(Waiting);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass WordBlank extends Component {\n\n    renderText = () => {\n        let word = this.props.word\n        let increment = (140 / word.length)\n        let arr = [];\n        let x = 0;\n        let y = 30\n\n        for (let i = 0; i < word.length; i++) {\n            arr.push(\n                <g className=\"word-blank\" key={i}>\n                    <text>\n                        <tspan x={x + increment / 2} y={y}\n                            style={{ fontSize: increment > 25 ? 25 : increment, fontFamily: '\"Play\", sans-serif' }}\n                            fill={this.props.gameOver && this.props.isCorrect ? 'green' : this.props.gameOver && !this.props.isCorrect ? 'red' : 'black'}\n                            textAnchor=\"middle\">\n                            {this.props.selectedLetters.includes(word[i]) || this.props.gameOver ? word[i] : '?'}\n                        </tspan>\n                    </text>\n                    <line x1={x + increment * .05} y1={y + 2} x2={x + increment * .95} y2={y + 2} stroke=\"black\" strokeWidth=\"2\" />\n                </g>\n            )\n            x += increment\n        }\n        return arr\n    }\n\n    render() {\n        return (\n            <svg id=\"word-blanks\" width=\"100%\" height=\"50%\" viewBox=\"0 0 140 35\">\n                {this.renderText()}\n            </svg>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        word: state.hangman.word,\n        selectedLetters: state.hangman.selectedLetters,\n        isCorrect: state.hangman.isCorrect,\n        gameOver: state.hangman.gameOver,\n    }\n}\nexport default connect(mapStateToProps, null)(WordBlank);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { letterSelected, letterListener } from '../../../actions/index';\nimport { hangmanAnimation as animate } from '../../../animations';\n\nclass Letters extends Component {\n\n    componentDidMount() {\n        this.props.letterSelected()\n    }\n\n    selectLetter = (letter) => () => {\n        if (!this.props.gameOver && this.props.myTurn) {\n            animate.shrinkToNothing(`#letter-${letter}`).finished.then(() => this.props.letterSelected(letter))\n        }\n    }\n    renderLetterButtons = () => {\n        return this.props.remainingLetters.map((letter) => {\n            return (\n                <p key={letter} id={`letter-${letter}`} onClick={this.selectLetter(letter)} className={`button play letter ${this.props.myTurn ? 'glow' : null}`}>{letter}</p>\n            )\n        })\n    }\n    render() {\n        return (\n            <div style={{ margin: 0, padding: 0 }}>\n                {this.renderLetterButtons()}\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        remainingLetters: state.hangman.remainingLetters,\n        gameOver: state.hangman.gameOver,\n        myTurn: state.hangman.myTurn\n\n    }\n}\n\nexport default connect(mapStateToProps, { letterSelected, letterListener })(Letters);\n","import React, { Component } from 'react';\nimport ManSVG from '../../SVG/ManSVG';\nimport WordBlank from './WordBlank';\nimport Letters from './Letters';\nimport { connect } from 'react-redux';\nimport { nextTurnListener } from '../../../actions';\nimport { hangmanAnimation as animate } from '../../../animations';\nimport Loader from '../../SVG/Loader';\n\nclass Hangman extends Component {\n    state = {\n        mobileDisplayed: false\n        //false for hint true for letters\n    }\n    componentDidMount() {\n        this.props.nextTurnListener()\n        animate.changeScreen('.screen')\n    }\n    changeDisplay = () => {\n        this.setState({\n            mobileDisplayed: !this.state.mobileDisplayed\n        })\n    }\n    componentDidUpdate() {\n        if (!this.props.myTurn && this.state.mobileDisplayed) {\n            this.setState({\n                mobileDisplayed: false\n            })\n        }\n    }\n    render() {\n        let bodyHeight = document.querySelector('html').clientHeight > 670\n        return (\n            <>\n                <div id=\"svg-container\" className=\"column is-one-fifth is-full-mobile has-text-centered\">\n                    <ManSVG />\n                    <p id=\"info-text\" className=\"is-size-6 play\">\n                        {this.props.currentTurn && this.props.master.name && !this.props.isChoosing ? this.props.myTurn ? <span>Your turn, {this.props.user}!</span> : <span>Waiting for {this.props.currentTurn}<Loader scale={.1} /></span> : null}\n                        {!bodyHeight && !this.props.gameOver && this.props.myTurn ?\n                            <button id=\"small-screen-toggler\" onClick={this.changeDisplay} className=\"button is-dark is-small\">\n                                <span className=\"icon\">\n                                    {this.state.mobileDisplayed ? <i className=\"fas fa-question-circle\"></i> : <i className=\"fas fa-pencil-alt\"></i>\n                                    }</span>\n                            </button>\n                            : null}\n                    </p>\n                </div>\n                <div id=\"word-container\" className=\"column is-half has-text-centered is-two-thirds-tablet is-full-mobile\">\n                    <WordBlank />\n                    {this.props.gameOver ? <Loader scale={.25} /> : !this.state.mobileDisplayed || bodyHeight ? <p id=\"hint\" className=\"subtitle has-text-dark has-text-centered\">{this.props.hint}</p> : null}\n                    {this.props.hint && !this.props.gameOver && this.props.hint.length > 90 && (!this.state.mobileDisplayed || bodyHeight) ? <span className=\"icon\"><i class=\"fas fa-sort-down\"></i></span> : null}\n\n                </div>\n                <div id=\"letter-buttons\" className=\"column is-one-quarter is-half-tablet has-text-centered\">\n                    {this.state.mobileDisplayed || bodyHeight ? <Letters /> : null}\n                </div>\n            </>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return ({\n        hint: state.hangman.hint,\n        gameOver: state.hangman.gameOver,\n        master: state.hangman.master,\n        isChoosing: state.hangman.isChoosing,\n        currentTurn: state.hangman.turn.name,\n        myTurn: state.hangman.myTurn,\n        user: state.room.user.name\n    })\n}\nexport default connect(mapStateToProps, { nextTurnListener })(Hangman);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { newWord, wordInfoListener } from '../../../actions'\nimport Timer from '../../SVG/Timer';\nimport { hangmanAnimation as animate } from '../../../animations';\nimport Loader from '../../SVG/Loader';\nimport ErrorMessage from '../../ErrorMessage';\nclass GameInit extends Component {\n    componentDidMount() {\n        animate.changeScreen('.screen')\n        this.props.wordInfoListener()\n    }\n    getHeading = () => {\n        if (this.props.word.length > 2) {\n            return (\n                <>\n                    <h1 className=\"title is-4 has-text-dark play\">Game Over!</h1>\n                    <p className=\"has-text-dark play is-size-5\">The word was <strong className=\"has-text-dark\">{this.props.word}</strong>.</p>\n\n                </>\n            )\n        }\n    }\n\n    onSubmit = (formValues) => {\n        this.props.newWord(formValues)\n    }\n    renderInput = ({ input, autoFocus, label, meta }) => {\n        const labelClass = meta.touched && meta.error ? 'label has-background-danger' : 'label has-background-dark'\n        return (\n            <div className=\"field\">\n                <label className={labelClass}>{meta.touched && meta.error ? meta.error : label}</label>\n                <div className=\"control\">\n                    <input className=\"input is-dark\" {...input} type=\"text\" autoFocus={autoFocus} autoComplete=\"off\" />\n                </div>\n\n            </div>\n        )\n    }\n    render() {\n        return (\n            <>\n                <div id=\"word-form-header\" className=\"column is-one-third\">\n                    <div className=\"has-text-centered\">\n                        {this.getHeading()}\n                        <p className=\"subtitle is-4 has-text-dark play\">Pick a word, <span className=\"has-text-primary\">{this.props.master.name}</span>.</p>\n                        {this.props.Error.exists ? <ErrorMessage /> : this.props.loading ? <Loader scale={.15} /> : <Timer time={this.props.hasFreeDict ? 120 : 60} masterTimer={true} />}\n                        <p><strong className=\"has-text-danger\">{this.props.info}</strong></p>\n                    </div>\n                </div>\n\n                <div id=\"word-form\" className=\"column is-two-thirds has-text-centered play\">\n                    <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"form has-text-centered\">\n                        <Field name=\"word\" component={this.renderInput} autoFocus={true} label=\"Choose a word\" />\n                        {this.props.hasFreeDict ? <Field name=\"hint\" component={this.renderInput} autoFocus={false} label=\"Give them a hint!\" /> : null}\n\n                        <div className=\"control has-text-centered\">\n                            <button className=\"button is-dark is-small\"><span className=\"icon\"><i className=\"fas fa-play-circle\"></i></span></button>\n                        </div>\n                    </form>\n                </div>\n            </>\n        );\n    }\n}\nconst validate = ({ word, hint }) => {\n\n    const errors = {}\n    let regex = /[^a-z]/gi\n    if (!word) {\n        errors.word = 'You must enter a word'\n    }\n    if (word && word.length < 3) {\n        errors.word = 'Must be at least 3 letters'\n    }\n    if (word && regex.test(word)) {\n        errors.word = 'Must only contain letters'\n    }\n    if (!hint) {\n        errors.hint = 'You must enter a hint'\n    }\n    return errors\n}\nconst GameInitForm = reduxForm({\n    form: 'GameInit',\n    validate\n})(GameInit)\nconst mapStateToProps = (state) => {\n    return {\n        word: state.hangman.word.join(''),\n        gameOver: state.hangman.gameOver,\n        master: state.hangman.master,\n        user: state.room.user,\n        hasFreeDict: state.room.dictionary === 'Free',\n        loading: state.loading,\n        Error: state.error,\n        info: state.hangman.info\n    }\n}\nexport default connect(mapStateToProps, { newWord, wordInfoListener })(GameInitForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { letterListener } from '../../../actions';\nimport Waiting from './Waiting';\nimport Hangman from './Hangman';\nimport GameInit from './GameInit';\nimport { newMasterListener } from '../../../actions/index';\n\n\nclass Screen extends Component {\n    componentDidMount() {\n        this.props.letterListener()\n        this.props.newMasterListener()\n    }\n    handleScreenClick() {\n        document.querySelector('.fa-comment').classList.remove('is-active')\n        document.querySelector('.messages-container').classList.remove('is-active')\n        document.querySelector('.navbar-burger').classList.remove('is-active')\n        document.querySelector('#user-list').classList.remove('is-active')\n    }\n    renderScreen = () => {\n        if (this.props.numUsers < 2) {\n            return <Waiting />\n        } else if (this.props.isChoosing) {\n            if (this.props.master.name === this.props.user.name) {\n                return <GameInit />\n            }\n            return <Waiting />\n        }\n        return <Hangman />\n    }\n    render() {\n        return (\n            <div id=\"hangman\" className=\"column is-9\">\n                <div className={`box screen has-background-light`} onClick={this.handleScreenClick}>\n                    <div className=\"columns is-centered has-text-dark has-text-centered\">\n\n                        {this.renderScreen()}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        numUsers: state.room.users.length,\n        isChoosing: state.hangman.isChoosing,\n        master: state.hangman.master,\n        user: state.room.user,\n        gameOver: state.hangman.gameOver,\n    }\n}\n\nexport default connect(mapStateToProps, { letterListener, newMasterListener })(Screen);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Chat from './Chat/Chat';\nimport UserList from './Chat/UserList';\nimport history from '../../history';\nimport Screen from './Hangman/Screen';\nimport { newMasterListener, wordSetListener } from '../../actions/index';\nimport { hangmanAnimation as animate } from '../../animations';\nconst toggleMenu = () => {\n    document.querySelector('.navbar-burger').classList.toggle('is-active')\n    document.querySelector('#user-list').classList.toggle('is-active')\n    document.querySelector('.fa-comment').classList.remove('is-active')\n    document.querySelector('.messages-container').classList.remove('is-active')\n}\nclass ChatRoom extends Component {\n    componentDidMount() {\n        document.querySelector('title').textContent = 'Play | Hangman'\n        document.getElementById('css-load').setAttribute('href', process.env.PUBLIC_URL + '/chatStyle.css')\n        if (!this.props.room) {\n            return history.push('/Hangman')\n        }\n        this.props.newMasterListener()\n        this.props.wordSetListener()\n        animate.turnOn('.screen')\n        animate.flicker('.screen')\n    }\n    render() {\n        return (\n            <div className=\"columns is-multiline\">\n                <Screen />\n                {this.props.connection ? '' : 'No Room'}\n                <UserList toggleMenu={toggleMenu} />\n                <Chat toggleMenu={toggleMenu} />\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return ({\n        connection: state.connection,\n        room: state.room.roomName\n    })\n}\n\n\n\nexport default connect(mapStateToProps, { newMasterListener, wordSetListener })(ChatRoom);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createConnection, bootServer, serverError } from '../actions/index';\nimport { Router, Route } from 'react-router-dom';\nimport history from '../history';\nimport JoinPage from './Join/Page';\nimport GameRoom from './Room/GameRoom';\n\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.bootServer()\n        this.props.createConnection()\n\n    }\n    render() {\n        return (\n            <>\n                <Router history={history}>\n                    <>\n                        <Route path=\"/Hangman\" exact component={JoinPage} />\n                        <Route path=\"/Hangman/:roomname\" exact component={GameRoom} />\n                    </>\n                </Router>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        connection: state.connection,\n\n    }\n}\n\nexport default connect(mapStateToProps, { createConnection, bootServer, serverError })(App);\n","export default {\n    connected: false,\n    chat: {\n        messages: []\n    },\n    room: {\n        roomName: '',\n        user: {},\n        users: [],\n        dictionary: false,\n    },\n    error: {\n        exists: false,\n        message: ''\n    },\n    loading: false,\n    meta: [],\n    hangman: {\n        master: {},\n        isChoosing: false,\n        word: [],\n        info: false,\n        hint: '',\n        myTurn: false,\n        remainingLetters: [],\n        selectedLetters: [],\n        numGames: 0,\n        turn: {\n            name: ''\n        },\n        isCorrect: false,\n        incorrect: 0,\n        gameOver: false\n    }\n}","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport connectionReducer from './connectionReducer';\nimport chatReducer from './chatReducer';\nimport roomReducer from './roomReducer';\nimport errorReducer from './errorReducer';\nimport loadingReducer from './loadingReducer';\nimport metaReducer from './metaReducer';\nimport hangmanReducer from './hangmanReducers';\n\nexport default combineReducers({\n    connection: connectionReducer,\n    chat: chatReducer,\n    room: roomReducer,\n    error: errorReducer,\n    loading: loadingReducer,\n    meta: metaReducer,\n    form: formReducer.plugin({\n        MessageForm: (state, action) => {\n            switch (action.type) {\n                case '@@redux-form/SET_SUBMIT_SUCCEEDED':\n                    return undefined;\n                default:\n                    return state\n            }\n        }\n    }),\n    hangman: hangmanReducer\n})\n","import { CONNECT, DISCONNECT } from '../actions/types';\nimport defaultState from './defaultState';\n\nexport default (state = defaultState.connected, action) => {\n    switch (action.type) {\n        case CONNECT:\n            return action.connected;\n        case DISCONNECT:\n            return false;\n        default:\n            return state\n    }\n}","import defaultState from './defaultState';\nimport { NEW_MESSAGE } from '../actions/types';\n\nexport default (state = defaultState.chat, action) => {\n    switch (action.type) {\n        case NEW_MESSAGE:\n            return { ...state, messages: action.messageList };\n        default:\n            return state\n    }\n}","import defaultState from './defaultState';\nimport { NEW_USER, UPDATE_LIST, ASK_FOR_DICT } from '../actions/types';\n\nexport default (state = defaultState.room, action) => {\n    switch (action.type) {\n        case ASK_FOR_DICT:\n            return { ...state, user: { ...state.user, name: action.name }, roomName: action.room, dictionary: action.dictionary }\n        case NEW_USER:\n            return { ...state, user: action.user, roomName: action.room, dictionary: action.dictionary };\n        case UPDATE_LIST:\n            return { ...state, users: action.payload };\n        default:\n            return state\n    }\n}","import defaultState from './defaultState';\nimport { ERROR, } from '../actions/types';\n\nexport default (state = defaultState.error, action) => {\n    switch (action.type) {\n        case ERROR:\n            return action.error;\n        default:\n            return state\n    }\n}","import defaultState from './defaultState';\nimport { LOADING, CANCEL_LOAD } from '../actions/types';\n\nexport default (state = defaultState.loading, action) => {\n    switch (action.type) {\n        case LOADING:\n            return true;\n        case CANCEL_LOAD:\n            return false;\n        default:\n            return state\n    }\n}","import defaultState from './defaultState';\nimport { META_DATA } from '../actions/types';\n\nexport default (state = defaultState.meta, action) => {\n    switch (action.type) {\n        case META_DATA:\n            return action.data;\n        default:\n            return state\n    }\n}","import defaultState from './defaultState';\nimport { LETTER_SELECTED, NEW_MASTER, NEW_WORD, MY_TURN, WORD_INFO } from '../actions/types';\nexport default (state = defaultState.hangman, action) => {\n    switch (action.type) {\n        case NEW_MASTER:\n            return {\n                ...state,\n                ...action.game\n            };\n        case NEW_WORD:\n            return {\n                ...state,\n                ...action.game, info: false\n            }\n        case WORD_INFO:\n            return {\n                ...state,\n                info: action.info\n            }\n        case MY_TURN:\n            return {\n                ...state,\n                myTurn: action.myTurn,\n                ...action.game\n            }\n        case LETTER_SELECTED:\n            return {\n                ...state,\n                ...action.game\n            };\n        default:\n            return state\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport App from './components/App';\nimport reducers from './reducers';\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(reducers,\n    composeEnhancers(applyMiddleware(thunk))\n)\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.querySelector('#root'))"],"sourceRoot":""}