{"version":3,"sources":["actions/types.js","history.js","actions/index.js","components/Join/JoinForm.jsx","animations/index.js","components/ErrorMessage.jsx","components/Join/RoomsMeta.jsx","components/SVG/Title.jsx","components/Join/DictionaryForm.jsx","components/SVG/Loader.jsx","components/Join/Page.jsx","components/Room/Chat/MessageForm.jsx","components/Room/Hangman/Score.jsx","components/Room/Chat/Chat.jsx","components/Room/Chat/UserList.jsx","components/SVG/Timer.jsx","components/SVG/XSVG.jsx","components/SVG/ManSVG.jsx","components/Room/Hangman/Waiting.jsx","components/Room/Hangman/WordBlank.jsx","components/Room/Hangman/Letters.jsx","components/Room/Hangman/Hangman.jsx","components/Room/Hangman/GameInit.jsx","components/Room/Hangman/Screen.jsx","components/Room/GameRoom.jsx","components/App.jsx","reducers/defaultState.js","reducers/index.js","reducers/connectionReducer.js","reducers/chatReducer.js","reducers/roomReducer.js","reducers/errorReducer.js","reducers/loadingReducer.js","reducers/metaReducer.js","reducers/hangmanReducers.js","index.jsx"],"names":["ERROR","createHistory","socket","io","letterListener","dispatch","getState","on","game","type","emit","room","roomName","newMasterListener","JoinForm","renderInput","_ref","input","autoFocus","label","meta","inputClass","error","touched","labelClass","react_default","a","createElement","className","htmlFor","Object","assign","autoComplete","onSubmit","_ref2","name","toUpperCase","_this","props","initiateJoin","id","this","handleSubmit","redux_form_es","component","Component","formWrapped","reduxForm","form","validate","_ref3","regex","errors","length","test","toLowerCase","enableReinitialize","connect","err","exists","message","homepageAnimation","noise","elem","i","repeatNoise","anime","targets","backgroundPositionX","concat","backgroundPositionY","loop","duration","complete","glitch","repeatGlitch","timeline","add","translateX","slideIn","translateY","value","elasticity","slideOut","pop","scale","autoplay","easing","hangmanAnimation","turnOn","scaleY","opacity","delay","changeScreen","flicker","opacityValues","Array","fill","map","e","ellipsis","elems","el","slideInAndFade","visibility","blink","shrinkToNothing","chatAnimation","fromDirection","svgAnimation","fall","path","arguments","undefined","track","wave","direction","obj","y2","x2","drawStroke","selector","x1","y1","ErrorMessage","cancelError","animate","finished","then","onClick","aria-label","state","console","log","RoomsMeta","renderRoomList","key","numUsers","Title","color1","colors","primary","color2","secondary","color3","tertiary","viewBox","componentId","x","y","style","fontFamily","fontSize","textAnchor","text","DictionaryForm","Fragment","src","alt","dictionary","submitDict","ids","forEach","ID","reversed","play","document","getElementById","classList","completed","remove","setAttribute","scrollIntoView","oxford","urban","free","process","user","Ellipsis","childNodes","height","width","cx","cy","r","color","JoinPage","selectedRoom","history","push","querySelector","textContent","joinSuccess","errorListener","askForDictListener","getUserMetaData","_this2","setState","SVG_Title","loading","Loader","components_ErrorMessage","Join_RoomsMeta","onRoomClick","bind","Join_DictionaryForm","Join_JoinForm","initialValues","_ref4","slicedToArray","_ref4$","score","from","data","MessageForm","createMessage","action","Score","scoreVal","timeout","getUserScore","scoreIncrease","setTimeout","restart","users","filter","myTurn","hangman","Chat","toggleChat","toggle","newMessageListener","prevProps","messages","querySelectorAll","chat","messagesList","contains","createdAt","fromMe","fromLabel","Hangman_Score","toggleMenu","aria-expanded","aria-hidden","renderMessages","Chat_MessageForm","messageList","UserList","renderUsers","highestScore","reduce","b","sort","master","updateUserListener","href","rel","target","renderHeader","_ref5","userList","payload","Timer","time","timer","getTimer","incorrect","incorrectIncrease","pause","setInterval","clearInterval","svg","skipMe","masterTimer","skipMaster","XSVG","componentDidUpdate","stroke","getAttribute","renderXs","strokeWidth","ManSVG","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","rightWave","leftWave","rightWaveReverse","leftWaveReverse","leftDoor","rightDoor","Promise","all","isChoosing","gameOver","reverse","SVG_XSVG","d","SVG_Timer","currentTurn","turn","skip","Waiting","SVG_ManSVG","word","join","WordBlank","renderText","increment","arr","isCorrect","selectedLetters","includes","Letters","selectLetter","letter","letterSelected","renderLetterButtons","remainingLetters","margin","padding","Hangman","nextTurnListener","hint","Hangman_WordBlank","class","Hangman_Letters","myName","GameInit","getHeading","formValues","newWord","wordInfoListener","Error","hasFreeDict","info","GameInitForm","_ref6","Screen","renderScreen","Hangman_Waiting","Hangman_GameInit","Room_Hangman_Hangman","handleScreenClick","ChatRoom","wordSetListener","Hangman_Screen","connection","Chat_UserList","Room_Chat_Chat","App","bootServer","createConnection","Router","Route","exact","GameRoom","connected","request","XMLHttpRequest","open","onload","status","onerror","send","serverError","defaultState","numGames","combineReducers","objectSpread","formReducer","plugin","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","components_App"],"mappings":"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","file":"static/js/main.5f9b9b54.chunk.js","sourcesContent":["export const CONNECT = 'CONNECT'\nexport const CREATE_MESSAGE = 'CREATE_MESSAGE'\nexport const NEW_MESSAGE = 'NEW_MESSAGE'\nexport const NEW_USER = 'NEW_USER'\nexport const JOIN_ROOM = 'JOIN_ROOM'\nexport const ASK_FOR_DICT = 'ASK_FOR_DICT'\nexport const ERROR = 'ERROR'\nexport const LOADING = 'LOADING'\nexport const UPDATE_LIST = 'UPDATE_LIST'\nexport const DISCONNECT = 'DISCONNECT'\nexport const META_DATA = 'META_DATA'\nexport const CANCEL_LOAD = 'CANCEL_LOAD'\n\nexport const NEW_MASTER = 'NEW_MASTER'\nexport const LETTER_SELECTED = 'LETTER_SELECTED'\nexport const NEW_WORD = 'NEW_WORD'\nexport const WORD_INFO = 'WORD_INFO'\nexport const MY_TURN = 'MY_TURN'\nexport const NEW_GAME = 'NEW_GAME'\nexport const SKIP = 'SKIP'","import createHistory from 'history/createBrowserHistory';\nexport default createHistory()","import io from 'socket.io-client';\nimport {\n    CONNECT,\n    DISCONNECT,\n    NEW_MESSAGE,\n    ERROR,\n    LOADING,\n    CANCEL_LOAD,\n    UPDATE_LIST,\n    ASK_FOR_DICT,\n    NEW_USER,\n    META_DATA,\n    LETTER_SELECTED,\n    NEW_MASTER,\n    NEW_WORD,\n    WORD_INFO,\n    MY_TURN,\n\n} from './types';\nimport history from '../history';\n;\n// Types not declared in 'types.js' are dummies for uniformity with redux\nconst socket = io('http://localhost:3001/')\n// const socket = io('https://hangman-oj.herokuapp.com/')\n\nexport const bootServer = () => dispatch => {\n    dispatch({\n        type: LOADING\n    })\n\n    var request = new XMLHttpRequest();\n    request.open('GET', 'http://localhost:3001/', true);\n    // request.open('GET', 'https://hangman-oj.herokuapp.com/', true);\n\n    request.onload = function () {\n        if (request.status >= 200 && request.status < 400) {\n\n        } else {\n            dispatch({\n                type: ERROR,\n                error: {\n                    exists: true,\n                    message: 'Server error'\n                }\n            })\n            dispatch({\n                type: CANCEL_LOAD\n            })\n        }\n    };\n    request.onerror = function () {\n        dispatch({\n            type: ERROR,\n            error: {\n                exists: true,\n                message: 'Server error'\n            }\n        })\n        dispatch({\n            type: CANCEL_LOAD\n        })\n    };\n\n    request.send();\n}\nexport const serverError = () => dispatch => {\n    dispatch({\n        type: ERROR,\n        error: {\n            exists: true,\n            message: 'Server error'\n        }\n    })\n}\nexport const createConnection = () => dispatch => {\n    socket.on('connect', () => {\n        dispatch({\n            type: CONNECT,\n            connected: socket.connected\n        })\n        dispatch({\n            type: CANCEL_LOAD\n        })\n    })\n}\nexport const createMessage = (text) => (dispatch, getState) => {\n    socket.emit('createMessage', {\n        from: getState().room.user.name,\n        room: getState().room.roomName,\n        text\n    })\n    dispatch({\n        type: 'CREATE_MESSAGE'\n    })\n}\nexport const newMessageListener = () => dispatch => {\n    socket.on('newMessage', (messageList) => {\n        dispatch({\n            type: NEW_MESSAGE,\n            messageList\n        })\n    })\n}\nexport const initiateJoin = ({ name, room }) => dispatch => {\n    socket.emit('join', { name, room }, (err) => {\n        dispatch({\n            type: ERROR,\n            error: {\n                exists: true,\n                message: err.message\n            }\n        })\n        dispatch({\n            type: CANCEL_LOAD\n        })\n    })\n    dispatch({\n        type: LOADING\n    })\n}\nexport const askForDictListener = () => dispatch => {\n    socket.on('askForDict', ({ name, room }) => {\n        dispatch({\n            type: ASK_FOR_DICT,\n            room, name, dictionary: 'None'\n        })\n        dispatch({\n            type: CANCEL_LOAD\n        })\n    })\n}\nexport const submitDict = (dictionary) => (dispatch, getState) => {\n    socket.emit('join', {\n        name: getState().room.user.name,\n        room: getState().room.roomName,\n        dictionary\n    })\n    dispatch({\n        type: LOADING\n    })\n}\nexport const joinSuccess = () => (dispatch, getState) => {\n    socket.on('joinSuccess', ([{ name, room, id, score }, dictionary]) => {\n\n        dispatch({\n            type: CANCEL_LOAD\n        })\n        dispatch({\n            type: NEW_USER,\n            user: {\n                name, id, score\n            },\n            room,\n            dictionary\n        })\n        history.push(`/Hangman/${room}`)\n        socket.emit('createMessage', {\n            from: 'Admin',\n            text: `Welcome to ${room}, ${name}!`,\n            room: getState().room.roomName\n        })\n        dispatch({\n            type: 'CREATE_MESSAGE'\n        })\n        dispatch({\n            type: ERROR,\n            error: {\n                exists: false,\n                message: ''\n            }\n        })\n    })\n\n}\nexport const updateUserListener = () => dispatch => {\n    socket.on('updateUserList', ({ userList }) => {\n        dispatch({\n            type: UPDATE_LIST,\n            payload: userList\n        })\n    })\n}\nexport const errorListener = () => dispatch => {\n    socket.on('errorMessage', (message) => {\n        dispatch({\n            type: ERROR,\n            error: {\n                exists: true,\n                message\n            }\n        })\n        dispatch({\n            type: CANCEL_LOAD\n        })\n    })\n}\nexport const cancelError = () => dispatch => {\n    console.log('canceled');\n    dispatch({\n        type: ERROR,\n        error: {\n            exists: false,\n            message: ''\n        }\n    })\n}\n\nexport const disconnectListener = () => dispatch => {\n    socket.on('disconnect', () => {\n        dispatch({\n            type: DISCONNECT\n        })\n    })\n}\nexport const getUserMetaData = () => dispatch => {\n    socket.on('updateMetaData', (data) => {\n        dispatch({\n            type: META_DATA,\n            data\n        })\n    })\n}\nexport const letterSelected = (letter) => (dispatch, getState) => {\n\n    if (getState().hangman.myTurn) {\n        socket.emit('selectingLetter', { letter, room: getState().room.roomName })\n        dispatch({\n            type: 'SELECTING_LETTER'\n        })\n    }\n\n}\nexport const letterListener = () => (dispatch, getState) => {\n    socket.on('letterSelected', (game) => {\n        dispatch({\n            type: LETTER_SELECTED,\n            game\n        })\n        socket.emit('isItMyTurn', getState().room.roomName)\n    })\n}\nexport const newMasterListener = () => dispatch => {\n    socket.on('newMaster', (game) => {\n        dispatch({\n            type: NEW_MASTER,\n            game\n        })\n    })\n}\nexport const newWord = ({ word, hint }) => (dispatch, getState) => {\n    socket.emit('newWord', { word, hint, room: getState().room.roomName })\n    dispatch({\n        type: 'WORD_CHOSEN'\n    })\n    dispatch({\n        type: LOADING\n    })\n}\nexport const wordSetListener = () => (dispatch, getState) => {\n    socket.on('wordSet', (game) => {\n        dispatch({\n            type: NEW_WORD,\n            game\n        })\n        dispatch({\n            type: CANCEL_LOAD\n        })\n        socket.emit('selectingLetter', { letter: null, room: getState().room.roomName })\n    })\n}\nexport const wordInfoListener = () => (dispatch) => {\n    socket.on('wordInfo', (info) => {\n        dispatch({\n            type: CANCEL_LOAD\n        })\n        dispatch({\n            type: WORD_INFO, info\n        })\n    })\n}\nexport const nextTurnListener = () => (dispatch, getState) => {\n    socket.on('nextTurn', (game) => {\n        const myName = getState().room.user.name\n\n        if (myName && game.turn.name && game.turn.name === myName) {\n            dispatch({\n                type: MY_TURN,\n                myTurn: true,\n                game\n            })\n        } else {\n            dispatch({\n                type: MY_TURN,\n                myTurn: false,\n                game\n            })\n        }\n    })\n}\nexport const skipMe = () => (dispatch, getState) => {\n    socket.emit('skipMyTurn', getState().room.roomName)\n    dispatch({\n        type: 'SKIP'\n    })\n}\nexport const skipMaster = () => (dispatch, getState) => {\n    socket.emit('skipMaster', getState().room.roomName)\n    dispatch({\n        type: 'SKIP_MASTER'\n    })\n}","import React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux'\nimport { initiateJoin } from '../../actions';\nclass JoinForm extends Component {\n\n    renderInput = ({ input, autoFocus, label, meta }) => {\n        const inputClass = meta.error && meta.touched ? 'input is-danger' : 'input is-dark'\n        const labelClass = meta.error && meta.touched ? 'label has-text-light has-background-danger has-text-centered' : 'label has-text-light has-background-dark has-text-centered'\n        return (\n            <div className=\"field\">\n                <label htmlFor=\"\"\n                    className={labelClass}>\n                    {meta.touched && meta.error ? meta.error : label}:\n                 </label>\n                <div className=\"control\">\n\n                    <input className={inputClass} type=\"text\" {...input} autoFocus={autoFocus} autoComplete=\"off\" />\n                </div>\n            </div>\n        )\n    }\n    onSubmit = ({ name, room }) => {\n        room = room.toUpperCase()\n        this.props.initiateJoin({ name, room })\n    }\n    render() {\n        return (\n            <form id=\"join-form\" onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"form has-text-centered play\">\n                <div className=\"field\">\n                    <div className=\"control\">\n                        <Field name=\"name\" component={this.renderInput} autoFocus={true} label=\"Enter a username\" />\n                    </div>\n                </div>\n                <div className=\"field\">\n                    <div className=\"control\">\n                        <Field name=\"room\" component={this.renderInput} autoFocus={false} label=\"Enter a room\" />\n                    </div>\n                </div>\n                <div className=\"control has-text-centered\">\n                    <button className=\"button is-dark is-large\"><span className=\"icon\"><i className=\"fas fa-dungeon fa-2x\"></i></span></button>\n                </div>\n            </form>\n        );\n    }\n}\n\nconst validate = ({ name, room }) => {\n    const regex = /\\W+/g\n    const errors = {}\n    if (!name || name.length < 1) {\n        errors.name = \"Name Required\"\n    }\n    if (name && regex.test(name)) {\n        errors.name = \"Invalid Name\"\n    }\n    if (name && name.length > 15) {\n        errors.name = \"Name too Long\"\n    }\n    if (name && name.toLowerCase() === 'admin') {\n        errors.name = \"You cannot have that name\"\n    }\n    if (!room) {\n        errors.room = \"Room Required\"\n    }\n    if (room && regex.test(room)) {\n        errors.room = \"Invalid room name\"\n    }\n    if (room && room.length > 15) {\n        errors.room = \"Room name too long\"\n    }\n\n    return errors\n}\n\n\nconst formWrapped = reduxForm({\n    form: \"JoinForm\",\n    validate,\n    enableReinitialize: true\n})(JoinForm);\n\nexport default connect(null, { initiateJoin })(formWrapped)\n","import anime from 'animejs';\n\n//home page title\n//screen on\n//screen flicker\n//hangman svg\nexport const homepageAnimation = {\n    noise: (elem) => {\n        let i = 0\n        function repeatNoise() {\n            return anime({\n                targets: elem,\n                backgroundPositionX: () => `${i === 0 || i === 3 ? 0 : 100}px`,\n                backgroundPositionY: () => `${i === 2 || i === 3 ? 100 : 0}px`,\n                loop: 1,\n                duration: 10,\n                complete: () => {\n                    i++;\n                    if (i > 3) {\n                        i = 0\n                    }\n                    repeatNoise()\n                }\n            })\n        }\n        repeatNoise()\n    },\n    glitch: (elem) => {\n        let i = 1\n        function repeatGlitch() {\n            return anime.timeline().add({\n                targets: `${elem}-secondary`,\n                translateX: .5 * i,\n\n                duration: 250,\n            }).add({\n                targets: `${elem}-tertiary`,\n                translateX: -.5 * i,\n\n                duration: 250,\n                complete: () => {\n                    i *= -1;\n                    repeatGlitch()\n                }\n            })\n        }\n        repeatGlitch()\n    },\n    slideIn: (elem) => {\n        return anime({\n            targets: elem,\n            translateY: [{ value: ['+=200', 0], duration: 1000, elasticity: 500 }],\n        })\n    },\n    slideOut: (elem) => {\n        return anime({\n            targets: elem,\n            translateY: [{ value: [0, 1000], duration: 1000, elasticity: 500 }],\n        })\n    },\n    pop: (elem) => {\n        return anime({\n            targets: elem,\n            scale: 1.1,\n            duration: 250,\n            autoplay: false,\n            easing: 'easeInOutBack'\n        })\n    }\n\n}\nexport const hangmanAnimation = {\n    turnOn: (elem) => {\n        return anime({\n            targets: elem,\n            scaleY: [{ value: ['*=.1', 1], duration: 1500, elasticity: 0 }],\n            opacity: [{ value: ['*=.1', 1], delay: 500, duration: 1500, elasticity: 1000 }]\n        })\n    },\n    changeScreen: (elem) => {\n        return anime({\n            targets: elem,\n            opacity: [{ value: ['*=.75', 1], duration: 2000, elasticity: 1000 }]\n        })\n    },\n    flicker: (elem) => {\n        const opacityValues = Array(20).fill('x').map((e, i) => i % 2 === 0 ? .95 : 1)\n        return anime({\n            targets: elem,\n            opacity: opacityValues,\n            duration: 100,\n            loop: true\n        })\n    },\n    ellipsis: (elems) => {\n        return anime({\n            targets: elems,\n            translateY: [\n                { value: -40, duration: 1000, easing: 'easeOutCubic' },\n                { value: 0, duration: 1000, easing: 'easeInCubic' }\n            ],\n            loop: true,\n\n            delay: (el, i) => {\n                return i * 666\n            }\n        })\n    },\n    slideInAndFade: (elem) => {\n        return anime({\n            targets: elem,\n            translateY: [{ value: ['+=80', 0], duration: 1000, easing: 'linear' }],\n            opacity: [{ value: ['*=0', 1, 1, 0], duration: 1000, easing: 'linear' }],\n            visibility: { value: 'hidden', delay: 1000, duration: 1 },\n            autoplay: false\n        })\n    },\n    blink: (elem) => {\n        return anime({\n            targets: elem,\n            opacity: [\n                { value: 0, duration: 500, easing: 'easeInQuad' },\n                { value: 1, duration: 500, easing: 'easeInQuad' }\n            ],\n            loop: true,\n            duration: 1000,\n            easing: 'linear',\n            autoplay: false\n        })\n    },\n    shrinkToNothing: (elem) => {\n        return anime({\n            targets: elem,\n            scale: 0,\n            duration: 500,\n            easing: 'easeInOutBack'\n        })\n    }\n\n}\nexport const chatAnimation = {\n    slideIn: (elem, fromDirection) => {\n        return anime({\n            targets: elem,\n            translateX: [{ value: [fromDirection === 'left' ? -100 : 100, 0], duration: 1000, elasticity: 500 }]\n        })\n    },\n    inflate: (elem) => {\n        return anime({\n            targets: elem,\n            scale: [\n                { value: 2, duration: 333, elasticity: 1000, easing: 'easeOutCubic' },\n                { value: 1, duration: 333, elasticity: 1000, easing: 'easeInCubic' }\n            ]\n        })\n    }\n}\n\nexport const svgAnimation = {\n    fall: (elem, path, delay = 0) => {\n        const track = anime.path(path);\n        try {\n            return anime({\n                targets: elem,\n                translateY: track('y'),\n                duration: 500,\n                easing: 'easeInQuad',\n                delay\n            })\n        } catch (e) {\n\n        }\n    },\n    wave: (elem, path, loop = true, autoplay = true, { direction, delay, duration, easing, elasticity } = {}) => {\n        const track = anime.path(path);\n        const obj = {\n            targets: elem,\n            y2: track('y'),\n            x2: track('x'),\n            duration: duration || 1000,\n            delay: delay !== undefined ? delay : 0,\n            loop,\n            direction: direction || 'normal',\n            autoplay,\n\n        }\n        if (elasticity) {\n            obj.elasticity = elasticity\n        }\n        if (easing) {\n            obj.easing = easing\n        }\n        return anime(obj)\n    },\n    drawStroke: (elem, delay) => {\n        return anime({\n            targets: elem.selector,\n            x2: { value: [elem.x1, elem.x2], duration: 500 },\n            y2: { value: [elem.y1, elem.y2], duration: 500 },\n            delay: delay ? 500 : 0,\n            easing: 'linear',\n            autoplay: true,\n            loop: false\n        })\n    }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { cancelError } from '../actions';\nimport { homepageAnimation as animate } from '../animations';\n\nclass ErrorMessage extends Component {\n    componentDidMount() {\n        animate.slideIn('#error-message')\n    }\n    cancelError = () => {\n        animate.slideOut('#error-message')\n            .finished.then(() => {\n                this.props.cancelError()\n            })\n    }\n    render() {\n        return (\n\n            <article id=\"error-message\" className={this.props.error.exists ? 'message is-danger' : 'message is-invisible'}>\n                <div className=\"message-header\">\n                    <p>{'Error!'}</p>\n                    <button onClick={this.cancelError} className=\"delete\" aria-label=\"delete\"></button>\n                </div>\n                <div className=\"message-body\">\n                    {this.props.error.message}\n                </div>\n            </article>\n\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        error: state.error\n    }\n}\nexport default connect(mapStateToProps, { cancelError })(ErrorMessage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass RoomsMeta extends Component {\n\n\n    renderRoomList = () => {\n        return this.props.meta.map((room) => {\n            return (\n                <li key={room.name}\n                    className=\"list-item play\">\n                    <p>\n                        <em>{room.name}</em>\n                        <strong>{room.numUsers > 4 ? ' MAX' : null}</strong>\n                        <span className=\"num\">{room.numUsers} {room.numUsers === 1 ? 'player' : 'players'}</span>\n\n                        <span onClick={this.props.onClick(room.name)} className=\"icon has-text-success\"><i className=\"fas fa-sign-in-alt\"></i></span>\n                    </p>\n\n                </li >\n            )\n        })\n    }\n    render() {\n        return (\n\n            <div id=\"rooms-meta\" className=\"card\">\n                <header className=\"card-header\">\n                    <p className=\"card-header-title anton\">\n                        Active Rooms: {this.props.meta.length}\n                    </p>\n\n                </header>\n                <div className=\"card-content\">\n\n                    <ul className=\"list has-background-dark\">\n                        {this.renderRoomList()}\n                    </ul>\n\n                </div>\n\n            </div>\n\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        meta: state.meta\n    }\n}\nexport default connect(mapStateToProps, null)(RoomsMeta);\n","import React, { Component } from 'react';\nimport { homepageAnimation as animate } from '../../animations';\n\nclass Title extends Component {\n\n    componentDidMount() {\n        animate.glitch('#title')\n    }\n    render() {\n        let color1 = this.props.colors.primary,\n            color2 = this.props.colors.secondary,\n            color3 = this.props.colors.tertiary\n        return (\n\n            <svg viewBox=\"0 0 140 35\">\n                <text id={`${this.props.componentId}-tertiary`}>\n                    <tspan x=\"70\" y=\"35\" style={{ fill: color3, fontFamily: '\"Anton\", sans-serif', fontSize: 35 }} textAnchor=\"middle\" >\n                        {this.props.text}\n                    </tspan>\n\n                </text>\n                <text id={`${this.props.componentId}-secondary`}>\n                    <tspan x=\"70\" y=\"35\" style={{ fill: color2, fontFamily: '\"Anton\", sans-serif', fontSize: 35 }} textAnchor=\"middle\" >\n                        {this.props.text}\n                    </tspan>\n\n                </text>\n                <text id={this.props.componentId}>\n                    <tspan x=\"70\" y=\"35\" style={{ fill: color1, fontFamily: '\"Anton\", sans-serif', fontSize: 35 }} textAnchor=\"middle\" >\n                        HANGMAN\n                    </tspan>\n\n                </text>\n\n            </svg>\n\n        );\n    }\n}\n\nexport default Title;\n","import React, { Component } from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { submitDict } from '../../actions';\nimport { homepageAnimation as animate } from '../../animations';\n\n\nclass DictionaryForm extends Component {\n    componentDidMount() {\n        document.getElementById('dict-form').scrollIntoView()\n        this.pop = {\n            oxford: animate.pop('#oxford-label'),\n            urban: animate.pop('#urban-label'),\n            free: animate.pop('#free-label'),\n        }\n        this.ids = ['oxford', 'urban', 'free']\n    }\n    renderInput = ({ input, label, meta, value }) => {\n        const labelClass = 'radio-label has-background-dark label'\n        return (\n            <>\n                <label className={labelClass} >\n                    {label ? <figure className=\"image is-3by1\">\n                        <img id={`${label}-logo`} src={`./images/${label}logo.png`} alt={`${label} Dictionary`} />\n                    </figure> : <div className=\"anton is-size-1\">Free For All</div>}\n\n                </label>\n\n                <div className=\"control\">\n                    <input className={input} type=\"radio\" {...input} value={value} />\n                </div>\n            </>\n        )\n    }\n    onSubmit = ({ dictionary }) => {\n        this.props.submitDict(dictionary)\n    }\n    onClick = (id) => {\n\n        return () => {\n            this.ids.forEach((ID) => {\n                if (ID === id) {\n                    this.pop[ID].reversed = false\n                    this.pop[ID].play()\n                    document.getElementById(`${ID}-label`).classList.add('selected')\n                } else {\n                    this.pop[ID].reversed = true\n                    if (this.pop[ID].completed) {\n                        this.pop[ID].play()\n                    }\n                    document.getElementById(`${ID}-label`).classList.remove('selected')\n                }\n\n            })\n            document.getElementById(id).setAttribute('checked', true)\n        }\n\n    }\n    render() {\n        return (\n            <form id=\"dict-form\" onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"form has-text-centered play\">\n                <div className=\"field\">\n                    <label id=\"oxford-label\" className=\"label dict-label has-background-dark\">\n                        <Field id=\"oxford\" onClick={this.onClick('oxford')} name=\"dictionary\" component=\"input\" type=\"radio\" value=\"Oxford\" />\n                        {' '}\n                        <figure className=\"image is-3by1\">\n                            <img id=\"Oxford-logo\" src={process.env.PUBLIC_URL + \"/images/Oxfordlogo.png\"} alt=\"Oxford Dictionary\" />\n                        </figure>\n                    </label >\n                    <label id=\"urban-label\" className=\"label dict-label has-background-dark\">\n                        <Field id=\"urban\" onClick={this.onClick('urban')} name=\"dictionary\" component=\"input\" type=\"radio\" value=\"Urban\" />\n                        {' '}\n                        <figure className=\"image is-3by1\">\n                            <img id=\"Urban-logo\" src={process.env.PUBLIC_URL + \"/images/Urbanlogo.png\"} alt=\"Urban Dictionary\" />\n                        </figure>\n                    </label>\n                    <label id=\"free-label\" className=\"label dict-label has-background-dark is-size-1 is-size-2-tablet is-size-3-mobile anton\">\n                        <Field id=\"free\" onClick={this.onClick('free')} name=\"dictionary\" component=\"input\" type=\"radio\" value=\"Free\" />\n                        {' '}\n                        <span>Free For All</span>\n                    </label>\n                </div>\n                <div className=\"control has-text-centered\">\n                    <button className=\"button is-dark is-large\"><span className=\"icon\"><i className=\"fas fa-dungeon fa-2x\"></i></span></button>\n                </div>\n            </form>\n        );\n    }\n}\nconst validate = ({ dictionary }) => {\n    const errors = {}\n    if (!dictionary) {\n        errors.dictionary = 'You must choose one'\n    }\n    return errors\n}\nconst formWrapped = reduxForm({\n    form: 'ChooseDict',\n    validate\n})(DictionaryForm);\n\nexport default connect(null, { submitDict })(formWrapped)\n","import React, { Component } from 'react';\nimport { hangmanAnimation as animate } from '../../animations';\n\nclass Ellipsis extends Component {\n    componentDidMount() {\n        animate.ellipsis(document.getElementById('ellipsis').childNodes)\n    }\n    render() {\n        return (\n            <svg height={`${this.props.scale * 100 || 100}%`} width={`${this.props.scale * 100 || 100}%`} id=\"ellipsis\" viewBox=\"0 0 90 65\">\n                <circle cx=\"17\" cy=\"55\" r=\"10\" fill={this.props.color || 'hsl(0, 0%, 21%)'}></circle>\n                <circle cx=\"45\" cy=\"55\" r=\"10\" fill={this.props.color || 'hsl(0, 0%, 21%)'}></circle>\n                <circle cx=\"73\" cy=\"55\" r=\"10\" fill={this.props.color || 'hsl(0, 0%, 21%)'}></circle>\n            </svg>\n        );\n    }\n}\n\nexport default Ellipsis;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport history from '../../history';\nimport JoinForm from './JoinForm';\nimport { joinSuccess, errorListener, getUserMetaData, askForDictListener } from '../../actions';\nimport ErrorMessage from '../ErrorMessage';\nimport RoomsMeta from './RoomsMeta';\nimport { homepageAnimation as animate } from '../../animations';\nimport Title from '../SVG/Title';\nimport DictionaryForm from './DictionaryForm';\nimport Loader from '../SVG/Loader';\n\nclass JoinPage extends Component {\n    state = {\n        selectedRoom: ''\n    }\n    componentDidMount() {\n        if (this.props.room) {\n            return history.push(`/Hangman/${this.props.room}`)\n        }\n        document.querySelector('title').textContent = 'Join | Hangman'\n        document.getElementById('css-load').setAttribute('href', process.env.PUBLIC_URL + \"/joinStyle.css\")\n        this.props.joinSuccess()\n        this.props.errorListener()\n        this.props.askForDictListener()\n        this.props.getUserMetaData()\n        animate.noise('.noise')\n    }\n    onRoomClick(room) {\n        return () => {\n            this.setState({\n                selectedRoom: room\n            })\n        }\n\n    }\n\n    render() {\n        return (\n            <div id=\"join-container\" className=\"columns is-centered\">\n                <div className=\"column is-one-third has-text-centered\">\n\n                    {/* <h1 id=\"title\" className=\"title is-1 anton has-text-white glitch\" datatext=\"HANGMAN\">HANGM<i className=\"fas fa-male\"></i>N</h1> */}\n                    <Title componentId=\"title\" text={`HANGMAN`} colors={{ primary: 'white', secondary: '#3D9100', tertiary: '#C26EFF' }} />\n                    {this.props.loading ? <Loader scale={.15} color='white' /> : ''}\n                    {this.props.error.exists ? <ErrorMessage /> : <RoomsMeta onClick={this.onRoomClick.bind(this)} />}\n\n                    <div className=\"box noise\">\n                        <div className=\"columns is-centered\">\n                            <div className={!this.props.dictionary ? \"column is-four-fifths\" : \"column is-two-thirds\"}>\n                                {/* <DictionaryForm /> */}\n                                {!this.props.dictionary ? <JoinForm initialValues={{ room: this.state.selectedRoom }} /> : <DictionaryForm />}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        error: state.error,\n        loading: state.loading,\n        dictionary: state.room.dictionary,\n        room: state.room.roomName\n    }\n}\nexport default connect(mapStateToProps, { joinSuccess, errorListener, getUserMetaData, askForDictListener })(JoinPage);\n","import React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { createMessage } from '../../../actions';\n\nclass MessageForm extends Component {\n\n\n    onSubmit = ({ text }) => {\n        !text || this.props.createMessage(text)\n    }\n    renderInput = ({ input, id }) => {\n        return <input className=\"input\" id={id} type=\"text\" {...input} autoComplete=\"off\" autoFocus={true} />\n    }\n    render() {\n        return (\n            <form id=\"message-form\" className=\"form box\" action=\"\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                <div className=\"columns is-mobile is-centered is-gapless\">\n                    <div className=\"column is-10\">\n                        <Field name=\"text\" component={this.renderInput} id=\"message-input\" />\n                    </div>\n                    <div className=\"column is-2\">\n                        <button className=\"button is-info\">Send</button>\n                    </div>\n\n                </div>\n            </form>\n\n        );\n    }\n}\n\nconst formWrapped = reduxForm({\n    form: 'MessageForm'\n})(MessageForm)\n\nexport default connect(null, { createMessage })(formWrapped);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { hangmanAnimation as animate } from '../../../animations';\nclass Score extends Component {\n\n    state = {\n        scoreVal: null,\n        timeout: null\n    }\n    componentDidMount() {\n        this.slideInAndFade = animate.slideInAndFade('#score')\n    }\n    getUserScore = () => {\n        if (this.props.user) {\n            return this.props.user.score\n        }\n    }\n    componentDidUpdate({ user }) {\n        if (user) {\n            let scoreIncrease = this.getUserScore() - user.score\n            let scoreVal = scoreIncrease > 0 ? `+${scoreIncrease}` : null\n            if (scoreVal) {\n                this.setState({\n                    scoreVal,\n                    timeout: setTimeout(() => {\n                        this.setState({\n                            scoreVal: null,\n                            timeout: null\n                        })\n                    }, 1000)\n                }, () => {\n                    this.slideInAndFade.restart()\n                })\n            }\n        }\n\n\n    }\n    render() {\n        return (\n            <p id=\"score\" className=\"has-text-success bold anton is-size-2\">{this.state.scoreVal ? <span>{this.state.scoreVal}</span> : null}</p>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.room.users.filter((user) => user.name === state.room.user.name)[0],\n        myTurn: state.hangman.myTurn\n    }\n}\n\nexport default connect(mapStateToProps, null)(Score);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { newMessageListener } from '../../../actions';\nimport MessageForm from './MessageForm';\nimport Score from '../Hangman/Score';\nimport { chatAnimation as animate } from '../../../animations';\nclass Chat extends Component {\n\n\n    componentDidMount() {\n        this.props.newMessageListener()\n    }\n    componentDidUpdate(prevProps) {\n        const messages = document.querySelectorAll('.chat-message')\n\n        if (messages.length > 0) {\n            const last = messages[messages.length - 1]\n            last.scrollIntoView()\n        }\n        if (this.props.chat.messages.length > prevProps.chat.messages.length) {\n            animate.inflate('.new')\n        }\n        for (let i = this.props.chat.messages.length - 1; i > prevProps.chat.messages.length - 1; i--) {\n            animate.slideIn(`#message-${i}`, this.props.chat.messages[i].from === this.props.user.name ? 'right' : 'left')\n        }\n    }\n    renderMessages() {\n        let messagesList = document.querySelector('.messages-container')\n        if (messagesList && !messagesList.classList.contains('is-active')) {\n            document.querySelector('.fa-comment').classList.add('new')\n        }\n        return this.props.chat.messages.map(({ from, text, createdAt }, i) => {\n            const { name } = this.props.user\n            let fromMe = from === name\n            let fromLabel = <strong>{fromMe ? 'me' : from}{from === 'Admin' ? <span className=\"icon\"><i className=\"fas fa-star\"></i></span> : ''}</strong>\n            let className = fromMe ? 'speech-bubble-right' : 'speech-bubble-left'\n\n            return (<li key={i} id={`message-${i}`} className={`list-item chat-message`}>\n                <div className={fromMe ? 'message-sender-right' : 'message-sender-left play'}>\n                    {fromLabel}\n                </div>\n                <div className={className}>\n                    <div className=\"message-text\">\n                        <div className=\"content has-text-light\">{text}</div>\n                    </div>\n                </div>\n                <span className={from === name ? 'is-size-7 timestamp-right' : 'is-size-7 timestamp-left'}>{createdAt}</span>\n\n            </li>\n            )\n        })\n    }\n    toggleChat = () => {\n        document.querySelector('.messages-container').classList.toggle('is-active');\n        document.querySelector('.fa-comment').classList.remove('new')\n        document.querySelector('.navbar-burger').classList.remove('is-active')\n        document.querySelector('#user-list').classList.remove('is-active')\n\n    }\n    render() {\n        return (\n            <div className=\"column is-9 is-full-mobile chat-container\">\n                <Score />\n                <button onClick={this.props.toggleMenu} className=\"navbar-burger is-pulled-left has-text-black\" aria-label=\"menu\" aria-expanded=\"false\">\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                </button>\n                <p onClick={this.toggleChat} id=\"chat-button\"><span className=\"icon has-text-dark\"><i className=\"fas fa-comment fa-lg new\"></i></span></p>\n                <ul className=\"messages-container list has-background-dark\">\n                    {/* <li className=\"list-item\"></li>\n                    <li className=\"list-item\"></li>\n                    <li className=\"list-item\"></li> */}\n\n                    {this.renderMessages()}\n                    {/* <li className=\"list-item\"></li>\n                    <li className=\"list-item\"></li> */}\n                    <li className=\"list-item\"></li>\n\n                </ul>\n\n\n                <MessageForm />\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        chat: state.chat,\n        user: state.room.user\n    }\n}\n\nexport default connect(mapStateToProps, { newMessageListener })(Chat);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateUserListener } from '../../../actions';\n\nclass UserList extends Component {\n    componentDidMount() {\n        this.props.updateUserListener()\n        console.log(this.props.dictionary)\n    }\n    renderUsers = () => {\n        let highestScore = this.props.users.reduce((a, b) => b.score > a.score ? b : b.score === a.score ? { name: '', score: b.score } : a, { name: '', score: -1 }).name\n        return this.props.users.sort((a, b) => b.score - a.score).map(({ name, id, score }) => {\n            return (\n                <li key={id}\n                    className=\"list-item user-list-item has-text-light bold is-size-5 play\">\n                    {name}\n                    <span className=\"is-pulled-right\">\n                        {name === highestScore ? <span className=\"icon\"><i className=\"fas fa-crown\"></i></span> : null}\n                        {name === this.props.master.name ? <span className=\"icon\"><i className=\"fas fa-brain\"></i></span> : null} {score} {score === 1 ? 'point' : 'points'}</span>\n                </li>\n            )\n        })\n    }\n    renderHeader() {\n        return (\n            <div className=\"header\">\n                <div className=\"columns is-mobile\">\n                    <div className=\"column is-one-third\">\n                        <a href=\"https://omarjuice.github.io/\" rel=\"noopener noreferrer\" target=\"_blank\" >\n                            <figure className=\"image is-4by3\">\n                                <img id={`OJ-logo`} src={`${process.env.PUBLIC_URL}/images/OJICONtrue.png`} alt={`OJ`} />\n                            </figure>\n                        </a>\n                    </div>\n                    {this.props.dictionary === 'Free' ? null :\n                        <div className=\"column is-two-thirds\">\n                            <a target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                href={this.props.dictionary === 'Oxford' ? 'https://developer.oxforddictionaries.com/' : 'https://www.urbandictionary.com/'}>\n                                <figure className=\"image is-3by1\">\n                                    <img id={`${this.props.dictionary}-logo`} src={`${process.env.PUBLIC_URL}/images/${this.props.dictionary}logo.png`} alt={`${this.props.dictionary} Dictionary`} />\n                                </figure>\n                            </a>\n                        </div>\n                    }\n\n                </div>\n            </div>\n        )\n    }\n    render() {\n        return (\n            <div id=\"user-list\" onClick={this.props.toggleMenu} className=\"column is-3 is-9-mobile\">\n                {this.renderHeader()}\n                <aside className=\"menu\">\n                    <p className=\"menu-label has-text-light has-text-centered title is-3 anton\">\n                        <strong>{this.props.room}</strong>\n\n                    </p>\n\n                    <ul className=\"menu-list\">\n                        {this.renderUsers()}\n                    </ul>\n\n                </aside>\n\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        users: state.room.users,\n        room: state.room.roomName,\n        master: state.hangman.master,\n        dictionary: state.room.dictionary\n    }\n}\n\nexport default connect(mapStateToProps, { updateUserListener })(UserList);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { skipMe, skipMaster } from '../../actions';\nimport { hangmanAnimation as animate } from '../../animations';\n\nclass Timer extends Component {\n    state = {\n        time: null,\n        timer: null\n    }\n    componentDidMount() {\n\n        this.setState({\n            time: this.props.time,\n            timer: this.getTimer()\n        }, () => {\n\n        })\n        this.blink = animate.blink('.blink')\n    }\n    getUserScore = () => {\n        if (this.props.user) {\n            return this.props.user.score\n        }\n    }\n    componentDidUpdate({ user, incorrect }) {\n        if (this.state.time && this.state.time < 6) {\n            this.blink.play()\n        }\n        if (user) {\n            let scoreIncrease = this.getUserScore() - user.score\n            let incorrectIncrease = this.props.incorrect - incorrect\n            let scoreVal = scoreIncrease > 0 || incorrectIncrease > 0\n            if (scoreVal) {\n                this.blink.pause()\n                this.setState({\n                    time: 60,\n                })\n            }\n        }\n    }\n    getTimer() {\n        return setInterval(() => {\n            if (this.state.time === 0) {\n                clearInterval(this.state.timer)\n                this.setState({\n                    timer: null,\n                    time: null\n                })\n                this.setState({\n                    timer: this.getTimer(),\n                    time: this.props.time\n                })\n                if (this.props.svg) {\n                    return this.props.skipMe()\n                }\n                if (this.props.masterTimer) {\n                    return this.props.skipMaster()\n                }\n            } else {\n                return this.setState({\n                    time: this.state.time - 1\n                })\n            }\n        }, 1000)\n    }\n    componentWillUnmount() {\n        clearInterval(this.state.timer)\n        this.blink.pause()\n    }\n    render() {\n        let renderedTimer = this.props.svg ?\n            <tspan x={this.props.x} y={this.props.y}\n                className={this.state.time < 7 ? 'blink' : null}\n                style={{ fill: this.state.time < 10 ? 'red' : 'black', fontFamily: '\"Play\", sans-serif', fontSize: this.props.fontSize }}\n                textAnchor={this.props.textAnchor} >{this.state.time}</tspan>\n            : <span className={`is-size-3 play ${this.state.time < 7 ? 'blink' : null}`} style={{ color: this.state.time < 10 ? 'red' : 'black' }}>{this.state.time}</span>\n        return (\n            renderedTimer\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        user: state.room.users.filter((user) => user.name === state.room.user.name)[0],\n        incorrect: state.hangman.incorrect\n    }\n}\nexport default connect(mapStateToProps, { skipMe, skipMaster })(Timer);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { svgAnimation as animate } from '../../animations';\n\nclass XSVG extends Component {\n\n\n    componentDidUpdate = (prevProps) => {\n        if (this.props.incorrect > prevProps.incorrect) {\n            [document.querySelector(`#x-left-${this.props.incorrect - 1}`),\n            document.querySelector(`#x-right-${this.props.incorrect - 1}`)].forEach((stroke, i) => {\n                animate.drawStroke({\n                    selector: stroke,\n                    x1: stroke.getAttribute('x1'),\n                    x2: stroke.getAttribute('x2'),\n                    y1: stroke.getAttribute('y1'),\n                    y2: stroke.getAttribute('y2'),\n                }, i === 1)\n            })\n        }\n    }\n    renderXs = () => {\n        let color = this.props.color\n        return Array(this.props.incorrect).fill('x').map((x, i) => {\n            return (\n                <g key={`x-${i}`}>\n                    <line id={`x-left-${i}`} className=\"x-stroke-left\" x1=\"5\" y1={i * 25 + 10} x2=\"20\" y2={i * 25 + 25} stroke={color} strokeWidth=\"4\"></line>\n                    <line id={`x-right-${i}`} className=\"x-stroke-right\" x1=\"20\" y1={i * 25 + 10} x2=\"5\" y2={i * 25 + 25} stroke={color} strokeWidth=\"4\"></line>\n                </g>\n            )\n        })\n    }\n    render() {\n        return (\n            <g x={this.props.x} y={this.props.y}>\n                {this.renderXs()}\n            </g>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        incorrect: state.hangman.incorrect\n    }\n}\n\nexport default connect(mapStateToProps, null)(XSVG);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Timer from './Timer';\nimport XSVG from './XSVG';\nimport { svgAnimation as animate } from '../../animations';\n\n\nclass ManSVG extends Component {\n    constructor(props) {\n        super(props);\n        this.width = 150;\n        this.height = 200;\n\n    }\n    componentDidMount() {\n\n        this.rightWave = animate.wave('#right-arm', '#arc-right', 1, true, { easing: 'easeInCubic' });\n        this.leftWave = animate.wave('#left-arm', '#arc-left', 1, true, { easing: 'easeInCubic' });\n        this.rightWaveReverse = animate.wave('#right-arm', '#arc-right', 1, false, { direction: 'reverse', easing: 'easeOutCubic' });\n        this.leftWaveReverse = animate.wave('#left-arm', '#arc-left', 1, false, { direction: 'reverse', easing: 'easeOutCubic' });\n        this.leftDoor = animate.wave('#door-left', '#door-arc-left', 1, false, { easing: 'easeInOutBack' })\n        this.rightDoor = animate.wave('#door-right', '#door-arc-right', 1, false, { easing: 'easeInOutBack' })\n        Promise.all(\n            [this.rightWave.finished,\n            this.leftWave.finished]\n        ).then(() => {\n            this.rightWaveReverse.play()\n            this.leftWaveReverse.play()\n\n        })\n    }\n    componentDidUpdate(prevProps) {\n\n        if (this.props.isChoosing && !prevProps.isChoosing) {\n            this.leftWave.restart();\n            this.rightWave.restart();\n        }\n        if (this.props.incorrect >= 5 && this.props.gameOver) {\n            this.leftWaveReverse.reverse();\n            this.rightWaveReverse.reverse();\n            this.leftDoor.play()\n            this.rightDoor.play()\n            animate.fall('#body', '#fall-path', 1000)\n        } else if (this.props.incorrect < 5 && this.props.gameOver) {\n            this.leftWaveReverse.restart();\n            this.rightWaveReverse.restart();\n        }\n\n    }\n    render() {\n        //directions left and right refer to hangman's perspective, not ours\n        const { width, height } = this\n        return (\n            <svg id=\"hangman-svg\" viewBox=\"0 0 150 200\">\n                <g id=\"body\">\n                    <g id=\"head\">\n                        <circle cx=\"100\" cy=\"35\" r=\"20\" stroke=\"black\" strokeWidth=\"4\" fill=\"white\" />\n                        <circle cx=\"93\" cy=\"30.099999999999998\" r=\"1\" stroke=\"black\" strokeWidth=\"4\" fill=\"black\" />\n                        <circle cx=\"106.9999995\" cy=\"30.099999999999998\" r=\"1\" stroke=\"black\" strokeWidth=\"4\" fill=\"black\" />\n                    </g>\n                    <line x1=\"100\" y1=\"55.00000000000001\" x2=\"100\" y2=\"105\" stroke=\"black\" strokeWidth=\"4\" />\n                    <g id=\"legs\">\n                        <line x1=\"100\" y1=\"105\" x2=\"75\" y2=\"135\" stroke=\"black\" strokeWidth=\"4\" />\n                        <line x1=\"100\" y1=\"105\" x2=\"125\" y2=\"135\" stroke=\"black\" strokeWidth=\"4\" />\n                    </g>\n                    <g id=\"arms\">\n                        <line x1=\"100\" y1=\"70\" x2=\"79.99999994999999\" y2=\"105\" stroke=\"black\" strokeWidth=\"4\" id=\"right-arm\" />\n                        <line x1=\"100\" y1=\"70\" x2=\"120\" y2=\"105\" stroke=\"black\" strokeWidth=\"4\" id=\"left-arm\" />\n                    </g>\n                </g>\n                <g id=\"hang\">\n                    <line x1=\"25\" y1=\"0\" x2=\"100\" y2=\"0\" stroke=\"black\" strokeWidth=\"4\" />\n                    <line x1=\"100\" y1=\"0\" x2=\"100\" y2=\"15\" stroke=\"black\" strokeWidth=\"4\" />\n                    <line x1=\"25\" y1=\"0\" x2=\"25\" y2=\"150\" stroke=\"black\" strokeWidth=\"4\" />\n                    <line x1=\"0\" y1=\"150\" x2=\"70.4\" y2=\"150\" stroke=\"black\" strokeWidth=\"4\" />\n                    <line id=\"door-right\" x1=\"70.4\" y1=\"150\" x2=\"87\" y2=\"150\" stroke=\"black\" strokeWidth=\"4\" />\n                    <line id=\"door-left\" x1=\"131.8\" y1=\"150\" x2=\"87\" y2=\"150\" stroke=\"black\" strokeWidth=\"4\" />\n                    <line x1=\"131.8\" y1=\"150\" x2=\"150\" y2=\"150\" stroke=\"black\" strokeWidth=\"4\" />\n                </g>\n                <g id=\"incorrect\" >\n                    <XSVG x=\"0\" y=\"0\" color={this.props.master && this.props.master.name === this.props.user ? 'green' : 'red'} />\n                </g>\n                <path d=\"M99.7,0A17612.30316,17612.30316,0,0,1,100.3,198.2\" style={{ fill: 'none', stroke: 'black', strokeWidth: '0' }} id=\"fall-path\"></path>\n                <path d=\"M80.2,104.5A40.175389,40.175389,0,0,1,71,41.3\" style={{ fill: 'none', stroke: 'black', strokeWidth: '0' }} id=\"arc-right\"></path>\n                <path d=\"M119.5,105.4a40.330966,40.330966,0,0,0,9.800000000000011,-64.4\" style={{ fill: 'none', stroke: 'black', strokeWidth: '0' }} id=\"arc-left\"></path>\n                <path d=\"M100.30000000000001,149.7a28.546833473940513,28.546833473940513,0,0,1,-31.10000000000001,31.100000000000023\" style={{ fill: 'none', stroke: 'black', strokeWidth: 0 }} id=\"door-arc-right\"></path>\n                <path d=\"M101.20000000000003,150.00000000000003a29.695768,29.695768,0,0,0,30.79999999999997,31.399999999999977\" style={{ fill: 'none', stroke: 'black', strokeWidth: 0 }} id=\"door-arc-left\"></path>\n                < g>\n                    <text>\n                        {this.props.myTurn && !this.props.isChoosing && !this.props.gameOver && this.props.master.name ?\n                            <Timer x={width * 5 / 12} y={height * 5 / 12} fontSize={height * .2} textAnchor=\"middle\" svg={true} time={60} />\n                            : null}\n                    </text>\n                    <text>\n                        {/* <tspan x={width * .5} y={height * .9} style={{ fill: 'black', fontSize: height * .1 }} textAnchor=\"middle\">\n                            {this.props.currentTurn && this.props.master.name && !this.props.isChoosing ? this.props.myTurn ? `Your turn, ${this.props.user}!` : `Waiting for ${this.props.currentTurn}...` : null}\n                        </tspan> */}\n                    </text>\n                </g>\n\n            </svg>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        currentTurn: state.hangman.turn.name,\n        user: state.room.user.name,\n        master: state.hangman.master,\n        isChoosing: state.hangman.isChoosing,\n        myTurn: state.hangman.myTurn,\n        gameOver: state.hangman.gameOver,\n        skip: state.hangman.skip,\n        incorrect: state.hangman.incorrect,\n    }\n}\nexport default connect(mapStateToProps)(ManSVG);\n","import React, { Component } from 'react';\nimport ManSVG from '../../SVG/ManSVG';\nimport { connect } from 'react-redux';\nimport Loader from '../../SVG/Loader';\nimport { hangmanAnimation as animate } from '../../../animations';\n\n\nclass Waiting extends Component {\n    componentDidMount() {\n        animate.turnOn('.screen')\n        animate.changeScreen('.screen')\n\n\n    }\n    render() {\n        return (\n            <>\n                <div className=\"column is-one-fifth is-full-mobile has-text-centered\">\n                    <ManSVG />\n                </div>\n                <div id=\"waiting-text\" className=\"column is-half is\">\n                    <p className=\"subtitle is-4 has-text-centered has-text-dark\">{this.props.word.length > 2 ? `The word was ${this.props.word.join('')}` : null}</p>\n                    <h1 className=\"anton title is-3 has-text-centered has-text-dark\">\n                        Waiting for {this.props.isChoosing && this.props.numUsers > 1 ? <><span className=\"has-text-primary\">{this.props.master.name}</span><span> to choose a word</span></> : `more players`}\n                    </h1>\n                    <Loader />\n                </div>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isChoosing: state.hangman.isChoosing,\n        master: state.hangman.master,\n        word: state.hangman.word,\n        numUsers: state.room.users.length\n    }\n}\n\nexport default connect(mapStateToProps)(Waiting);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass WordBlank extends Component {\n\n    renderText = () => {\n        let word = this.props.word\n        let increment = (140 / word.length)\n        let arr = [];\n        let x = 0;\n        let y = 30\n\n        for (let i = 0; i < word.length; i++) {\n            arr.push(\n                <g className=\"word-blank\" key={i}>\n                    <text>\n                        <tspan x={x + increment / 2} y={y}\n                            style={{ fontSize: increment > 25 ? 25 : increment, fontFamily: '\"Play\", sans-serif' }}\n                            fill={this.props.gameOver && this.props.isCorrect ? 'green' : this.props.gameOver && !this.props.isCorrect ? 'red' : 'black'}\n                            textAnchor=\"middle\">\n                            {this.props.selectedLetters.includes(word[i]) || this.props.gameOver ? word[i] : '?'}\n                        </tspan>\n                    </text>\n                    <line x1={x + increment * .05} y1={y + 2} x2={x + increment * .95} y2={y + 2} stroke=\"black\" strokeWidth=\"2\" />\n                </g>\n            )\n            x += increment\n        }\n        return arr\n    }\n\n    render() {\n        return (\n            <svg id=\"word-blanks\" width=\"100%\" height=\"50%\" viewBox=\"0 0 140 35\">\n                {this.renderText()}\n            </svg>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        word: state.hangman.word,\n        selectedLetters: state.hangman.selectedLetters,\n        isCorrect: state.hangman.isCorrect,\n        gameOver: state.hangman.gameOver,\n    }\n}\nexport default connect(mapStateToProps, null)(WordBlank);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { letterSelected, letterListener } from '../../../actions/index';\nimport { hangmanAnimation as animate } from '../../../animations';\n\nclass Letters extends Component {\n\n    componentDidMount() {\n        this.props.letterSelected()\n    }\n\n    selectLetter = (letter) => () => {\n        if (!this.props.gameOver && this.props.myTurn) {\n            animate.shrinkToNothing(`#letter-${letter}`).finished.then(() => this.props.letterSelected(letter))\n        }\n    }\n    renderLetterButtons = () => {\n        return this.props.remainingLetters.map((letter) => {\n            return (\n                <p key={letter} id={`letter-${letter}`} onClick={this.selectLetter(letter)} className={`button play letter ${this.props.myTurn ? 'glow' : null}`}>{letter}</p>\n            )\n        })\n    }\n    render() {\n        return (\n            <div style={{ margin: 0, padding: 0 }}>\n                {this.renderLetterButtons()}\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        remainingLetters: state.hangman.remainingLetters,\n        gameOver: state.hangman.gameOver,\n        myTurn: state.hangman.myTurn\n\n    }\n}\n\nexport default connect(mapStateToProps, { letterSelected, letterListener })(Letters);\n","import React, { Component } from 'react';\nimport ManSVG from '../../SVG/ManSVG';\nimport WordBlank from './WordBlank';\nimport Letters from './Letters';\nimport { connect } from 'react-redux';\nimport { nextTurnListener } from '../../../actions';\nimport { hangmanAnimation as animate } from '../../../animations';\nimport Loader from '../../SVG/Loader';\n\nclass Hangman extends Component {\n    componentDidMount() {\n        this.props.nextTurnListener()\n        animate.changeScreen('.screen')\n        if (document.getElementById('hint')) {\n            console.log(this.props.hint.length)\n        }\n    }\n    render() {\n        return (\n            <>\n                <div id=\"svg-container\" className=\"column is-one-fifth is-full-mobile has-text-centered\">\n                    <ManSVG />\n                    <p className=\"is-size-6\">\n                        {this.props.currentTurn && this.props.master.name && !this.props.isChoosing ? this.props.myTurn ? <span>Your turn, {this.props.user}!</span> : <span>Waiting for {this.props.currentTurn}<Loader scale={.1} /></span> : null}\n                    </p>\n                </div>\n                <div className=\"column is-half has-text-centered is-two-thirds-tablet is-full-mobile\">\n                    <WordBlank />\n                    {this.props.gameOver ? <Loader scale={.25} /> : <p id=\"hint\" className=\"subtitle has-text-dark has-text-centered\">{this.props.hint}</p>}\n                    {this.props.hint && !this.props.gameOver && this.props.hint.length > 90 ? <span className=\"icon\"><i class=\"fas fa-sort-down\"></i></span> : null}\n                </div>\n                <div id=\"letter-buttons\" className=\"column is-one-quarter is-half-tablet has-text-centered\">\n                    <Letters />\n                </div>\n            </>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return ({\n        hint: state.hangman.hint,\n        gameOver: state.hangman.gameOver,\n        master: state.hangman.master,\n        isChoosing: state.hangman.isChoosing,\n        currentTurn: state.hangman.turn.name,\n        myTurn: state.hangman.myTurn,\n        user: state.room.user.name\n    })\n}\nexport default connect(mapStateToProps, { nextTurnListener })(Hangman);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { newWord, wordInfoListener } from '../../../actions'\nimport Timer from '../../SVG/Timer';\nimport { hangmanAnimation as animate } from '../../../animations';\nimport Loader from '../../SVG/Loader';\nimport ErrorMessage from '../../ErrorMessage';\nclass GameInit extends Component {\n    componentDidMount() {\n        animate.changeScreen('.screen')\n        this.props.wordInfoListener()\n    }\n    getHeading = () => {\n        if (this.props.word.length > 2) {\n            return (\n                <>\n                    <h1 className=\"title is-4 has-text-dark\">Game Over!</h1>\n                    <p className=\"has-text-dark\">The word was {this.props.word}.</p>\n\n                </>\n            )\n        }\n    }\n\n    onSubmit = (formValues) => {\n        this.props.newWord(formValues)\n    }\n    renderInput = ({ input, autoFocus, label, meta }) => {\n        const labelClass = meta.touched && meta.error ? 'label has-background-danger' : 'label has-background-dark'\n        return (\n            <div className=\"field\">\n                <label className={labelClass}>{meta.touched && meta.error ? meta.error : label}</label>\n                <div className=\"control\">\n                    <input className=\"input is-dark\" {...input} type=\"text\" autoFocus={autoFocus} autoComplete=\"off\" />\n                </div>\n\n            </div>\n        )\n    }\n    render() {\n        return (\n            <>\n                <div id=\"word-form-header\" className=\"column is-one-third\">\n                    <div className=\"has-text-centered\">\n                        {this.getHeading()}\n                        <p className=\"subtitle is-4 has-text-dark\">Pick a word, <span className=\"has-text-primary\">{this.props.master.name}</span>.</p>\n                        {this.props.Error.exists ? <ErrorMessage /> : this.props.loading ? <Loader scale={.15} /> : <Timer time={this.props.hasFreeDict ? 120 : 60} masterTimer={true} />}\n                        <p className=\"has-text-danger\">{this.props.info}</p>\n                    </div>\n                </div>\n\n                <div id=\"word-form\" className=\"column is-two-thirds has-text-centered play\">\n                    <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"form has-text-centered\">\n                        <Field name=\"word\" component={this.renderInput} autoFocus={true} label=\"Choose a word\" />\n                        {this.props.hasFreeDict ? <Field name=\"hint\" component={this.renderInput} autoFocus={false} label=\"Give them a hint!\" /> : null}\n\n                        <div className=\"control has-text-centered\">\n                            <button className=\"button is-dark is-small\"><span className=\"icon\"><i class=\"fas fa-play-circle\"></i></span></button>\n                        </div>\n                    </form>\n                </div>\n            </>\n        );\n    }\n}\nconst validate = ({ word, hint }) => {\n\n    const errors = {}\n    let regex = /[^a-z]/gi\n    if (!word) {\n        errors.word = 'You must enter a word'\n    }\n    if (word && word.length < 3) {\n        errors.word = 'Must be at least 3 letters'\n    }\n    if (word && regex.test(word)) {\n        errors.word = 'Must only contain letters'\n    }\n    if (!hint) {\n        errors.hint = 'You must enter a hint'\n    }\n    return errors\n}\nconst GameInitForm = reduxForm({\n    form: 'GameInit',\n    validate\n})(GameInit)\nconst mapStateToProps = (state) => {\n    return {\n        word: state.hangman.word.join(''),\n        gameOver: state.hangman.gameOver,\n        master: state.hangman.master,\n        user: state.room.user,\n        hasFreeDict: state.room.dictionary === 'Free',\n        loading: state.loading,\n        Error: state.error,\n        info: state.hangman.info\n    }\n}\nexport default connect(mapStateToProps, { newWord, wordInfoListener })(GameInitForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { letterListener } from '../../../actions';\nimport Waiting from './Waiting';\nimport Hangman from './Hangman';\nimport GameInit from './GameInit';\nimport { newMasterListener } from '../../../actions/index';\n\n\nclass Screen extends Component {\n    componentDidMount() {\n        this.props.letterListener()\n        this.props.newMasterListener()\n    }\n    handleScreenClick() {\n        document.querySelector('.fa-comment').classList.remove('is-active')\n        document.querySelector('.messages-container').classList.remove('is-active')\n        document.querySelector('.navbar-burger').classList.remove('is-active')\n        document.querySelector('#user-list').classList.remove('is-active')\n    }\n    renderScreen = () => {\n        if (this.props.numUsers < 2) {\n            return <Waiting />\n        } else if (this.props.isChoosing) {\n            if (this.props.master.name === this.props.user.name) {\n                return <GameInit />\n            }\n            return <Waiting />\n        }\n        return <Hangman />\n    }\n    render() {\n        return (\n            <div id=\"hangman\" className=\"column is-9\">\n                <div className={`box screen has-background-light`} onClick={this.handleScreenClick}>\n                    <div className=\"columns is-centered has-text-dark has-text-centered\">\n\n                        {this.renderScreen()}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        numUsers: state.room.users.length,\n        isChoosing: state.hangman.isChoosing,\n        master: state.hangman.master,\n        user: state.room.user,\n        gameOver: state.hangman.gameOver,\n    }\n}\n\nexport default connect(mapStateToProps, { letterListener, newMasterListener })(Screen);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Chat from './Chat/Chat';\nimport UserList from './Chat/UserList';\nimport history from '../../history';\nimport Screen from './Hangman/Screen';\nimport { newMasterListener, wordSetListener } from '../../actions/index';\nimport { hangmanAnimation as animate } from '../../animations';\nconst toggleMenu = () => {\n    document.querySelector('.navbar-burger').classList.toggle('is-active')\n    document.querySelector('#user-list').classList.toggle('is-active')\n    document.querySelector('.fa-comment').classList.remove('is-active')\n    document.querySelector('.messages-container').classList.remove('is-active')\n}\nclass ChatRoom extends Component {\n    componentDidMount() {\n        document.querySelector('title').textContent = 'Play | Hangman'\n        document.getElementById('css-load').setAttribute('href', process.env.PUBLIC_URL + '/chatStyle.css')\n        if (!this.props.room) {\n            return history.push('/Hangman')\n        }\n        this.props.newMasterListener()\n        this.props.wordSetListener()\n        animate.turnOn('.screen')\n        animate.flicker('.screen')\n    }\n    render() {\n        return (\n            <div className=\"columns is-multiline\">\n                <Screen />\n                {this.props.connection ? '' : 'No Room'}\n                <UserList toggleMenu={toggleMenu} />\n                <Chat toggleMenu={toggleMenu} />\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return ({\n        connection: state.connection,\n        room: state.room.roomName\n    })\n}\n\n\n\nexport default connect(mapStateToProps, { newMasterListener, wordSetListener })(ChatRoom);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createConnection, bootServer, serverError } from '../actions/index';\nimport { Router, Route } from 'react-router-dom';\nimport history from '../history';\nimport JoinPage from './Join/Page';\nimport GameRoom from './Room/GameRoom';\n\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.bootServer()\n        this.props.createConnection()\n\n    }\n    render() {\n        return (\n            <>\n                <Router history={history}>\n                    <>\n                        <Route path=\"/Hangman\" exact component={JoinPage} />\n                        <Route path=\"/Hangman/:roomname\" exact component={GameRoom} />\n                    </>\n                </Router>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        connection: state.connection\n    }\n}\n\nexport default connect(mapStateToProps, { createConnection, bootServer, serverError })(App);\n","export default {\n    connected: false,\n    chat: {\n        messages: []\n    },\n    room: {\n        roomName: '',\n        user: {},\n        users: [],\n        dictionary: false,\n    },\n    error: {\n        exists: false,\n        message: ''\n    },\n    loading: false,\n    meta: [],\n    hangman: {\n        master: {},\n        isChoosing: false,\n        word: [],\n        info: false,\n        hint: '',\n        myTurn: false,\n        remainingLetters: [],\n        selectedLetters: [],\n        numGames: 0,\n        turn: {\n            name: ''\n        },\n        isCorrect: false,\n        incorrect: 0,\n        gameOver: false\n    }\n}","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport connectionReducer from './connectionReducer';\nimport chatReducer from './chatReducer';\nimport roomReducer from './roomReducer';\nimport errorReducer from './errorReducer';\nimport loadingReducer from './loadingReducer';\nimport metaReducer from './metaReducer';\nimport hangmanReducer from './hangmanReducers';\n\nexport default combineReducers({\n    connection: connectionReducer,\n    chat: chatReducer,\n    room: roomReducer,\n    error: errorReducer,\n    loading: loadingReducer,\n    meta: metaReducer,\n    form: formReducer.plugin({\n        MessageForm: (state, action) => {\n            switch (action.type) {\n                case '@@redux-form/SET_SUBMIT_SUCCEEDED':\n                    return undefined;\n                default:\n                    return state\n            }\n        }\n    }),\n    hangman: hangmanReducer\n})\n","import { CONNECT, DISCONNECT } from '../actions/types';\nimport defaultState from './defaultState';\n\nexport default (state = defaultState.connected, action) => {\n    switch (action.type) {\n        case CONNECT:\n            return action.connected;\n        case DISCONNECT:\n            return false;\n        default:\n            return state\n    }\n}","import defaultState from './defaultState';\nimport { NEW_MESSAGE } from '../actions/types';\n\nexport default (state = defaultState.chat, action) => {\n    switch (action.type) {\n        case NEW_MESSAGE:\n            return { ...state, messages: action.messageList };\n        default:\n            return state\n    }\n}","import defaultState from './defaultState';\nimport { NEW_USER, UPDATE_LIST, ASK_FOR_DICT } from '../actions/types';\n\nexport default (state = defaultState.room, action) => {\n    switch (action.type) {\n        case ASK_FOR_DICT:\n            return { ...state, user: { ...state.user, name: action.name }, roomName: action.room, dictionary: action.dictionary }\n        case NEW_USER:\n            return { ...state, user: action.user, roomName: action.room, dictionary: action.dictionary };\n        case UPDATE_LIST:\n            return { ...state, users: action.payload };\n        default:\n            return state\n    }\n}","import defaultState from './defaultState';\nimport { ERROR, } from '../actions/types';\n\nexport default (state = defaultState.error, action) => {\n    switch (action.type) {\n        case ERROR:\n            return action.error;\n        default:\n            return state\n    }\n}","import defaultState from './defaultState';\nimport { LOADING, CANCEL_LOAD } from '../actions/types';\n\nexport default (state = defaultState.loading, action) => {\n    switch (action.type) {\n        case LOADING:\n            return true;\n        case CANCEL_LOAD:\n            return false;\n        default:\n            return state\n    }\n}","import defaultState from './defaultState';\nimport { META_DATA } from '../actions/types';\n\nexport default (state = defaultState.meta, action) => {\n    switch (action.type) {\n        case META_DATA:\n            return action.data;\n        default:\n            return state\n    }\n}","import defaultState from './defaultState';\nimport { LETTER_SELECTED, NEW_MASTER, NEW_WORD, MY_TURN, WORD_INFO } from '../actions/types';\nexport default (state = defaultState.hangman, action) => {\n    switch (action.type) {\n        case NEW_MASTER:\n            return {\n                ...state,\n                ...action.game\n            };\n        case NEW_WORD:\n            return {\n                ...state,\n                ...action.game, info: false\n            }\n        case WORD_INFO:\n            return {\n                ...state,\n                info: action.info\n            }\n        case MY_TURN:\n            return {\n                ...state,\n                myTurn: action.myTurn,\n                ...action.game\n            }\n        case LETTER_SELECTED:\n            return {\n                ...state,\n                ...action.game\n            };\n        default:\n            return state\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport App from './components/App';\nimport reducers from './reducers';\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(reducers,\n    composeEnhancers(applyMiddleware(thunk))\n)\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.querySelector('#root'))"],"sourceRoot":""}