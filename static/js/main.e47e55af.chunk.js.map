{"version":3,"sources":["actions/types.js","history.js","actions/index.js","components/Join/JoinForm.jsx","animations/index.js","components/ErrorMessage.jsx","components/Join/RoomsMeta.jsx","components/SVG/Title.jsx","components/Join/DictionaryForm.jsx","components/SVG/Loader.jsx","components/Join/Page.jsx","components/Room/Chat/MessageForm.jsx","components/Room/Hangman/Score.jsx","components/Room/Chat/Chat.jsx","components/Room/Chat/UserList.jsx","components/SVG/Timer.jsx","components/SVG/XSVG.jsx","components/SVG/ManSVG.jsx","components/Room/Hangman/Waiting.jsx","components/Room/Hangman/WordBlank.jsx","components/Room/Hangman/Letters.jsx","components/Room/Hangman/Hangman.jsx","components/Room/Hangman/GameInit.jsx","components/Room/Hangman/Screen.jsx","components/Room/GameRoom.jsx","components/App.jsx","reducers/defaultState.js","reducers/index.js","reducers/connectionReducer.js","reducers/chatReducer.js","reducers/roomReducer.js","reducers/errorReducer.js","reducers/loadingReducer.js","reducers/metaReducer.js","reducers/hangmanReducers.js","index.jsx"],"names":["ERROR","createHistory","socket","io","letterListener","dispatch","getState","on","game","type","emit","room","roomName","newMasterListener","JoinForm","renderInput","_ref","input","autoFocus","label","meta","inputClass","error","touched","labelClass","react_default","a","createElement","className","htmlFor","Object","assign","autoComplete","onSubmit","_ref2","name","toUpperCase","trim","_this","props","initiateJoin","id","this","handleSubmit","redux_form_es","component","src","process","alt","Component","formWrapped","reduxForm","form","validate","_ref3","regex","errors","length","test","toLowerCase","enableReinitialize","connect","err","exists","message","homepageAnimation","noise","elem","i","repeatNoise","anime","targets","backgroundPositionX","concat","backgroundPositionY","loop","duration","complete","glitch","repeatGlitch","timeline","add","translateX","slideIn","translateY","value","elasticity","slideOut","pop","scale","autoplay","easing","hangmanAnimation","turnOn","scaleY","changeScreen","opacity","flicker","opacityValues","Array","fill","map","e","ellipsis","elems","delay","el","slideInAndFade","visibility","blink","shrinkToNothing","chatAnimation","fromDirection","svgAnimation","fall","path","arguments","undefined","track","wave","direction","obj","y2","x2","drawStroke","selector","x1","y1","draw","strokeDashoffset","setDashoffset","eyeBlink","ry","eyeMovement","cy","ErrorMessage","cancelError","animate","finished","then","onClick","aria-label","state","RoomsMeta","renderRoomList","dictTextColors","Urban","Oxford","Free","key","dictionary","numUsers","Title","color1","colors","primary","color2","secondary","color3","tertiary","viewBox","componentId","x","y","style","fontFamily","fontSize","textAnchor","text","DictionaryForm","Fragment","submitDict","ids","forEach","ID","reversed","play","document","getElementById","classList","completed","remove","setAttribute","scrollIntoView","oxford","urban","free","user","Ellipsis","childNodes","height","width","cx","r","color","JoinPage","selectedRoom","history","push","querySelector","textContent","joinSuccess","errorListener","askForDictListener","getUserMetaData","_this2","setState","SVG_Title","loading","Loader","components_ErrorMessage","Join_RoomsMeta","onRoomClick","bind","Join_DictionaryForm","Join_JoinForm","initialValues","_ref4","slicedToArray","_ref4$","score","from","data","MessageForm","createMessage","action","Score","scoreVal","timeout","getUserScore","scoreIncrease","setTimeout","restart","users","filter","myTurn","hangman","Chat","toggleChat","toggle","newMessageListener","prevProps","messages","querySelectorAll","chat","messagesList","contains","createdAt","fromMe","fromLabel","Hangman_Score","toggleMenu","aria-expanded","aria-hidden","renderMessages","Chat_MessageForm","messageList","objectSpread","moment","utc","local","format","UserList","renderUsers","highestScore","reduce","b","sort","master","updateUserListener","href","rel","target","renderHeader","_ref5","userList","payload","Timer","time","timer","getTimer","incorrect","incorrectIncrease","pause","setInterval","clearInterval","svg","skipMe","masterTimer","skipMaster","XSVG","componentDidUpdate","stroke","renderXs","strokeWidth","ManSVG","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","rightWave","leftWave","rightWaveReverse","leftWaveReverse","Promise","all","isChoosing","gameOver","rx","SVG_XSVG","d","strokeDasharray","SVG_Timer","currentTurn","turn","skip","Waiting","clientWidth","SVG_ManSVG","word","join","WordBlank","renderText","increment","arr","isCorrect","selectedLetters","includes","Letters","selectLetter","letter","letterSelected","renderLetterButtons","remainingLetters","margin","padding","Hangman","mobileDisplayed","changeDisplay","nextTurnListener","bodyHeight","clientHeight","Hangman_WordBlank","hint","Hangman_Letters","myName","GameInit","getHeading","formValues","newWord","wordInfoListener","Error","hasFreeDict","info","GameInitForm","_ref6","Screen","renderScreen","Hangman_Waiting","Hangman_GameInit","Room_Hangman_Hangman","handleScreenClick","ChatRoom","display","wordSetListener","Hangman_Screen","connection","Chat_UserList","Room_Chat_Chat","App","bootServer","createConnection","Router","Route","exact","GameRoom","connected","request","XMLHttpRequest","open","onload","status","onerror","send","serverError","defaultState","numGames","combineReducers","formReducer","plugin","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","components_App"],"mappings":"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","file":"static/js/main.e47e55af.chunk.js","sourcesContent":["export const CONNECT = 'CONNECT'\nexport const NEW_MESSAGE = 'NEW_MESSAGE'\nexport const NEW_USER = 'NEW_USER'\nexport const JOIN_ROOM = 'JOIN_ROOM'\nexport const ASK_FOR_DICT = 'ASK_FOR_DICT'\nexport const ERROR = 'ERROR'\nexport const LOADING = 'LOADING'\nexport const UPDATE_LIST = 'UPDATE_LIST'\nexport const DISCONNECT = 'DISCONNECT'\nexport const META_DATA = 'META_DATA'\nexport const CANCEL_LOAD = 'CANCEL_LOAD'\n\nexport const NEW_MASTER = 'NEW_MASTER'\nexport const LETTER_SELECTED = 'LETTER_SELECTED'\nexport const NEW_WORD = 'NEW_WORD'\nexport const WORD_INFO = 'WORD_INFO'\nexport const MY_TURN = 'MY_TURN'\nexport const NEW_GAME = 'NEW_GAME'\nexport const SKIP = 'SKIP'","import createHistory from 'history/createBrowserHistory';\nexport default createHistory()","import io from 'socket.io-client';\nimport moment from 'moment';\nimport {\n    CONNECT,\n    DISCONNECT,\n    NEW_MESSAGE,\n    ERROR,\n    LOADING,\n    CANCEL_LOAD,\n    UPDATE_LIST,\n    ASK_FOR_DICT,\n    NEW_USER,\n    META_DATA,\n    LETTER_SELECTED,\n    NEW_MASTER,\n    NEW_WORD,\n    WORD_INFO,\n    MY_TURN,\n\n} from './types';\nimport history from '../history';\n;\n// Types not declared in 'types.js' are dummies for uniformity with redux\n// const socket = io('http://localhost:3001/')\nconst socket = io('https://hangman-oj.herokuapp.com/')\n\nexport const bootServer = () => dispatch => {\n    dispatch({\n        type: LOADING\n    })\n\n    var request = new XMLHttpRequest();\n    // request.open('GET', 'http://localhost:3001/', true);\n    request.open('GET', 'https://hangman-oj.herokuapp.com/', true);\n\n    request.onload = function () {\n        if (request.status >= 200 && request.status < 400) {\n\n        } else {\n            dispatch({\n                type: ERROR,\n                error: {\n                    exists: true,\n                    message: 'Server error'\n                }\n            })\n            dispatch({\n                type: CANCEL_LOAD\n            })\n        }\n    };\n    request.onerror = function () {\n        dispatch({\n            type: ERROR,\n            error: {\n                exists: true,\n                message: 'Server error'\n            }\n        })\n        dispatch({\n            type: CANCEL_LOAD\n        })\n    };\n\n    request.send();\n}\nexport const serverError = () => dispatch => {\n    dispatch({\n        type: ERROR,\n        error: {\n            exists: true,\n            message: 'Server error'\n        }\n    })\n}\nexport const createConnection = () => dispatch => {\n    socket.on('connect', () => {\n        dispatch({\n            type: CONNECT,\n            connected: socket.connected\n        })\n        dispatch({\n            type: CANCEL_LOAD\n        })\n    })\n}\nexport const createMessage = (text) => (dispatch, getState) => {\n    socket.emit('createMessage', {\n        from: getState().room.user.name,\n        room: getState().room.roomName,\n        text\n    })\n    dispatch({\n        type: 'CREATE_MESSAGE'\n    })\n}\nexport const newMessageListener = () => dispatch => {\n    socket.on('newMessage', (messageList) => {\n        dispatch({\n            type: NEW_MESSAGE,\n            messageList: messageList.map((message) => {\n                return { ...message, createdAt: moment.utc(message.createdAt).local().format('h:mm a') }\n            })\n        })\n    })\n}\nexport const initiateJoin = ({ name, room }) => dispatch => {\n    socket.emit('join', { name, room }, (err) => {\n        dispatch({\n            type: ERROR,\n            error: {\n                exists: true,\n                message: err.message\n            }\n        })\n        dispatch({\n            type: CANCEL_LOAD\n        })\n    })\n    dispatch({\n        type: LOADING\n    })\n}\nexport const askForDictListener = () => dispatch => {\n    socket.on('askForDict', ({ name, room }) => {\n        dispatch({\n            type: ASK_FOR_DICT,\n            room, name, dictionary: 'None'\n        })\n        dispatch({\n            type: CANCEL_LOAD\n        })\n    })\n}\nexport const submitDict = (dictionary) => (dispatch, getState) => {\n    socket.emit('join', {\n        name: getState().room.user.name,\n        room: getState().room.roomName,\n        dictionary\n    })\n    dispatch({\n        type: LOADING\n    })\n}\nexport const joinSuccess = () => (dispatch, getState) => {\n    socket.on('joinSuccess', ([{ name, room, id, score }, dictionary]) => {\n\n        dispatch({\n            type: CANCEL_LOAD\n        })\n        dispatch({\n            type: NEW_USER,\n            user: {\n                name, id, score\n            },\n            room,\n            dictionary\n        })\n        history.push(`/Hangman/${room}`)\n        socket.emit('createMessage', {\n            from: 'Admin',\n            text: `Welcome to ${room}, ${name}!`,\n            room: getState().room.roomName\n        })\n        dispatch({\n            type: 'CREATE_MESSAGE'\n        })\n        dispatch({\n            type: ERROR,\n            error: {\n                exists: false,\n                message: ''\n            }\n        })\n    })\n\n}\nexport const updateUserListener = () => dispatch => {\n    socket.on('updateUserList', ({ userList }) => {\n        dispatch({\n            type: UPDATE_LIST,\n            payload: userList\n        })\n    })\n}\nexport const errorListener = () => dispatch => {\n    socket.on('errorMessage', (message) => {\n        dispatch({\n            type: ERROR,\n            error: {\n                exists: true,\n                message\n            }\n        })\n        dispatch({\n            type: CANCEL_LOAD\n        })\n    })\n}\nexport const cancelError = () => dispatch => {\n    dispatch({\n        type: ERROR,\n        error: {\n            exists: false,\n            message: ''\n        }\n    })\n}\n\nexport const disconnectListener = () => dispatch => {\n    socket.on('disconnect', () => {\n        dispatch({\n            type: DISCONNECT\n        })\n    })\n}\nexport const getUserMetaData = () => dispatch => {\n    socket.on('updateMetaData', (data) => {\n        dispatch({\n            type: META_DATA,\n            data\n        })\n    })\n}\nexport const letterSelected = (letter) => (dispatch, getState) => {\n\n    if (getState().hangman.myTurn) {\n        socket.emit('selectingLetter', { letter, room: getState().room.roomName })\n        dispatch({\n            type: 'SELECTING_LETTER'\n        })\n    }\n\n}\nexport const letterListener = () => (dispatch, getState) => {\n    socket.on('letterSelected', (game) => {\n        dispatch({\n            type: LETTER_SELECTED,\n            game\n        })\n        socket.emit('isItMyTurn', getState().room.roomName)\n    })\n}\nexport const newMasterListener = () => dispatch => {\n    socket.on('newMaster', (game) => {\n        dispatch({\n            type: NEW_MASTER,\n            game\n        })\n    })\n}\nexport const newWord = ({ word, hint }) => (dispatch, getState) => {\n    socket.emit('newWord', { word, hint, room: getState().room.roomName })\n    dispatch({\n        type: 'WORD_CHOSEN'\n    })\n    dispatch({\n        type: LOADING\n    })\n}\nexport const wordSetListener = () => (dispatch, getState) => {\n    socket.on('wordSet', (game) => {\n        dispatch({\n            type: NEW_WORD,\n            game\n        })\n        dispatch({\n            type: CANCEL_LOAD\n        })\n        socket.emit('selectingLetter', { letter: null, room: getState().room.roomName })\n    })\n}\nexport const wordInfoListener = () => (dispatch) => {\n    socket.on('wordInfo', (info) => {\n        dispatch({\n            type: CANCEL_LOAD\n        })\n        dispatch({\n            type: WORD_INFO, info\n        })\n    })\n}\nexport const nextTurnListener = () => (dispatch, getState) => {\n    socket.on('nextTurn', (game) => {\n        const myName = getState().room.user.name\n\n        if (myName && game.turn.name && game.turn.name === myName) {\n            dispatch({\n                type: MY_TURN,\n                myTurn: true,\n                game\n            })\n        } else {\n            dispatch({\n                type: MY_TURN,\n                myTurn: false,\n                game\n            })\n        }\n    })\n}\nexport const skipMe = () => (dispatch, getState) => {\n    socket.emit('skipMyTurn', getState().room.roomName)\n    dispatch({\n        type: 'SKIP'\n    })\n}\nexport const skipMaster = () => (dispatch, getState) => {\n    socket.emit('skipMaster', getState().room.roomName)\n    dispatch({\n        type: 'SKIP_MASTER'\n    })\n}","import React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux'\nimport { initiateJoin } from '../../actions';\nclass JoinForm extends Component {\n\n    renderInput = ({ input, autoFocus, label, meta }) => {\n        const inputClass = meta.error && meta.touched ? 'input is-danger' : 'input is-dark'\n        const labelClass = meta.error && meta.touched ? 'label has-text-light has-background-danger has-text-centered' : 'label has-text-light has-background-dark has-text-centered'\n        return (\n            <div className=\"field\">\n                <label htmlFor=\"\"\n                    className={labelClass}>\n                    {meta.touched && meta.error ? meta.error : label}:\n                 </label>\n                <div className=\"control\">\n\n                    <input className={inputClass} type=\"text\" {...input} autoFocus={autoFocus} autoComplete=\"off\" />\n                </div>\n            </div>\n        )\n    }\n    onSubmit = ({ name, room }) => {\n        room = room.toUpperCase().trim()\n        name = name.trim()\n        this.props.initiateJoin({ name, room })\n    }\n    render() {\n        return (\n            <form id=\"join-form\" onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"form has-text-centered play\">\n                <div className=\"field\">\n                    <div className=\"control\">\n                        <Field name=\"name\" component={this.renderInput} autoFocus={true} label=\"Enter a username\" />\n                    </div>\n                </div>\n                <div className=\"field\">\n                    <div className=\"control\">\n                        <Field name=\"room\" component={this.renderInput} autoFocus={false} label=\"Enter a room\" />\n                    </div>\n                </div>\n                <div className=\"control has-text-centered\">\n                    <button className=\"button is-dark is-large\"><span className=\"icon\"><img src={process.env.PUBLIC_URL + '/images/hangmanLogo.svg'} alt=\"\" /></span></button>\n                </div>\n            </form>\n        );\n    }\n}\n\nconst validate = ({ name, room }) => {\n    const regex = /\\W+/g\n    const errors = {}\n\n    if (name) {\n        name = name.trim()\n    }\n    if (room) {\n        room = room.trim()\n    }\n\n    if (!name || name.length < 1) {\n        errors.name = \"Name Required\"\n    }\n    if (!room || room.length < 1) {\n        errors.room = \"Room Required\"\n    }\n\n    if (name && regex.test(name)) {\n        errors.name = \"Invalid Name\";\n    }\n    if (name && name.length > 10) {\n        errors.name = \"Name too Long\"\n    }\n    if (name && name.toLowerCase() === 'admin') {\n        errors.name = \"You cannot have that name\"\n    }\n    if (!room) {\n        errors.room = \"Room Required\"\n    }\n    if (room && regex.test(room)) {\n        errors.room = \"Invalid room name\"\n    }\n    if (room && room.length > 12) {\n        errors.room = \"Room name too long\"\n    }\n\n\n    return errors\n}\n\n\nconst formWrapped = reduxForm({\n    form: \"JoinForm\",\n    validate,\n    enableReinitialize: true\n})(JoinForm);\n\nexport default connect(null, { initiateJoin })(formWrapped)\n","import anime from 'animejs';\n\n//home page title\n//screen on\n//screen flicker\n//hangman svg\nexport const homepageAnimation = {\n    noise: (elem) => {\n        let i = 0\n        function repeatNoise() {\n            return anime({\n                targets: elem,\n                backgroundPositionX: () => `${i === 0 || i === 3 ? 0 : 100}px`,\n                backgroundPositionY: () => `${i === 2 || i === 3 ? 100 : 0}px`,\n                loop: 1,\n                duration: 10,\n                complete: () => {\n                    i++;\n                    if (i > 3) {\n                        i = 0\n                    }\n                    repeatNoise()\n                }\n            })\n        }\n        repeatNoise()\n    },\n    glitch: (elem) => {\n        let i = 1\n        function repeatGlitch() {\n            return anime.timeline().add({\n                targets: `${elem}-secondary`,\n                translateX: .5 * i,\n\n                duration: 250,\n            }).add({\n                targets: `${elem}-tertiary`,\n                translateX: -.5 * i,\n\n                duration: 250,\n                complete: () => {\n                    i *= -1;\n                    repeatGlitch()\n                }\n            })\n        }\n        repeatGlitch()\n    },\n    slideIn: (elem) => {\n        return anime({\n            targets: elem,\n            translateY: [{ value: ['+=200', 0], duration: 1000, elasticity: 500 }],\n        })\n    },\n    slideOut: (elem) => {\n        return anime({\n            targets: elem,\n            translateY: [{ value: [0, 1000], duration: 1000, elasticity: 500 }],\n        })\n    },\n    pop: (elem) => {\n        return anime({\n            targets: elem,\n            scale: 1.1,\n            duration: 250,\n            autoplay: false,\n            easing: 'easeInOutBack'\n        })\n    }\n\n}\nexport const hangmanAnimation = {\n    turnOn: (elem) => {\n        return anime({\n            targets: elem,\n            scaleY: [{ value: ['*=.1', 1], duration: 1500, elasticity: 0 }],\n            // opacity: [{ value: ['*=.1', 1], delay: 500, duration: 1500, elasticity: 1000 }]\n        })\n    },\n    changeScreen: (elem) => {\n        return anime({\n            targets: elem,\n            opacity: [{ value: ['*=.75', 1], duration: 2000, elasticity: 500 }]\n        })\n    },\n    flicker: (elem) => {\n        const opacityValues = Array(20).fill('x').map((e, i) => i % 2 === 0 ? .975 : 1)\n        return anime({\n            targets: elem,\n            opacity: opacityValues,\n            duration: 100,\n            loop: true\n        })\n    },\n    ellipsis: (elems) => {\n        return anime({\n            targets: elems,\n            translateY: [\n                { value: -40, duration: 1000, easing: 'easeOutCubic' },\n                { value: 0, duration: 1000, easing: 'easeInCubic' }\n            ],\n            loop: true,\n\n            delay: (el, i) => {\n                return i * 666\n            }\n        })\n    },\n    slideInAndFade: (elem) => {\n        return anime({\n            targets: elem,\n            translateY: [{ value: ['+=80', 0], duration: 1000, easing: 'linear' }],\n            opacity: [{ value: ['*=0', 1, 1, 0], duration: 1000, easing: 'linear' }],\n            visibility: { value: 'hidden', delay: 1000, duration: 1 },\n            autoplay: false\n        })\n    },\n    blink: (elem) => {\n        return anime({\n            targets: elem,\n            opacity: [\n                { value: 1, duration: 500, easing: 'easeInQuad' },\n                { value: 0, duration: 500, easing: 'easeInQuad' }\n            ],\n            loop: true,\n            duration: 1000,\n            easing: 'linear',\n            autoplay: false\n        })\n    },\n    shrinkToNothing: (elem) => {\n        return anime({\n            targets: elem,\n            scale: 0,\n            duration: 500,\n            easing: 'easeInOutBack'\n        })\n    },\n\n\n}\nexport const chatAnimation = {\n    slideIn: (elem, fromDirection) => {\n        return anime({\n            targets: elem,\n            translateX: [{ value: [fromDirection === 'left' ? -100 : 100, 0], duration: 1000, elasticity: 500 }]\n        })\n    },\n    inflate: (elem) => {\n        return anime({\n            targets: elem,\n            scale: [\n                { value: 2, duration: 333, elasticity: 1000, easing: 'easeOutCubic' },\n                { value: 1, duration: 333, elasticity: 1000, easing: 'easeInCubic' }\n            ]\n        })\n    }\n}\n\nexport const svgAnimation = {\n    fall: (elem, path, delay = 0) => {\n        const track = anime.path(path);\n        try {\n            return anime({\n                targets: elem,\n                translateY: track('y'),\n                duration: 500,\n                easing: 'easeInQuad',\n                delay\n            })\n        } catch (e) {\n\n        }\n    },\n    wave: (elem, path, loop = true, autoplay = true, { direction, delay, duration, easing, elasticity } = {}) => {\n        const track = anime.path(path);\n        const obj = {\n            targets: elem,\n            y2: track('y'),\n            x2: track('x'),\n            duration: duration || 1000,\n            delay: delay !== undefined ? delay : 0,\n            loop,\n            direction: direction || 'normal',\n            autoplay,\n\n        }\n        if (elasticity) {\n            obj.elasticity = elasticity\n        }\n        if (easing) {\n            obj.easing = easing\n        }\n        return anime(obj)\n    },\n    drawStroke: (elem, delay) => {\n        return anime({\n            targets: elem.selector,\n            x2: { value: [elem.x1, elem.x2], duration: 500 },\n            y2: { value: [elem.y1, elem.y2], duration: 500 },\n            delay: delay ? 500 : 0,\n            easing: 'linear',\n            autoplay: true,\n            loop: false\n        })\n    },\n    draw: (elems) => {\n        return anime({\n            targets: elems,\n            opacity: { value: 1, duration: 1000 },\n            strokeDashoffset: [anime.setDashoffset, 0],\n            easing: 'easeInOutSine',\n            duration: 1500,\n            delay: function (el, i) { return i * 250 },\n        })\n    },\n    eyeBlink: (elems) => {\n        return anime({\n            targets: elems,\n            ry: [0, 1.5],\n            easing: 'easeOutQuad',\n            duration: 1000,\n\n        })\n    },\n    eyeMovement: (elems) => {\n        return anime({\n            targets: elems,\n            cy: [31, 37],\n            easing: 'linear',\n            duration: 750,\n        })\n    }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { cancelError } from '../actions';\nimport { homepageAnimation as animate } from '../animations';\n\nclass ErrorMessage extends Component {\n    componentDidMount() {\n        animate.slideIn('#error-message')\n    }\n    cancelError = () => {\n        animate.slideOut('#error-message')\n            .finished.then(() => {\n                this.props.cancelError()\n            })\n    }\n    render() {\n        return (\n\n            <article id=\"error-message\" className={this.props.error.exists ? 'message is-danger' : 'message is-invisible'}>\n                <div className=\"message-header\">\n                    <p>{'Error!'}</p>\n                    <button onClick={this.cancelError} className=\"delete\" aria-label=\"delete\"></button>\n                </div>\n                <div className=\"message-body\">\n                    {this.props.error.message}\n                </div>\n            </article>\n\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        error: state.error\n    }\n}\nexport default connect(mapStateToProps, { cancelError })(ErrorMessage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass RoomsMeta extends Component {\n\n\n    renderRoomList = () => {\n        const dictTextColors = {\n            Urban: 'warning',\n            Oxford: 'info',\n            Free: 'light'\n        }\n        return this.props.meta.map((room) => {\n            return (\n                <li key={room.name}\n                    className=\"list-item play\">\n                    <p>\n                        <strong className={room.name.length > 10 ? 'is-size-7' : null}>{room.name}</strong>\n                        <em className={`has-text-${dictTextColors[room.dictionary]}`}>{room.dictionary}</em>\n                        <span className={`num ${room.numUsers > 4 ? 'has-text-danger anton' : 'anton'}`}>{room.numUsers} <span className=\"icon\"><i className=\"fas fa-users\"></i></span></span>\n                        <span onClick={this.props.onClick(room.name)} className=\"icon has-text-success\"><i className=\"fas fa-sign-in-alt\"></i></span>\n                    </p>\n\n                </li >\n            )\n        })\n    }\n    render() {\n        return (\n\n            <div id=\"rooms-meta\" className=\"card\">\n                <header className=\"card-header\">\n                    <p className=\"card-header-title anton\">\n                        Active Rooms: {this.props.meta.length}\n                    </p>\n\n                </header>\n                <div className=\"card-content\">\n\n                    <ul className=\"list has-background-dark\">\n                        {this.renderRoomList()}\n                    </ul>\n\n                </div>\n\n            </div>\n\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        meta: state.meta\n    }\n}\nexport default connect(mapStateToProps, null)(RoomsMeta);\n","import React, { Component } from 'react';\nimport { homepageAnimation as animate } from '../../animations';\n\nclass Title extends Component {\n\n    componentDidMount() {\n        animate.glitch('#title')\n    }\n    render() {\n        let color1 = this.props.colors.primary,\n            color2 = this.props.colors.secondary,\n            color3 = this.props.colors.tertiary\n        return (\n\n            <svg viewBox=\"0 0 140 35\">\n                <text id={`${this.props.componentId}-tertiary`}>\n                    <tspan x=\"70\" y=\"35\" style={{ fill: color3, fontFamily: '\"Anton\", sans-serif', fontSize: 35 }} textAnchor=\"middle\" >\n                        {this.props.text}\n                    </tspan>\n\n                </text>\n                <text id={`${this.props.componentId}-secondary`}>\n                    <tspan x=\"70\" y=\"35\" style={{ fill: color2, fontFamily: '\"Anton\", sans-serif', fontSize: 35 }} textAnchor=\"middle\" >\n                        {this.props.text}\n                    </tspan>\n\n                </text>\n                <text id={this.props.componentId}>\n                    <tspan x=\"70\" y=\"35\" style={{ fill: color1, fontFamily: '\"Anton\", sans-serif', fontSize: 35 }} textAnchor=\"middle\" >\n                        HANGMAN\n                    </tspan>\n\n                </text>\n\n            </svg>\n\n        );\n    }\n}\n\nexport default Title;\n","import React, { Component } from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { submitDict } from '../../actions';\nimport { homepageAnimation as animate } from '../../animations';\n\n\nclass DictionaryForm extends Component {\n    componentDidMount() {\n        document.getElementById('dict-form').scrollIntoView()\n        this.pop = {\n            oxford: animate.pop('#oxford-label'),\n            urban: animate.pop('#urban-label'),\n            free: animate.pop('#free-label'),\n        }\n        this.ids = ['oxford', 'urban', 'free']\n    }\n    renderInput = ({ input, label, meta, value }) => {\n        const labelClass = 'radio-label has-background-dark label'\n        return (\n            <>\n                <label className={labelClass} >\n                    {label ? <figure className=\"image is-3by1\">\n                        <img id={`${label}-logo`} src={`./images/${label}logo.png`} alt={`${label} Dictionary`} />\n                    </figure> : <div className=\"anton is-size-1\">Free For All</div>}\n\n                </label>\n\n                <div className=\"control\">\n                    <input className={input} type=\"radio\" {...input} value={value} />\n                </div>\n            </>\n        )\n    }\n    onSubmit = ({ dictionary }) => {\n        this.props.submitDict(dictionary)\n    }\n    onClick = (id) => {\n\n        return () => {\n            this.ids.forEach((ID) => {\n                if (ID === id) {\n                    this.pop[ID].reversed = false\n                    this.pop[ID].play()\n                    document.getElementById(`${ID}-label`).classList.add('selected')\n                } else {\n                    this.pop[ID].reversed = true\n                    if (this.pop[ID].completed) {\n                        this.pop[ID].play()\n                    }\n                    document.getElementById(`${ID}-label`).classList.remove('selected')\n                }\n\n            })\n            document.getElementById(id).setAttribute('checked', true)\n        }\n\n    }\n    render() {\n        return (\n            <form id=\"dict-form\" onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"form has-text-centered play\">\n                <div className=\"field\">\n                    <label id=\"oxford-label\" className=\"label dict-label has-background-dark\">\n                        <Field id=\"oxford\" onClick={this.onClick('oxford')} name=\"dictionary\" component=\"input\" type=\"radio\" value=\"Oxford\" />\n                        {' '}\n                        <figure className=\"image is-3by1\">\n                            <img id=\"Oxford-logo\" src={process.env.PUBLIC_URL + \"/images/Oxfordlogo.png\"} alt=\"Oxford Dictionary\" />\n                        </figure>\n                    </label >\n                    <label id=\"urban-label\" className=\"label dict-label has-background-dark\">\n                        <Field id=\"urban\" onClick={this.onClick('urban')} name=\"dictionary\" component=\"input\" type=\"radio\" value=\"Urban\" />\n                        {' '}\n                        <figure className=\"image is-3by1\">\n                            <img id=\"Urban-logo\" src={process.env.PUBLIC_URL + \"/images/Urbanlogo.png\"} alt=\"Urban Dictionary\" />\n                        </figure>\n                    </label>\n                    <label id=\"free-label\" className=\"label dict-label has-background-dark is-size-1 is-size-2-tablet is-size-3-mobile anton\">\n                        <Field id=\"free\" onClick={this.onClick('free')} name=\"dictionary\" component=\"input\" type=\"radio\" value=\"Free\" />\n                        {' '}\n                        <span>Free For All</span>\n                    </label>\n                </div>\n                <div className=\"control has-text-centered\">\n                    <button className=\"button is-dark is-large\"><span className=\"icon\"><img src={process.env.PUBLIC_URL + '/images/hangmanLogo.svg'} alt=\"\" /></span></button>\n                </div>\n            </form>\n        );\n    }\n}\nconst validate = ({ dictionary }) => {\n    const errors = {}\n    if (!dictionary) {\n        errors.dictionary = 'You must choose one'\n    }\n    return errors\n}\nconst formWrapped = reduxForm({\n    form: 'ChooseDict',\n    validate\n})(DictionaryForm);\n\nexport default connect(null, { submitDict })(formWrapped)\n","import React, { Component } from 'react';\nimport { hangmanAnimation as animate } from '../../animations';\n\nclass Ellipsis extends Component {\n    componentDidMount() {\n        animate.ellipsis(document.getElementById('ellipsis').childNodes)\n    }\n    render() {\n        return (\n            <svg height={`${this.props.scale * 100 || 100}%`} width={`${this.props.scale * 100 || 100}%`} id=\"ellipsis\" viewBox=\"0 0 90 65\">\n                <circle cx=\"17\" cy=\"55\" r=\"10\" fill={this.props.color || 'hsl(0, 0%, 21%)'}></circle>\n                <circle cx=\"45\" cy=\"55\" r=\"10\" fill={this.props.color || 'hsl(0, 0%, 21%)'}></circle>\n                <circle cx=\"73\" cy=\"55\" r=\"10\" fill={this.props.color || 'hsl(0, 0%, 21%)'}></circle>\n            </svg>\n        );\n    }\n}\n\nexport default Ellipsis;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport history from '../../history';\nimport JoinForm from './JoinForm';\nimport { joinSuccess, errorListener, getUserMetaData, askForDictListener } from '../../actions';\nimport ErrorMessage from '../ErrorMessage';\nimport RoomsMeta from './RoomsMeta';\nimport { homepageAnimation as animate } from '../../animations';\nimport Title from '../SVG/Title';\nimport DictionaryForm from './DictionaryForm';\nimport Loader from '../SVG/Loader';\n\nclass JoinPage extends Component {\n    state = {\n        selectedRoom: ''\n    }\n    componentDidMount() {\n        if (this.props.room) {\n            return history.push(`/Hangman/${this.props.room}`)\n        }\n        document.querySelector('title').textContent = 'Join | Hangman'\n        document.getElementById('css-load').setAttribute('href', process.env.PUBLIC_URL + \"/joinStyle.css\")\n        this.props.joinSuccess()\n        this.props.errorListener()\n        this.props.askForDictListener()\n        this.props.getUserMetaData()\n        animate.noise('.noise')\n    }\n    onRoomClick(room) {\n        return () => {\n            this.setState({\n                selectedRoom: room\n            })\n        }\n\n    }\n\n    render() {\n        return (\n            <div id=\"join-container\" className=\"columns is-centered\">\n                <div className=\"column is-one-third has-text-centered\">\n\n                    {/* <h1 id=\"title\" className=\"title is-1 anton has-text-white glitch\" datatext=\"HANGMAN\">HANGM<i className=\"fas fa-male\"></i>N</h1> */}\n                    <Title componentId=\"title\" text={`HANGMAN`} colors={{ primary: 'white', secondary: '#3D9100', tertiary: '#C26EFF' }} />\n                    {this.props.loading ? <> <span className=\"play\">Requesting Server</span><Loader scale={.15} color='white' /> </> : null}\n                    {this.props.error.exists ? <ErrorMessage /> : <RoomsMeta onClick={this.onRoomClick.bind(this)} />}\n\n                    <div className=\"box noise\">\n                        <div className=\"columns is-centered is-mobile\">\n                            <div className={!this.props.dictionary ? \"column is-four-fifths\" : \"column is-two-thirds\"}>\n                                {/* <DictionaryForm /> */}\n                                {!this.props.dictionary ? <JoinForm initialValues={{ room: this.state.selectedRoom }} /> : <DictionaryForm />}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        error: state.error,\n        loading: state.loading,\n        dictionary: state.room.dictionary,\n        room: state.room.roomName\n    }\n}\nexport default connect(mapStateToProps, { joinSuccess, errorListener, getUserMetaData, askForDictListener })(JoinPage);\n","import React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { createMessage } from '../../../actions';\n\nclass MessageForm extends Component {\n\n\n    onSubmit = ({ text }) => {\n        !text || this.props.createMessage(text)\n    }\n    renderInput = ({ input, id }) => {\n        return <input className=\"input\" id={id} type=\"text\" {...input} autoComplete=\"off\" autoFocus={true} />\n    }\n    render() {\n        return (\n            <form id=\"message-form\" className=\"form box\" action=\"\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                <div id=\"message-send\" className=\"columns is-mobile is-centered is-gapless\">\n                    <div className=\"column is-10\">\n                        <Field name=\"text\" component={this.renderInput} id=\"message-input\" />\n                    </div>\n                    <div className=\"column is-2\">\n                        <button className=\"button is-info\">Send</button>\n                    </div>\n\n                </div>\n            </form>\n\n        );\n    }\n}\n\nconst formWrapped = reduxForm({\n    form: 'MessageForm'\n})(MessageForm)\n\nexport default connect(null, { createMessage })(formWrapped);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { hangmanAnimation as animate } from '../../../animations';\nclass Score extends Component {\n\n    state = {\n        scoreVal: null,\n        timeout: null\n    }\n    componentDidMount() {\n        this.slideInAndFade = animate.slideInAndFade('#score')\n    }\n    getUserScore = () => {\n        if (this.props.user) {\n            return this.props.user.score\n        }\n    }\n    componentDidUpdate({ user }) {\n        if (user) {\n            let scoreIncrease = this.getUserScore() - user.score\n            let scoreVal = scoreIncrease > 0 ? `+${scoreIncrease}` : null\n            if (scoreVal) {\n                this.setState({\n                    scoreVal,\n                    timeout: setTimeout(() => {\n                        this.setState({\n                            scoreVal: null,\n                            timeout: null\n                        })\n                    }, 1000)\n                }, () => {\n                    this.slideInAndFade.restart()\n                })\n            }\n        }\n\n\n    }\n    render() {\n        return (\n            <p id=\"score\" className=\"has-text-success bold anton is-size-2\">{this.state.scoreVal ? <span>{this.state.scoreVal}</span> : null}</p>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.room.users.filter((user) => user.name === state.room.user.name)[0],\n        myTurn: state.hangman.myTurn\n    }\n}\n\nexport default connect(mapStateToProps, null)(Score);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { newMessageListener } from '../../../actions';\nimport MessageForm from './MessageForm';\nimport Score from '../Hangman/Score';\nimport { chatAnimation as animate } from '../../../animations';\nclass Chat extends Component {\n\n\n    componentDidMount() {\n        this.props.newMessageListener()\n    }\n    componentDidUpdate(prevProps) {\n        const messages = document.querySelectorAll('.chat-message')\n\n        if (messages.length > 0) {\n            const last = messages[messages.length - 1]\n            last.scrollIntoView()\n        }\n        if (this.props.chat.messages.length > prevProps.chat.messages.length) {\n            animate.inflate('.new')\n        }\n        for (let i = this.props.chat.messages.length - 1; i > prevProps.chat.messages.length - 1; i--) {\n            animate.slideIn(`#message-${i}`, this.props.chat.messages[i].from === this.props.user.name ? 'right' : 'left')\n        }\n    }\n    renderMessages() {\n        let messagesList = document.querySelector('.messages-container')\n        if (messagesList && !messagesList.classList.contains('is-active')) {\n            document.querySelector('.fa-comment').classList.add('new')\n        }\n        return this.props.chat.messages.map(({ from, text, createdAt }, i) => {\n            const { name } = this.props.user\n            let fromMe = from === name\n            let fromLabel = <strong>{fromMe ? 'me' : from}{from === 'Admin' ? <span className=\"icon\"><i className=\"fas fa-star\"></i></span> : ''}</strong>\n            let className = fromMe ? 'speech-bubble-right' : 'speech-bubble-left'\n\n            return (<li key={i} id={`message-${i}`} className={`list-item chat-message`}>\n                <div className={fromMe ? 'message-sender-right' : 'message-sender-left play'}>\n                    {fromLabel}\n                </div>\n                <div className={className}>\n                    <div className=\"message-text\">\n                        <div className=\"content has-text-light\">{text}</div>\n                    </div>\n                </div>\n                <span className={from === name ? 'is-size-7 timestamp-right' : 'is-size-7 timestamp-left'}>{createdAt}</span>\n\n            </li>\n            )\n        })\n    }\n    toggleChat = () => {\n        document.querySelector('.messages-container').classList.toggle('is-active');\n        document.querySelector('.fa-comment').classList.remove('new')\n        document.querySelector('.navbar-burger').classList.remove('is-active')\n        document.querySelector('#user-list').classList.remove('is-active')\n\n    }\n    render() {\n        return (\n            <div className=\"column is-9 is-full-mobile chat-container\">\n                <Score />\n                <button onClick={this.props.toggleMenu} className=\"navbar-burger is-pulled-left has-text-black\" aria-label=\"menu\" aria-expanded=\"false\">\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                </button>\n                <p onClick={this.toggleChat} id=\"chat-button\"><span className=\"icon has-text-dark\"><i className=\"fas fa-comment fa-lg new\"></i></span></p>\n                <ul className=\"messages-container list has-background-dark\">\n                    {/* <li className=\"list-item\"></li>\n                    <li className=\"list-item\"></li>\n                    <li className=\"list-item\"></li> */}\n\n                    {this.renderMessages()}\n                    {/* <li className=\"list-item\"></li>\n                    <li className=\"list-item\"></li> */}\n                    <li className=\"list-item\"></li>\n\n                </ul>\n\n\n                <MessageForm />\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        chat: state.chat,\n        user: state.room.user\n    }\n}\n\nexport default connect(mapStateToProps, { newMessageListener })(Chat);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateUserListener } from '../../../actions';\n\nclass UserList extends Component {\n    componentDidMount() {\n        this.props.updateUserListener()\n    }\n    renderUsers = () => {\n        let highestScore = this.props.users.reduce((a, b) => b.score > a.score ? b : b.score === a.score ? { name: '', score: b.score } : a, { name: '', score: -1 }).name\n        return this.props.users.sort((a, b) => b.score - a.score).map(({ name, id, score }) => {\n            return (\n                <li key={id}\n                    className=\"list-item user-list-item has-text-light bold is-size-5 play\">\n                    <span className={name.length > 7 ? 'is-size-7' : null}>{name}</span>\n                    <span className=\"is-pulled-right\">\n                        {name === highestScore ? <span className=\"icon\"><i className=\"fas fa-crown\"></i></span> : null}\n                        {name === this.props.master.name ? <span className=\"icon\"><i className=\"fas fa-brain\"></i></span> : null} {score} </span>\n                </li>\n            )\n        })\n    }\n    renderHeader() {\n        return (\n            <div className=\"header\">\n                <div className=\"columns is-mobile\">\n                    <div className=\"column is-one-third\">\n                        <a href=\"https://omarjuice.github.io/\" rel=\"noopener noreferrer\" target=\"_blank\" >\n                            <figure className=\"image is-4by3\">\n                                <img id={`OJ-logo`} src={`${process.env.PUBLIC_URL}/images/OJICONtrue.png`} alt={`OJ`} />\n                            </figure>\n                        </a>\n                    </div>\n                    {this.props.dictionary === 'Free' ? null :\n                        <div className=\"column is-two-thirds\">\n                            <a target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                href={this.props.dictionary === 'Oxford' ? 'https://developer.oxforddictionaries.com/' : 'https://www.urbandictionary.com/'}>\n                                <figure className=\"image is-3by1\">\n                                    <img id={`${this.props.dictionary}-logo`} src={`${process.env.PUBLIC_URL}/images/${this.props.dictionary}logo.png`} alt={`${this.props.dictionary} Dictionary`} />\n                                </figure>\n                            </a>\n                        </div>\n                    }\n\n                </div>\n            </div>\n        )\n    }\n    render() {\n        return (\n            <div id=\"user-list\" onClick={this.props.toggleMenu} className=\"column is-3 is-9-mobile\">\n                {this.renderHeader()}\n                <aside className=\"menu\">\n                    <p className=\"menu-label has-text-light has-text-centered title is-3 anton\">\n                        <strong>{this.props.room}</strong>\n\n                    </p>\n\n                    <ul className=\"menu-list\">\n                        {this.renderUsers()}\n                    </ul>\n\n                </aside>\n\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        users: state.room.users,\n        room: state.room.roomName,\n        master: state.hangman.master,\n        dictionary: state.room.dictionary\n    }\n}\n\nexport default connect(mapStateToProps, { updateUserListener })(UserList);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { skipMe, skipMaster } from '../../actions';\nimport { hangmanAnimation as animate } from '../../animations';\n\nclass Timer extends Component {\n    state = {\n        time: null,\n        timer: null\n    }\n    componentDidMount() {\n\n        this.setState({\n            time: this.props.time,\n            timer: this.getTimer()\n        }, () => {\n\n        })\n        this.blink = animate.blink('.blink')\n    }\n    getUserScore = () => {\n        if (this.props.user) {\n            return this.props.user.score\n        }\n    }\n    componentDidUpdate({ user, incorrect }) {\n        if (this.state.time && this.state.time < 6) {\n            this.blink.play()\n        }\n        if (user) {\n            let scoreIncrease = this.getUserScore() - user.score\n            let incorrectIncrease = this.props.incorrect - incorrect\n            let scoreVal = scoreIncrease > 0 || incorrectIncrease > 0\n            if (scoreVal) {\n                this.blink.pause()\n                this.setState({\n                    time: 60,\n                })\n            }\n        }\n    }\n    getTimer() {\n        return setInterval(() => {\n            if (this.state.time === 0) {\n                try {\n                    document.querySelector('.timer').style.opacity = 1\n                } catch (e) { }\n                clearInterval(this.state.timer)\n                this.setState({\n                    timer: null,\n                    time: null\n                })\n                this.setState({\n                    timer: this.getTimer(),\n                    time: this.props.time\n                })\n                if (this.props.svg) {\n                    return this.props.skipMe()\n                }\n                if (this.props.masterTimer) {\n                    return this.props.skipMaster()\n                }\n            } else {\n                return this.setState({\n                    time: this.state.time - 1\n                })\n            }\n        }, 1000)\n    }\n    componentWillUnmount() {\n        clearInterval(this.state.timer)\n        this.blink.pause()\n\n    }\n    render() {\n        let renderedTimer = this.props.svg ?\n            <tspan x={this.props.x} y={this.props.y}\n                className={`${this.state.time < 7 ? 'blink' : null} timer`}\n                style={{ fill: this.state.time < 10 ? 'red' : 'black', fontFamily: '\"Play\", sans-serif', fontSize: this.props.fontSize, opacity: 1 }}\n                textAnchor={this.props.textAnchor} >{this.state.time}</tspan>\n            : <span className={`is-size-3 play ${this.state.time < 7 ? 'blink' : 'timer'}`} style={{ color: this.state.time < 10 ? 'red' : 'black' }}>{this.state.time}</span>\n        return (\n            renderedTimer\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        user: state.room.users.filter((user) => user.name === state.room.user.name)[0],\n        incorrect: state.hangman.incorrect\n    }\n}\nexport default connect(mapStateToProps, { skipMe, skipMaster })(Timer);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { svgAnimation as animate } from '../../animations';\n\nclass XSVG extends Component {\n\n\n    componentDidUpdate = (prevProps) => {\n        if (this.props.incorrect > prevProps.incorrect) {\n            [document.querySelector(`#x-left-${this.props.incorrect - 1}`),\n            document.querySelector(`#x-right-${this.props.incorrect - 1}`)].forEach((stroke, i) => {\n                animate.drawStroke({\n                    selector: stroke,\n                    x1: i === 1 ? 20 : 5,\n                    x2: i === 1 ? 5 : 20,\n                    y1: (this.props.incorrect - 1) * 25 + 10,\n                    y2: (this.props.incorrect - 1) * 25 + 25,\n                }, i === 1)\n            })\n        }\n    }\n    renderXs = () => {\n        let color = this.props.color\n        return Array(this.props.incorrect).fill('x').map((x, i) => {\n            return (\n                <g key={`x-${i}`}>\n                    <line id={`x-left-${i}`} className=\"x-stroke-left\" x1=\"5\" y1={i * 25 + 10} x2=\"20\" y2={i * 25 + 25} stroke={color} strokeWidth=\"4\"></line>\n                    <line id={`x-right-${i}`} className=\"x-stroke-right\" x1=\"20\" y1={i * 25 + 10} x2=\"5\" y2={i * 25 + 25} stroke={color} strokeWidth=\"4\"></line>\n                </g>\n            )\n        })\n    }\n    render() {\n        return (\n            <g x={this.props.x} y={this.props.y}>\n                {this.renderXs()}\n            </g>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        incorrect: state.hangman.incorrect\n    }\n}\n\nexport default connect(mapStateToProps, null)(XSVG);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Timer from './Timer';\nimport XSVG from './XSVG';\nimport { svgAnimation as animate } from '../../animations';\n\n\nclass ManSVG extends Component {\n    constructor(props) {\n        super(props);\n        this.width = 150;\n        this.height = 200;\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            animate.draw('#draw-path path').finished.then(() => {\n                try {\n                    document.getElementById('body').style.opacity = 1;\n                    document.getElementById('hang').style.opacity = 1;\n                    document.getElementById('draw-path').style.opacity = 0\n                } catch (e) { }\n                try {\n                    animate.eyeBlink('#head ellipse')\n                    let rightWave = animate.wave('#right-arm', '#arc-right', 1, true, { easing: 'easeInCubic' });\n                    let leftWave = animate.wave('#left-arm', '#arc-left', 1, true, { easing: 'easeInCubic' });\n                    let rightWaveReverse = animate.wave('#right-arm', '#arc-right', 1, false, { direction: 'reverse', easing: 'easeOutCubic' });\n                    let leftWaveReverse = animate.wave('#left-arm', '#arc-left', 1, false, { direction: 'reverse', easing: 'easeOutCubic' });\n\n                    Promise.all(\n                        [rightWave.finished,\n                        leftWave.finished]\n                    ).then(() => {\n                        rightWaveReverse.play()\n                        leftWaveReverse.play()\n\n                    })\n                } catch (e) { }\n\n\n            })\n        }, 200)\n    }\n    componentDidUpdate(prevProps) {\n\n        if (this.props.isChoosing && !prevProps.isChoosing) {\n            animate.wave('#right-arm', '#arc-right', 1, true, { easing: 'easeInCubic' });\n            animate.wave('#left-arm', '#arc-left', 1, true, { easing: 'easeInCubic' });\n        }\n        if (this.props.incorrect >= 5 && this.props.gameOver) {\n            animate.wave('#door-left', '#door-arc-left', 1, false, { easing: 'easeInOutBack' }).play()\n            animate.wave('#door-right', '#door-arc-right', 1, false, { easing: 'easeInOutBack' }).play()\n            animate.eyeMovement('#head ellipse')\n\n            animate.fall('#body', '#fall-path', 1500)\n        } else if (this.props.incorrect < 5 && this.props.gameOver) {\n            animate.wave('#right-arm', '#arc-right', 1, false, { direction: 'reverse', easing: 'easeOutCubic' }).restart();\n            animate.wave('#left-arm', '#arc-left', 1, false, { direction: 'reverse', easing: 'easeOutCubic' }).restart();\n        }\n\n    }\n    componentWillUnmount() {\n        document.getElementById('body').style.opacity = 0;\n        document.getElementById('hang').style.opacity = 0;\n        document.getElementById('draw-path').style.opacity = 1\n    }\n    render() {\n        //directions left and right refer to hangman's perspective, not ours\n        const { width, height } = this\n        return (\n            <svg id=\"hangman-svg\" viewBox=\"0 0 150 200\" >\n                <g id=\"body\" style={{ opacity: 0 }}>\n                    <g id=\"head\">\n                        <circle cx=\"100\" cy=\"35\" r=\"20\" stroke=\"black\" strokeWidth=\"4\" fill=\"white\" />\n                        <ellipse cx=\"93\" cy=\"31\" rx=\"1.5\" ry=\"0\" stroke=\"black\" strokeWidth=\"4\" fill=\"black\" />\n                        <ellipse cx=\"106.9999995\" cy=\"31\" rx=\"1.5\" ry=\"0\" stroke=\"black\" strokeWidth=\"4\" fill=\"black\" />\n                    </g>\n                    <line x1=\"100\" y1=\"55.00000000000001\" x2=\"100\" y2=\"105\" stroke=\"black\" strokeWidth=\"4\" />\n                    <g id=\"legs\">\n                        <line x1=\"100\" y1=\"105\" x2=\"75\" y2=\"135\" stroke=\"black\" strokeWidth=\"4\" />\n                        <line x1=\"100\" y1=\"105\" x2=\"125\" y2=\"135\" stroke=\"black\" strokeWidth=\"4\" />\n                    </g>\n                    <g id=\"arms\">\n                        <line x1=\"100\" y1=\"70\" x2=\"79.99999994999999\" y2=\"105\" stroke=\"black\" strokeWidth=\"4\" id=\"right-arm\" />\n                        <line x1=\"100\" y1=\"70\" x2=\"120\" y2=\"105\" stroke=\"black\" strokeWidth=\"4\" id=\"left-arm\" />\n                    </g>\n                </g>\n                <g id=\"hang\" style={{ opacity: 0 }}>\n                    <line x1=\"25\" y1=\"0\" x2=\"100\" y2=\"0\" stroke=\"black\" strokeWidth=\"4\" />\n                    <line x1=\"100\" y1=\"0\" x2=\"100\" y2=\"15\" stroke=\"black\" strokeWidth=\"4\" />\n                    <line x1=\"25\" y1=\"0\" x2=\"25\" y2=\"150\" stroke=\"black\" strokeWidth=\"4\" />\n                    <line x1=\"0\" y1=\"150\" x2=\"70.4\" y2=\"150\" stroke=\"black\" strokeWidth=\"4\" />\n                    <line id=\"door-right\" x1=\"70.4\" y1=\"150\" x2=\"87\" y2=\"150\" stroke=\"black\" strokeWidth=\"4\" />\n                    <line id=\"door-left\" x1=\"131.8\" y1=\"150\" x2=\"87\" y2=\"150\" stroke=\"black\" strokeWidth=\"4\" />\n                    <line x1=\"131.8\" y1=\"150\" x2=\"150\" y2=\"150\" stroke=\"black\" strokeWidth=\"4\" />\n                </g>\n                <g id=\"incorrect\" >\n                    <XSVG x=\"0\" y=\"0\" color={this.props.master && this.props.master.name === this.props.user ? 'green' : 'red'} />\n                </g>\n                <path d=\"M99.7,0A17612.30316,17612.30316,0,0,1,100.3,198.2\" style={{ fill: 'none', stroke: 'black', strokeWidth: '0' }} id=\"fall-path\"></path>\n                <path d=\"M80.2,104.5A40.175389,40.175389,0,0,1,71,41.3\" style={{ fill: 'none', stroke: 'black', strokeWidth: '0' }} id=\"arc-right\"></path>\n                <path d=\"M119.5,105.4a40.330966,40.330966,0,0,0,9.800000000000011,-64.4\" style={{ fill: 'none', stroke: 'black', strokeWidth: '0' }} id=\"arc-left\"></path>\n                <path d=\"M100.30000000000001,149.7a28.546833473940513,28.546833473940513,0,0,1,-31.10000000000001,31.100000000000023\" style={{ fill: 'none', stroke: 'black', strokeWidth: 0 }} id=\"door-arc-right\"></path>\n                <path d=\"M101.20000000000003,150.00000000000003a29.695768,29.695768,0,0,0,30.79999999999997,31.399999999999977\" style={{ fill: 'none', stroke: 'black', strokeWidth: 0 }} id=\"door-arc-left\"></path>\n                <g id=\"draw-path\">\n                    <path d=\"M-0.000045776367187500054,149.59115115239797a7757.653107,7757.653107,0,0,0,149.2991565454786,0\" strokeDasharray=\"500px\" style={{ stroke: 'black', strokeWidth: 4, strokeDashoffset: '600px', opacity: 0 }} id=\"e2_circleArc\"></path>\n                    <path d=\"M24.88312674821077,149.59115898842077a7960.346621810846,7960.346621810846,0,0,0,0,-149.64965737471442\" strokeDasharray=\"500px\" style={{ stroke: 'black', strokeWidth: 4, strokeDashoffset: '600px', opacity: 0 }} id=\"e3_circleArc\"></path>\n                    <path d=\"M24.532659166536973,0.29196919538015464a8575.208967,8575.208967,0,0,0,75.35053005986788,3.552713678800501e-15\" strokeDasharray=\"500px\" style={{ stroke: 'black', strokeWidth: 4, strokeDashoffset: '600px', opacity: 0 }} id=\"e4_circleArc\"></path>\n                    <path d=\"M99.88318922640485,-0.05849838629364615a8017.099184,8017.099184,0,0,0,0,15.07010601197358\" strokeDasharray=\"500px\" style={{ stroke: 'black', strokeWidth: 4, strokeDashoffset: '600px', opacity: 0 }} id=\"e5_circleArc\"></path>\n                    <path d=\"M99.53272164473107,14.661140044006128a20.200062,20.200062,0,1,0,0.7009351633476371,0\" strokeDasharray=\"500px\" style={{ stroke: 'black', strokeWidth: 4, strokeDashoffset: '600px', opacity: 0, fill: '#ecf0f1 ' }} id=\"e7_circleArc\"></path>\n                    <path d=\"M99.88318922640484,55.31537951816741a1084.937941,1084.937941,0,0,1,2.842170943040401e-14,49.76639659768022\" strokeDasharray=\"500px\" style={{ stroke: 'black', strokeWidth: 4, strokeDashoffset: '600px', opacity: 0 }} id=\"e8_circleArc\"></path>\n                    <path d=\"M100.2336568080787,70.0350179484672a36175.742371,36175.742371,0,0,1,-19.976652155406867,34.696290585706606\" strokeDasharray=\"500px\" style={{ stroke: 'black', strokeWidth: 4, strokeDashoffset: '600px', opacity: 0 }} id=\"e9_circleArc\"></path>\n                    <path d=\"M100.2336568080787,70.7359531118148a1499.0900539256015,1499.0900539256015,0,0,1,19.626184573732985,34.34582300403282\" strokeDasharray=\"500px\" style={{ stroke: 'black', strokeWidth: 4, strokeDashoffset: '600px', opacity: 0 }} id=\"e10_circleArc\"></path>\n                    <path d=\"M99.88318922640485,105.08177611584762a1251.7493332778943,1251.7493332778943,0,0,0,-24.53273071716626,29.439276860599563\" strokeDasharray=\"500px\" style={{ stroke: 'black', strokeWidth: 4, strokeDashoffset: '600px', opacity: 0 }} id=\"e11_circleArc\"></path>\n                    <path d=\"M99.88318922640485,105.43224369752141a411.4713278793467,411.4713278793467,0,0,1,24.883198298840128,29.78974444227336\" strokeDasharray=\"500px\" style={{ stroke: 'black', strokeWidth: 4, strokeDashoffset: '600px', opacity: 0 }} id=\"e13_circleArc\"></path>\n                </g>\n                < g>\n\n                    <text>\n                        {this.props.myTurn && !this.props.isChoosing && !this.props.gameOver && this.props.master.name ?\n                            <Timer x={width * 5 / 12} y={height * 5 / 12} fontSize={height * .2} textAnchor=\"middle\" svg={true} time={60} />\n                            : null}\n                    </text>\n                    <text>\n                        {/* <tspan x={width * .5} y={height * .9} style={{ fill: 'black', fontSize: height * .1 }} textAnchor=\"middle\">\n                            {this.props.currentTurn && this.props.master.name && !this.props.isChoosing ? this.props.myTurn ? `Your turn, ${this.props.user}!` : `Waiting for ${this.props.currentTurn}...` : null}\n                        </tspan> */}\n                    </text>\n                </g>\n\n            </svg>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        currentTurn: state.hangman.turn.name,\n        user: state.room.user.name,\n        master: state.hangman.master,\n        isChoosing: state.hangman.isChoosing,\n        myTurn: state.hangman.myTurn,\n        gameOver: state.hangman.gameOver,\n        skip: state.hangman.skip,\n        incorrect: state.hangman.incorrect,\n    }\n}\nexport default connect(mapStateToProps)(ManSVG);\n","import React, { Component } from 'react';\nimport ManSVG from '../../SVG/ManSVG';\nimport { connect } from 'react-redux';\nimport Loader from '../../SVG/Loader';\nimport { hangmanAnimation as animate } from '../../../animations';\n\n\nclass Waiting extends Component {\n    componentDidMount() {\n        animate.changeScreen('.screen')\n\n\n    }\n    render() {\n        let clientWidth = document.querySelector('body').clientWidth\n        return (\n            <>\n                <div className=\"column is-one-fifth is-full-mobile has-text-centered\">\n                    <ManSVG />\n                </div>\n                <div id=\"waiting-text\" className=\"column is-half\">\n                    <p className=\"subtitle is-4 has-text-centered has-text-dark play\">{this.props.word.length > 2 ? <span>The word was <strong className=\"has-text-dark\">{this.props.word.join('')}</strong></span> : null}</p>\n                    <h1 className=\"anton title is-3 has-text-centered has-text-dark\">\n                        Waiting for {this.props.isChoosing && this.props.numUsers > 1 ? <><span className=\"has-text-primary\">{this.props.master.name}</span><span> to choose a word</span></> : `more players`}\n                    </h1>\n                    <Loader scale={clientWidth > 1300 ? 1 : clientWidth > 1024 ? .75 : clientWidth > 768 ? .5 : .4} />\n                </div>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isChoosing: state.hangman.isChoosing,\n        master: state.hangman.master,\n        word: state.hangman.word,\n        numUsers: state.room.users.length\n    }\n}\n\nexport default connect(mapStateToProps)(Waiting);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass WordBlank extends Component {\n\n    renderText = () => {\n        let word = this.props.word\n        let increment = (140 / word.length)\n        let arr = [];\n        let x = 0;\n        let y = 30\n\n        for (let i = 0; i < word.length; i++) {\n            arr.push(\n                <g className=\"word-blank\" key={i}>\n                    <text>\n                        <tspan x={x + increment / 2} y={y}\n                            style={{ fontSize: increment > 25 ? 25 : increment, fontFamily: '\"Play\", sans-serif' }}\n                            fill={this.props.gameOver && this.props.isCorrect ? 'green' : this.props.gameOver && !this.props.isCorrect ? 'red' : 'black'}\n                            textAnchor=\"middle\">\n                            {this.props.selectedLetters.includes(word[i]) || this.props.gameOver ? word[i] : '?'}\n                        </tspan>\n                    </text>\n                    <line x1={x + increment * .05} y1={y + 2} x2={x + increment * .95} y2={y + 2} stroke=\"black\" strokeWidth=\"2\" />\n                </g>\n            )\n            x += increment\n        }\n        return arr\n    }\n\n    render() {\n        return (\n            <svg id=\"word-blanks\" width=\"100%\" height=\"50%\" viewBox=\"0 0 140 35\">\n                {this.renderText()}\n            </svg>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        word: state.hangman.word,\n        selectedLetters: state.hangman.selectedLetters,\n        isCorrect: state.hangman.isCorrect,\n        gameOver: state.hangman.gameOver,\n    }\n}\nexport default connect(mapStateToProps, null)(WordBlank);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { letterSelected, letterListener } from '../../../actions/index';\nimport { hangmanAnimation as animate } from '../../../animations';\n\nclass Letters extends Component {\n\n    componentDidMount() {\n        this.props.letterSelected()\n    }\n\n    selectLetter = (letter) => () => {\n        if (!this.props.gameOver && this.props.myTurn) {\n            animate.shrinkToNothing(`#letter-${letter}`).finished.then(() => this.props.letterSelected(letter))\n        }\n    }\n    renderLetterButtons = () => {\n        return this.props.remainingLetters.map((letter) => {\n            return (\n                <p key={letter} id={`letter-${letter}`} onClick={this.selectLetter(letter)} className={`button play letter ${this.props.myTurn ? 'glow' : null}`}>{letter}</p>\n            )\n        })\n    }\n    render() {\n        return (\n            <div style={{ margin: 0, padding: 0 }}>\n                {this.renderLetterButtons()}\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        remainingLetters: state.hangman.remainingLetters,\n        gameOver: state.hangman.gameOver,\n        myTurn: state.hangman.myTurn\n\n    }\n}\n\nexport default connect(mapStateToProps, { letterSelected, letterListener })(Letters);\n","import React, { Component } from 'react';\nimport ManSVG from '../../SVG/ManSVG';\nimport WordBlank from './WordBlank';\nimport Letters from './Letters';\nimport { connect } from 'react-redux';\nimport { nextTurnListener } from '../../../actions';\nimport { hangmanAnimation as animate } from '../../../animations';\nimport Loader from '../../SVG/Loader';\n\nclass Hangman extends Component {\n    state = {\n        mobileDisplayed: false\n        //false for hint true for letters\n    }\n    componentDidMount() {\n        this.props.nextTurnListener()\n        animate.changeScreen('.screen')\n    }\n    changeDisplay = () => {\n        this.setState({\n            mobileDisplayed: !this.state.mobileDisplayed\n        })\n    }\n    componentDidUpdate() {\n        if (!this.props.myTurn && this.state.mobileDisplayed) {\n            this.setState({\n                mobileDisplayed: false\n            })\n        }\n    }\n    render() {\n        let bodyHeight = document.querySelector('html').clientHeight > 670\n        return (\n            <>\n                <div id=\"svg-container\" className=\"column is-one-fifth is-full-mobile has-text-centered\">\n                    <ManSVG />\n                    <p id=\"info-text\" className=\"is-size-6 play\">\n                        {this.props.currentTurn && this.props.master.name && !this.props.isChoosing ? this.props.myTurn ? <span>Your turn, {this.props.user}!</span> : <span>Waiting for {this.props.currentTurn}<Loader scale={.1} /></span> : null}\n                        {!bodyHeight && !this.props.gameOver && this.props.myTurn ?\n                            <button id=\"small-screen-toggler\" onClick={this.changeDisplay} className=\"button is-dark is-small\">\n                                <span className=\"icon\">\n                                    {this.state.mobileDisplayed ? <i className=\"fas fa-question-circle\"></i> : <i className=\"fas fa-pencil-alt\"></i>\n                                    }</span>\n                            </button>\n                            : null}\n                    </p>\n                </div>\n                <div id=\"word-container\" className=\"column is-half has-text-centered is-two-thirds-tablet is-full-mobile\">\n                    <WordBlank />\n                    {this.props.gameOver ? <Loader scale={.25} /> : !this.state.mobileDisplayed || bodyHeight ? <p id=\"hint\" className=\"subtitle has-text-dark has-text-centered\">{this.props.hint}</p> : null}\n                    {this.props.hint && !this.props.gameOver && this.props.hint.length > 90 && (!this.state.mobileDisplayed || bodyHeight) ? <span className=\"icon\"><i className=\"fas fa-sort-down\"></i></span> : null}\n\n                </div>\n                <div id=\"letter-buttons\" className=\"column is-one-quarter is-half-tablet has-text-centered\">\n                    {this.state.mobileDisplayed || bodyHeight ? <Letters /> : null}\n                </div>\n            </>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return ({\n        hint: state.hangman.hint,\n        gameOver: state.hangman.gameOver,\n        master: state.hangman.master,\n        isChoosing: state.hangman.isChoosing,\n        currentTurn: state.hangman.turn.name,\n        myTurn: state.hangman.myTurn,\n        user: state.room.user.name\n    })\n}\nexport default connect(mapStateToProps, { nextTurnListener })(Hangman);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { newWord, wordInfoListener } from '../../../actions'\nimport Timer from '../../SVG/Timer';\nimport { hangmanAnimation as animate } from '../../../animations';\nimport Loader from '../../SVG/Loader';\nimport ErrorMessage from '../../ErrorMessage';\nclass GameInit extends Component {\n    componentDidMount() {\n        animate.changeScreen('.screen')\n        this.props.wordInfoListener()\n    }\n    getHeading = () => {\n        if (this.props.word.length > 2) {\n            return (\n                <>\n                    <h1 className=\"title is-4 has-text-dark play\">Game Over!</h1>\n                    <p className=\"has-text-dark play is-size-5\">The word was <strong className=\"has-text-dark\">{this.props.word}</strong>.</p>\n\n                </>\n            )\n        }\n    }\n\n    onSubmit = (formValues) => {\n        formValues.word = formValues.word.trim();\n        if (formValues.hint) {\n            formValues.hint = formValues.hint.trim()\n        }\n        this.props.newWord(formValues)\n    }\n    renderInput = ({ input, autoFocus, label, meta }) => {\n        const labelClass = meta.touched && meta.error ? 'label has-background-danger' : 'label has-background-dark'\n        return (\n            <div className=\"field\">\n                <label className={labelClass}>{meta.touched && meta.error ? meta.error : label}</label>\n                <div className=\"control\">\n                    <input className=\"input is-dark\" {...input} type=\"text\" autoFocus={autoFocus} autoComplete=\"off\" />\n                </div>\n\n            </div>\n        )\n    }\n    render() {\n        return (\n            <>\n                <div id=\"word-form-header\" className=\"column is-one-third\">\n                    <div className=\"has-text-centered\">\n                        {this.getHeading()}\n                        <p className=\"subtitle is-4 has-text-dark play\">Pick a word, <span className=\"has-text-primary\">{this.props.master.name}</span>.</p>\n                        {this.props.Error.exists ? <ErrorMessage /> : this.props.loading ? <Loader scale={.15} /> : <Timer time={this.props.hasFreeDict ? 120 : 60} masterTimer={true} />}\n                        <p><strong className=\"has-text-danger\">{this.props.info}</strong></p>\n                    </div>\n                </div>\n\n                <div id=\"word-form\" className=\"column is-two-thirds has-text-centered play\">\n                    <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"form has-text-centered\">\n                        <Field name=\"word\" component={this.renderInput} autoFocus={true} label=\"Choose a word\" />\n                        {this.props.hasFreeDict ? <Field name=\"hint\" component={this.renderInput} autoFocus={false} label=\"Give them a hint!\" /> : null}\n\n                        <div className=\"control has-text-centered\">\n                            <button className=\"button is-dark is-small\"><span className=\"icon\"><i className=\"fas fa-play-circle\"></i></span></button>\n                        </div>\n                    </form>\n                </div>\n            </>\n        );\n    }\n}\nconst validate = ({ word, hint }) => {\n\n    const errors = {}\n    let regex = /[^a-z]/gi\n    if (word) {\n        word = word.trim()\n    }\n    if (hint) {\n        hint = hint.trim()\n    }\n\n    if (!word || word.length < 1) {\n        errors.word = 'You must enter a word'\n    }\n    if (word && word.length < 3) {\n        errors.word = 'Must be at least 3 letters'\n    }\n    if (word && regex.test(word)) {\n        errors.word = 'Must only contain letters'\n    }\n    if (!hint || hint.length < 1) {\n        errors.hint = 'You must enter a hint'\n    }\n    return errors\n}\nconst GameInitForm = reduxForm({\n    form: 'GameInit',\n    validate\n})(GameInit)\nconst mapStateToProps = (state) => {\n    return {\n        word: state.hangman.word.join(''),\n        gameOver: state.hangman.gameOver,\n        master: state.hangman.master,\n        user: state.room.user,\n        hasFreeDict: state.room.dictionary === 'Free',\n        loading: state.loading,\n        Error: state.error,\n        info: state.hangman.info\n    }\n}\nexport default connect(mapStateToProps, { newWord, wordInfoListener })(GameInitForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { letterListener } from '../../../actions';\nimport Waiting from './Waiting';\nimport Hangman from './Hangman';\nimport GameInit from './GameInit';\nimport { newMasterListener } from '../../../actions/index';\n\n\nclass Screen extends Component {\n    componentDidMount() {\n        this.props.letterListener()\n        this.props.newMasterListener()\n    }\n    handleScreenClick() {\n        document.querySelector('.fa-comment').classList.remove('is-active')\n        document.querySelector('.messages-container').classList.remove('is-active')\n        document.querySelector('.navbar-burger').classList.remove('is-active')\n        document.querySelector('#user-list').classList.remove('is-active')\n    }\n    renderScreen = () => {\n        if (this.props.numUsers < 2) {\n            return <Waiting />\n        } else if (this.props.isChoosing) {\n            if (this.props.master.name === this.props.user.name) {\n                return <GameInit />\n            }\n            return <Waiting />\n        }\n        return <Hangman />\n    }\n    render() {\n        return (\n            <div id=\"hangman\" className=\"column is-9\">\n                <div className={`box screen has-background-light`} onClick={this.handleScreenClick}>\n                    <div className=\"columns is-centered has-text-dark has-text-centered\">\n\n                        {this.renderScreen()}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        numUsers: state.room.users.length,\n        isChoosing: state.hangman.isChoosing,\n        master: state.hangman.master,\n        user: state.room.user,\n        gameOver: state.hangman.gameOver,\n    }\n}\n\nexport default connect(mapStateToProps, { letterListener, newMasterListener })(Screen);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Chat from './Chat/Chat';\nimport UserList from './Chat/UserList';\nimport history from '../../history';\nimport Screen from './Hangman/Screen';\nimport { newMasterListener, wordSetListener } from '../../actions/index';\nimport { hangmanAnimation as animate } from '../../animations';\nconst toggleMenu = () => {\n    document.querySelector('.navbar-burger').classList.toggle('is-active')\n    document.querySelector('#user-list').classList.toggle('is-active')\n    document.querySelector('.fa-comment').classList.remove('is-active')\n    document.querySelector('.messages-container').classList.remove('is-active')\n}\nclass ChatRoom extends Component {\n    componentDidMount() {\n        //--Fixes a display issue in Safari\n        document.querySelector('html').style.display = 'none';\n        setTimeout(() => {\n            document.querySelector('html').style.display = 'block';\n        }, 50)\n        //----------------------\n\n        document.querySelector('title').textContent = 'Play | Hangman'\n        document.getElementById('css-load').setAttribute('href', process.env.PUBLIC_URL + '/chatStyle.css')\n        if (!this.props.room) {\n            return history.push('/Hangman')\n        }\n\n        this.props.newMasterListener()\n        this.props.wordSetListener()\n        animate.turnOn('.screen')\n        // animate.flicker('.screen')\n        //flicker effect for crt screen. removed for accessibility\n    }\n    render() {\n        return (\n            <div className=\"columns is-multiline\">\n                <Screen />\n                {this.props.connection ? '' : 'No Room'}\n                <UserList toggleMenu={toggleMenu} />\n                <Chat toggleMenu={toggleMenu} />\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return ({\n        connection: state.connection,\n        room: state.room.roomName\n    })\n}\n\n\n\nexport default connect(mapStateToProps, { newMasterListener, wordSetListener })(ChatRoom);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createConnection, bootServer, serverError } from '../actions/index';\nimport { Router, Route } from 'react-router-dom';\nimport history from '../history';\nimport JoinPage from './Join/Page';\nimport GameRoom from './Room/GameRoom';\n\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.bootServer()\n        this.props.createConnection()\n\n    }\n    render() {\n        return (\n            <>\n                <Router history={history}>\n                    <>\n                        <Route path=\"/Hangman\" exact component={JoinPage} />\n                        <Route path=\"/Hangman/:roomname\" exact component={GameRoom} />\n                    </>\n                </Router>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        connection: state.connection,\n\n    }\n}\n\nexport default connect(mapStateToProps, { createConnection, bootServer, serverError })(App);\n","export default {\n    connected: false,\n    chat: {\n        messages: []\n    },\n    room: {\n        roomName: '',\n        user: {},\n        users: [],\n        dictionary: false,\n    },\n    error: {\n        exists: false,\n        message: ''\n    },\n    loading: false,\n    meta: [],\n    hangman: {\n        master: {},\n        isChoosing: false,\n        word: [],\n        info: false,\n        hint: '',\n        myTurn: false,\n        remainingLetters: [],\n        selectedLetters: [],\n        numGames: 0,\n        turn: {\n            name: ''\n        },\n        isCorrect: false,\n        incorrect: 0,\n        gameOver: false\n    }\n}","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport connectionReducer from './connectionReducer';\nimport chatReducer from './chatReducer';\nimport roomReducer from './roomReducer';\nimport errorReducer from './errorReducer';\nimport loadingReducer from './loadingReducer';\nimport metaReducer from './metaReducer';\nimport hangmanReducer from './hangmanReducers';\n\nexport default combineReducers({\n    connection: connectionReducer,\n    chat: chatReducer,\n    room: roomReducer,\n    error: errorReducer,\n    loading: loadingReducer,\n    meta: metaReducer,\n    form: formReducer.plugin({\n        MessageForm: (state, action) => {\n            switch (action.type) {\n                case '@@redux-form/SET_SUBMIT_SUCCEEDED':\n                    return undefined;\n                default:\n                    return state\n            }\n        }\n    }),\n    hangman: hangmanReducer\n})\n","import { CONNECT, DISCONNECT } from '../actions/types';\nimport defaultState from './defaultState';\n\nexport default (state = defaultState.connected, action) => {\n    switch (action.type) {\n        case CONNECT:\n            return action.connected;\n        case DISCONNECT:\n            return false;\n        default:\n            return state\n    }\n}","import defaultState from './defaultState';\nimport { NEW_MESSAGE } from '../actions/types';\n\nexport default (state = defaultState.chat, action) => {\n    switch (action.type) {\n        case NEW_MESSAGE:\n            return { ...state, messages: action.messageList };\n        default:\n            return state\n    }\n}","import defaultState from './defaultState';\nimport { NEW_USER, UPDATE_LIST, ASK_FOR_DICT } from '../actions/types';\n\nexport default (state = defaultState.room, action) => {\n    switch (action.type) {\n        case ASK_FOR_DICT:\n            return { ...state, user: { ...state.user, name: action.name }, roomName: action.room, dictionary: action.dictionary }\n        case NEW_USER:\n            return { ...state, user: action.user, roomName: action.room, dictionary: action.dictionary };\n        case UPDATE_LIST:\n            return { ...state, users: action.payload };\n        default:\n            return state\n    }\n}","import defaultState from './defaultState';\nimport { ERROR, } from '../actions/types';\n\nexport default (state = defaultState.error, action) => {\n    switch (action.type) {\n        case ERROR:\n            return action.error;\n        default:\n            return state\n    }\n}","import defaultState from './defaultState';\nimport { LOADING, CANCEL_LOAD } from '../actions/types';\n\nexport default (state = defaultState.loading, action) => {\n    switch (action.type) {\n        case LOADING:\n            return true;\n        case CANCEL_LOAD:\n            return false;\n        default:\n            return state\n    }\n}","import defaultState from './defaultState';\nimport { META_DATA } from '../actions/types';\n\nexport default (state = defaultState.meta, action) => {\n    switch (action.type) {\n        case META_DATA:\n            return action.data;\n        default:\n            return state\n    }\n}","import defaultState from './defaultState';\nimport { LETTER_SELECTED, NEW_MASTER, NEW_WORD, MY_TURN, WORD_INFO } from '../actions/types';\nexport default (state = defaultState.hangman, action) => {\n    switch (action.type) {\n        case NEW_MASTER:\n            return {\n                ...state,\n                ...action.game\n            };\n        case NEW_WORD:\n            return {\n                ...state,\n                ...action.game, info: false\n            }\n        case WORD_INFO:\n            return {\n                ...state,\n                info: action.info\n            }\n        case MY_TURN:\n            return {\n                ...state,\n                myTurn: action.myTurn,\n                ...action.game\n            }\n        case LETTER_SELECTED:\n            return {\n                ...state,\n                ...action.game\n            };\n        default:\n            return state\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport App from './components/App';\nimport reducers from './reducers';\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(reducers,\n    composeEnhancers(applyMiddleware(thunk))\n)\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.querySelector('#root'))"],"sourceRoot":""}